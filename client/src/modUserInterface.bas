Attribute VB_Name = "modUserInterface"
Option Explicit

'Hide/Show GUI Options
Public HideBars As Boolean
Public HideMenu As Boolean
Public HideChat As Boolean
Public HideHotbar As Boolean

Public FontColor As Long



Public MENU_STYLE As Long '0 is classic, 1 is new style and much more customizable

Public MenuStage As Long
Public SelTextbox As Long

Public TxtUsername As String
Public txtPassword As String
Public TxtPassword2 As String

Public IntroType As Long
Public IntroImages() As DX8TextureRec
Public IntroFade As Long
Public IntroTimer As Long
Public IntroSkip As Long

Public CurrentGameMenu As Long

'RunTime Variables
Public IntroStep As Long
Public InIntro As Long
Public IntroTick As Long

Public MenuWidth As Long
Public MenuHeight As Long
Public MenuImage As DX8TextureRec
Public GUIContainerX As Long
Public GUIContainerY As Long
Public GUIContainerWidth As Long
Public GUIContainerHeight As Long
Public GUIContainerImage As DX8TextureRec
Public OpenLoginX As Long
Public OpenLoginY As Long
Public OpenLoginWidth As Long
Public OpenLoginHeight As Long
Public OpenLoginBounds As rect
Public OpenLoginSrcBounds As rect
Public OpenLoginNormImage As DX8TextureRec
Public OpenLoginClickImage As DX8TextureRec
Public OpenLoginHoverImage As DX8TextureRec
Public OpenLoginState As Byte
Public OpenRegisterX As Long
Public OpenRegisterY As Long
Public OpenRegisterWidth As Long
Public OpenRegisterHeight As Long
Public OpenRegisterBounds As rect
Public OpenRegisterSrcBounds As rect
Public OpenRegisterNormImage As DX8TextureRec
Public OpenRegisterClickImage As DX8TextureRec
Public OpenRegisterHoverImage As DX8TextureRec
Public OpenRegisterState As Byte
Public OpenCreditsX As Long
Public OpenCreditsY As Long
Public OpenCreditsWidth As Long
Public OpenCreditsHeight As Long
Public OpenCreditsBounds As rect
Public OpenCreditsSrcBounds As rect
Public OpenCreditsNormImage As DX8TextureRec
Public OpenCreditsClickImage As DX8TextureRec
Public OpenCreditsHoverImage As DX8TextureRec
Public OpenCreditsState As Byte
Public ExitGameX As Long
Public ExitGameY As Long
Public ExitGameWidth As Long
Public ExitGameHeight As Long
Public ExitGameBounds As rect
Public ExitGameSrcBounds As rect
Public ExitGameNormImage As DX8TextureRec
Public ExitGameClickImage As DX8TextureRec
Public ExitGameHoverImage As DX8TextureRec
Public ExitGameState As Byte
Public LoginPanelX As Long
Public LoginPanelY As Long
Public LoginPanelWidth As Long
Public LoginPanelHeight As Long
Public LoginPanelBounds As rect
Public LoginPanelSrcBounds As rect
Public LoginPanelImage As DX8TextureRec
Public LUsernameX As Long
Public LUsernameY As Long
Public LUsernameWidth As Long
Public LUsernameHeight As Long
Public LUsernameBounds As rect
Public LUsernameSrcBounds As rect
Public LUsernameImage As DX8TextureRec
Public LPasswordX As Long
Public LPasswordY As Long
Public LPasswordWidth As Long
Public LPasswordHeight As Long
Public LPasswordBounds As rect
Public LPasswordSrcBounds As rect
Public LPasswordImage As DX8TextureRec
Public SaveInfoCheckX As Long
Public SaveInfoCheckY As Long
Public SaveInfoCheckWidth As Long
Public SaveInfoCheckHeight As Long
Public SaveInfoCheckBounds As rect
Public SaveInfoCheckSrcBounds As rect
Public SaveInfoCheckNormImage As DX8TextureRec
Public SaveInfoCheckClickImage As DX8TextureRec
Public SaveInfoCheckHoverImage As DX8TextureRec
Public SaveInfoCheckState As Byte
Public LoginButtonX As Long
Public LoginButtonY As Long
Public LoginButtonWidth As Long
Public LoginButtonHeight As Long
Public LoginButtonBounds As rect
Public LoginButtonSrcBounds As rect
Public LoginButtonNormImage As DX8TextureRec
Public LoginButtonClickImage As DX8TextureRec
Public LoginButtonHoverImage As DX8TextureRec
Public LoginButtonState As Byte
Public RegisterPanelX As Long
Public RegisterPanelY As Long
Public RegisterPanelWidth As Long
Public RegisterPanelHeight As Long
Public RegisterPanelBounds As rect
Public RegisterPanelSrcBounds As rect
Public RegisterPanelImage As DX8TextureRec
Public RUsernameX As Long
Public RUsernameY As Long
Public RUsernameWidth As Long
Public RUsernameHeight As Long
Public RUsernameBounds As rect
Public RUsernameSrcBounds As rect
Public RUsernameImage As DX8TextureRec
Public RPasswordX As Long
Public RPasswordY As Long
Public RPasswordWidth As Long
Public RPasswordHeight As Long
Public RPasswordBounds As rect
Public RPasswordSrcBounds As rect
Public RPasswordImage As DX8TextureRec
Public RPassword2X As Long
Public RPassword2Y As Long
Public RPassword2Width As Long
Public RPassword2Height As Long
Public RPassword2Bounds As rect
Public RPassword2SrcBounds As rect
Public RPassword2Image As DX8TextureRec
Public RegisterButtonX As Long
Public RegisterButtonY As Long
Public RegisterButtonWidth As Long
Public RegisterButtonHeight As Long
Public RegisterButtonBounds As rect
Public RegisterButtonSrcBounds As rect
Public RegisterButtonNormImage As DX8TextureRec
Public RegisterButtonClickImage As DX8TextureRec
Public RegisterButtonHoverImage As DX8TextureRec
Public RegisterButtonState As Byte
Public NewsPanelX As Long
Public NewsPanelY As Long
Public NewsPanelWidth As Long
Public NewsPanelHeight As Long
Public NewsPanelBounds As rect
Public NewsPanelImage As DX8TextureRec
Public CreditsPanelX As Long
Public CreditsPanelY As Long
Public CreditsPanelWidth As Long
Public CreditsPanelHeight As Long
Public CreditsPanelBounds As rect
Public CreditsPanelImage As DX8TextureRec

Public NewCharPanelX As Long
Public NewCharPanelY As Long
Public NewCharPanelWidth As Long
Public NewCharPanelHeight As Long
Public NewCharPanelBounds As rect
Public NewCharPanelSrcBounds As rect
Public NewCharPanelImage As DX8TextureRec
Public NCTextboxX As Long
Public NCTextboxY As Long
Public NCTextboxWidth As Long
Public NCTextboxHeight As Long
Public NCTextboxBounds As rect
Public NCTextboxSrcBounds As rect
Public NCTextboxImage As DX8TextureRec
Public NCPreviewX As Long
Public NCPreviewY As Long
Public NCPreviewWidth As Long
Public NCPreviewHeight As Long
Public NCPreviewBounds As rect
Public NCPreviewSrcBounds As rect
Public PrevClassX As Long
Public PrevClassY As Long
Public PrevClassWidth As Long
Public PrevClassHeight As Long
Public PrevClassBounds As rect
Public PrevClassSrcBounds As rect
Public PrevClassNormImage As DX8TextureRec
Public PrevClassClickImage As DX8TextureRec
Public PrevClassHoverImage As DX8TextureRec
Public PrevClassState As Byte
Public NextClassX As Long
Public NextClassY As Long
Public NextClassWidth As Long
Public NextClassHeight As Long
Public NextClassBounds As rect
Public NextClassSrcBounds As rect
Public NextClassNormImage As DX8TextureRec
Public NextClassClickImage As DX8TextureRec
Public NextClassHoverImage As DX8TextureRec
Public NextClassState As Byte
Public NCClassNameX As Long
Public NCClassNameY As Long
Public NCClassNameWidth As Long
Public NCClassNameHeight As Long
Public NCClassNameBounds As rect
Public NCClassNameSrcBounds As rect
Public NCClassNameImage As DX8TextureRec
Public MaleButtonX As Long
Public MaleButtonY As Long
Public MaleButtonWidth As Long
Public MaleButtonHeight As Long
Public MaleButtonBounds As rect
Public MaleButtonSrcBounds As rect
Public MaleButtonNormImage As DX8TextureRec
Public MaleButtonClickImage As DX8TextureRec
Public MaleButtonHoverImage As DX8TextureRec
Public MaleButtonState As Byte
Public FemaleButtonX As Long
Public FemaleButtonY As Long
Public FemaleButtonWidth As Long
Public FemaleButtonHeight As Long
Public FemaleButtonBounds As rect
Public FemaleButtonSrcBounds As rect
Public FemaleButtonNormImage As DX8TextureRec
Public FemaleButtonClickImage As DX8TextureRec
Public FemaleButtonHoverImage As DX8TextureRec
Public FemaleButtonState As Byte
Public NCAcceptX As Long
Public NCAcceptY As Long
Public NCAcceptWidth As Long
Public NCAcceptHeight As Long
Public NCAcceptBounds As rect
Public NCAcceptSrcBounds As rect
Public NCAcceptNormImage As DX8TextureRec
Public NCAcceptClickImage As DX8TextureRec
Public NCAcceptHoverImage As DX8TextureRec
Public NCAcceptState As Byte

Public NextHairX As Long
Public NextHairY As Long
Public NextHairWidth As Long
Public NextHairHeight As Long
Public NextHairNormImage As DX8TextureRec
Public NextHairClickImage As DX8TextureRec
Public NextHairHoverImage As DX8TextureRec
Public NextHairBounds As rect
Public NextHairSrcBounds As rect
Public NextHairState As Byte
Public NextHeadX As Long
Public NextHeadY As Long
Public NextHeadWidth As Long
Public NextHeadHeight As Long
Public NextHeadNormImage As DX8TextureRec
Public NextHeadClickImage As DX8TextureRec
Public NextHeadHoverImage As DX8TextureRec
Public NextHeadBounds As rect
Public NextHeadSrcBounds As rect
Public NextHeadState As Byte
Public NextEyeX As Long
Public NextEyeY As Long
Public NextEyeWidth As Long
Public NextEyeHeight As Long
Public NextEyeNormImage As DX8TextureRec
Public NextEyeClickImage As DX8TextureRec
Public NextEyeHoverImage As DX8TextureRec
Public NextEyeBounds As rect
Public NextEyeSrcBounds As rect
Public NextEyeState As Byte
Public NextEyebrowX As Long
Public NextEyebrowY As Long
Public NextEyebrowWidth As Long
Public NextEyebrowHeight As Long
Public NextEyebrowNormImage As DX8TextureRec
Public NextEyebrowClickImage As DX8TextureRec
Public NextEyebrowHoverImage As DX8TextureRec
Public NextEyebrowBounds As rect
Public NextEyebrowSrcBounds As rect
Public NextEyebrowState As Byte
Public NextEarX As Long
Public NextEarY As Long
Public NextEarWidth As Long
Public NextEarHeight As Long
Public NextEarNormImage As DX8TextureRec
Public NextEarClickImage As DX8TextureRec
Public NextEarHoverImage As DX8TextureRec
Public NextEarBounds As rect
Public NextEarSrcBounds As rect
Public NextEarState As Byte
Public NextNoseX As Long
Public NextNoseY As Long
Public NextNoseWidth As Long
Public NextNoseHeight As Long
Public NextNoseNormImage As DX8TextureRec
Public NextNoseClickImage As DX8TextureRec
Public NextNoseHoverImage As DX8TextureRec
Public NextNoseBounds As rect
Public NextNoseSrcBounds As rect
Public NextNoseState As Byte
Public NextMouthX As Long
Public NextMouthY As Long
Public NextMouthWidth As Long
Public NextMouthHeight As Long
Public NextMouthNormImage As DX8TextureRec
Public NextMouthClickImage As DX8TextureRec
Public NextMouthHoverImage As DX8TextureRec
Public NextMouthBounds As rect
Public NextMouthSrcBounds As rect
Public NextMouthState As Byte
Public NextShirtX As Long
Public NextShirtY As Long
Public NextShirtWidth As Long
Public NextShirtHeight As Long
Public NextShirtNormImage As DX8TextureRec
Public NextShirtClickImage As DX8TextureRec
Public NextShirtHoverImage As DX8TextureRec
Public NextShirtBounds As rect
Public NextShirtSrcBounds As rect
Public NextShirtState As Byte
Public NextExtraX As Long
Public NextExtraY As Long
Public NextExtraWidth As Long
Public NextExtraHeight As Long
Public NextExtraNormImage As DX8TextureRec
Public NextExtraClickImage As DX8TextureRec
Public NextExtraHoverImage As DX8TextureRec
Public NextExtraBounds As rect
Public NextExtraSrcBounds As rect
Public NextExtraState As Byte
Public PrevHairX As Long
Public PrevHairY As Long
Public PrevHairWidth As Long
Public PrevHairHeight As Long
Public PrevHairNormImage As DX8TextureRec
Public PrevHairClickImage As DX8TextureRec
Public PrevHairHoverImage As DX8TextureRec
Public PrevHairBounds As rect
Public PrevHairSrcBounds As rect
Public PrevHairState As Byte
Public PrevHeadX As Long
Public PrevHeadY As Long
Public PrevHeadWidth As Long
Public PrevHeadHeight As Long
Public PrevHeadNormImage As DX8TextureRec
Public PrevHeadClickImage As DX8TextureRec
Public PrevHeadHoverImage As DX8TextureRec
Public PrevHeadBounds As rect
Public PrevHeadSrcBounds As rect
Public PrevHeadState As Byte
Public PrevEyeX As Long
Public PrevEyeY As Long
Public PrevEyeWidth As Long
Public PrevEyeHeight As Long
Public PrevEyeNormImage As DX8TextureRec
Public PrevEyeClickImage As DX8TextureRec
Public PrevEyeHoverImage As DX8TextureRec
Public PrevEyeBounds As rect
Public PrevEyeSrcBounds As rect
Public PrevEyeState As Byte
Public PrevEyebrowX As Long
Public PrevEyebrowY As Long
Public PrevEyebrowWidth As Long
Public PrevEyebrowHeight As Long
Public PrevEyebrowNormImage As DX8TextureRec
Public PrevEyebrowClickImage As DX8TextureRec
Public PrevEyebrowHoverImage As DX8TextureRec
Public PrevEyebrowBounds As rect
Public PrevEyebrowSrcBounds As rect
Public PrevEyebrowState As Byte
Public PrevEarX As Long
Public PrevEarY As Long
Public PrevEarWidth As Long
Public PrevEarHeight As Long
Public PrevEarNormImage As DX8TextureRec
Public PrevEarClickImage As DX8TextureRec
Public PrevEarHoverImage As DX8TextureRec
Public PrevEarBounds As rect
Public PrevEarSrcBounds As rect
Public PrevEarState As Byte
Public PrevNoseX As Long
Public PrevNoseY As Long
Public PrevNoseWidth As Long
Public PrevNoseHeight As Long
Public PrevNoseNormImage As DX8TextureRec
Public PrevNoseClickImage As DX8TextureRec
Public PrevNoseHoverImage As DX8TextureRec
Public PrevNoseBounds As rect
Public PrevNoseSrcBounds As rect
Public PrevNoseState As Byte
Public PrevMouthX As Long
Public PrevMouthY As Long
Public PrevMouthWidth As Long
Public PrevMouthHeight As Long
Public PrevMouthNormImage As DX8TextureRec
Public PrevMouthClickImage As DX8TextureRec
Public PrevMouthHoverImage As DX8TextureRec
Public PrevMouthBounds As rect
Public PrevMouthSrcBounds As rect
Public PrevMouthState As Byte
Public PrevShirtX As Long
Public PrevShirtY As Long
Public PrevShirtWidth As Long
Public PrevShirtHeight As Long
Public PrevShirtNormImage As DX8TextureRec
Public PrevShirtClickImage As DX8TextureRec
Public PrevShirtHoverImage As DX8TextureRec
Public PrevShirtBounds As rect
Public PrevShirtSrcBounds As rect
Public PrevShirtState As Byte
Public PrevExtraX As Long
Public PrevExtraY As Long
Public PrevExtraWidth As Long
Public PrevExtraHeight As Long
Public PrevExtraNormImage As DX8TextureRec
Public PrevExtraClickImage As DX8TextureRec
Public PrevExtraHoverImage As DX8TextureRec
Public PrevExtraBounds As rect
Public PrevExtraSrcBounds As rect
Public PrevExtraState As Byte

Public CharPanelX As Long
Public CharPanelY As Long
Public CharPanelWidth As Long
Public CharPanelHeight As Long
Public CharPanelBounds As rect
Public CharPanelSrcBounds As rect
Public CharPanelImage As DX8TextureRec
Public NewCharButtonX As Long
Public NewCharButtonY As Long
Public NewCharButtonWidth As Long
Public NewCharButtonHeight As Long
Public NewCharButtonBounds As rect
Public NewCharButtonSrcBounds As rect
Public NewCharButtonNormImage As DX8TextureRec
Public NewCharButtonClickImage As DX8TextureRec
Public NewCharButtonHoverImage As DX8TextureRec
Public NewCharButtonState As Byte
Public UseCharButtonX As Long
Public UseCharButtonY As Long
Public UseCharButtonWidth As Long
Public UseCharButtonHeight As Long
Public UseCharButtonBounds As rect
Public UseCharButtonSrcBounds As rect
Public UseCharButtonNormImage As DX8TextureRec
Public UseCharButtonClickImage As DX8TextureRec
Public UseCharButtonHoverImage As DX8TextureRec
Public UseCharButtonState As Byte
Public DelCharButtonX As Long
Public DelCharButtonY As Long
Public DelCharButtonWidth As Long
Public DelCharButtonHeight As Long
Public DelCharButtonBounds As rect
Public DelCharButtonSrcBounds As rect
Public DelCharButtonNormImage As DX8TextureRec
Public DelCharButtonClickImage As DX8TextureRec
Public DelCharButtonHoverImage As DX8TextureRec
Public DelCharButtonState As Byte
Public CharPreviewX As Long
Public CharPreviewY As Long
Public CharPreviewWidth As Long
Public CharPreviewHeight As Long
Public CharPreviewBounds As rect
Public CharPreviewSrcBounds As rect
Public CharNameX As Long
Public CharNameY As Long
Public CharNameWidth As Long
Public CharNameHeight As Long
Public CharNameBounds As rect
Public CharNameSrcBounds As rect
Public CharClassX As Long
Public CharClassY As Long
Public CharClassWidth As Long
Public CharClassHeight As Long
Public CharClassBounds As rect
Public CharClassSrcBounds As rect
Public NextCharX As Long
Public NextCharY As Long
Public NextCharWidth As Long
Public NextCharHeight As Long
Public NextCharBounds As rect
Public NextCharSrcBounds As rect
Public NextCharNormImage As DX8TextureRec
Public NextCharClickImage As DX8TextureRec
Public NextCharHoverImage As DX8TextureRec
Public NextCharState As Byte
Public prevCharX As Long
Public prevCharY As Long
Public prevCharWidth As Long
Public prevCharHeight As Long
Public PrevCharBounds As rect
Public PrevCharSrcBounds As rect
Public prevCharNormImage As DX8TextureRec
Public prevCharClickImage As DX8TextureRec
Public prevCharHoverImage As DX8TextureRec
Public prevCharState As Byte

Public SelectedChar As Long
Public CharSelection() As CharSelRec
Private Type CharSelRec
    Name As String
    gender As Integer
    Class As String
    Sex As Long
    Level As Integer
    Face(1 To FaceEnum.Face_Count - 1) As Long
End Type

Public InMailbox As Boolean
Public MailBoxMenu As Long
Public MailToFrom As String
Public MailItem As Long
Public MailItemValue As Long
Public MailContent As String
Public LastMailCount As Long
Public LastMailViewed As Long
Public SelectedMail As Long

Public InQuestLog As Boolean
Public QuestLogFunction As Long '0 for offering quest, 1 for quest info
Public QuestLogPage As Long
Public QuestLogQuest As Long
Public QuestLogMessage As String

















'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!

'InGame GUI Variables!!!!!!!!!!


Public GameWindowWidth As Long
Public GameWindowHeight As Long
Public GameWindowImage As DX8TextureRec
Public GameScreenX As Long
Public GameScreenY As Long
Public GameScreenWidth As Long
Public GameScreenHeight As Long
Public GameScreenBounds As rect
Public GameScreenSrcBounds As rect
Public ChatboxPnlX As Long
Public ChatboxPnlY As Long
Public ChatboxPnlWidth As Long
Public ChatboxPnlHeight As Long
Public ChatboxPnlImage As DX8TextureRec
Public ChatboxPnlBounds As rect
Public ChatboxPnlSrcBounds As rect
Public ChatboxX As Long
Public ChatboxY As Long
Public ChatboxWidth As Long
Public ChatboxHeight As Long
Public ChatboxBounds As rect
Public MyTextX As Long
Public MyTextY As Long
Public MyTextWidth As Long
Public MyTextHeight As Long
Public MyTextBounds As rect
Public ChatUpBtnX As Long
Public ChatUpBtnY As Long
Public ChatUpBtnWidth As Long
Public ChatUpBtnHeight As Long
Public ChatUpBtnNormImage As DX8TextureRec
Public ChatUpBtnClickImage As DX8TextureRec
Public ChatUpBtnHoverImage As DX8TextureRec
Public ChatUpBtnBounds As rect
Public ChatUpBtnSrcBounds As rect
Public ChatUpBtnState As Byte
Public ChatDownBtnX As Long
Public ChatDownBtnY As Long
Public ChatDownBtnWidth As Long
Public ChatDownBtnHeight As Long
Public ChatDownBtnNormImage As DX8TextureRec
Public ChatDownBtnClickImage As DX8TextureRec
Public ChatDownBtnHoverImage As DX8TextureRec
Public ChatDownBtnBounds As rect
Public ChatDownBtnSrcBounds As rect
Public ChatDownBtnState As Byte
Public GameMenuPanelX As Long
Public GameMenuPanelY As Long
Public GameMenuPanelWidth As Long
Public GameMenuPanelHeight As Long
Public GameMenuPanelImage As DX8TextureRec
Public GameMenuPanelBounds As rect
Public GameMenuPanelSrcBounds As rect
Public InventoryBtnX As Long
Public InventoryBtnY As Long
Public InventoryBtnWidth As Long
Public InventoryBtnHeight As Long
Public InventoryBtnNormImage As DX8TextureRec
Public InventoryBtnClickImage As DX8TextureRec
Public InventoryBtnHoverImage As DX8TextureRec
Public InventoryBtnBounds As rect
Public InventoryBtnSrcBounds As rect
Public InventoryBtnState As Byte
Public SkillsBtnX As Long
Public SkillsBtnY As Long
Public SkillsBtnWidth As Long
Public SkillsBtnHeight As Long
Public SkillsBtnNormImage As DX8TextureRec
Public SkillsBtnClickImage As DX8TextureRec
Public SkillsBtnHoverImage As DX8TextureRec
Public SkillsBtnBounds As rect
Public SkillsBtnSrcBounds As rect
Public SkillsBtnState As Byte
Public CharacterBtnX As Long
Public CharacterBtnY As Long
Public CharacterBtnWidth As Long
Public CharacterBtnHeight As Long
Public CharacterBtnNormImage As DX8TextureRec
Public CharacterBtnClickImage As DX8TextureRec
Public CharacterBtnHoverImage As DX8TextureRec
Public CharacterBtnBounds As rect
Public CharacterBtnSrcBounds As rect
Public CharacterBtnState As Byte
Public OptionsBtnX As Long
Public OptionsBtnY As Long
Public OptionsBtnWidth As Long
Public OptionsBtnHeight As Long
Public OptionsBtnNormImage As DX8TextureRec
Public OptionsBtnClickImage As DX8TextureRec
Public OptionsBtnHoverImage As DX8TextureRec
Public OptionsBtnBounds As rect
Public OptionsBtnSrcBounds As rect
Public OptionsBtnState As Byte
Public TradeBtnX As Long
Public TradeBtnY As Long
Public TradeBtnWidth As Long
Public TradeBtnHeight As Long
Public TradeBtnNormImage As DX8TextureRec
Public TradeBtnClickImage As DX8TextureRec
Public TradeBtnHoverImage As DX8TextureRec
Public TradeBtnBounds As rect
Public TradeBtnSrcBounds As rect
Public TradeBtnState As Byte
Public PartyBtnX As Long
Public PartyBtnY As Long
Public PartyBtnWidth As Long
Public PartyBtnHeight As Long
Public PartyBtnNormImage As DX8TextureRec
Public PartyBtnClickImage As DX8TextureRec
Public PartyBtnHoverImage As DX8TextureRec
Public PartyBtnBounds As rect
Public PartyBtnSrcBounds As rect
Public PartyBtnState As Byte
Public FriendsBtnX As Long
Public FriendsBtnY As Long
Public FriendsBtnWidth As Long
Public FriendsBtnHeight As Long
Public FriendsBtnNormImage As DX8TextureRec
Public FriendsBtnClickImage As DX8TextureRec
Public FriendsBtnHoverImage As DX8TextureRec
Public FriendsBtnBounds As rect
Public FriendsBtnSrcBounds As rect
Public FriendsBtnState As Byte
Public QuestsBtnX As Long
Public QuestsBtnY As Long
Public QuestsBtnWidth As Long
Public QuestsBtnHeight As Long
Public QuestsBtnNormImage As DX8TextureRec
Public QuestsBtnClickImage As DX8TextureRec
Public QuestsBtnHoverImage As DX8TextureRec
Public QuestsBtnBounds As rect
Public QuestsBtnSrcBounds As rect
Public QuestsBtnState As Byte
Public PetsBtnX As Long
Public PetsBtnY As Long
Public PetsBtnWidth As Long
Public PetsBtnHeight As Long
Public PetsBtnNormImage As DX8TextureRec
Public PetsBtnClickImage As DX8TextureRec
Public PetsBtnHoverImage As DX8TextureRec
Public PetsBtnBounds As rect
Public PetsBtnSrcBounds As rect
Public PetsBtnState As Byte
Public GUIBarsPanelX As Long
Public GUIBarsPanelY As Long
Public GUIBarsPanelWidth As Long
Public GUIBarsPanelHeight As Long
Public GUIBarsPanelImage As DX8TextureRec
Public GUIBarsPanelBounds As rect
Public GUIBarsPanelSrcBounds As rect
Public HealthBarX As Long
Public HealthBarY As Long
Public HealthBarWidth As Long
Public HealthBarHeight As Long
Public HealthBarImage As DX8TextureRec
Public HealthBarBounds As rect
Public HealthBarSrcBounds As rect
Public ManaBarX As Long
Public ManaBarY As Long
Public ManaBarWidth As Long
Public ManaBarHeight As Long
Public ManaBarImage As DX8TextureRec
Public ManaBarBounds As rect
Public ManaBarSrcBounds As rect
Public ExpBarX As Long
Public ExpBarY As Long
Public ExpBarWidth As Long
Public ExpBarHeight As Long
Public ExpBarImage As DX8TextureRec
Public ExpBarBounds As rect
Public ExpBarSrcBounds As rect
Public HotbarPnlX As Long
Public HotbarPnlY As Long
Public HotbarPnlWidth As Long
Public HotbarPnlHeight As Long
Public HotbarPnlImage As DX8TextureRec
Public HotbarPnlBounds As rect
Public HotbarPnlSrcBounds As rect
Public HotbarIcon1X As Long
Public HotbarIcon1Y As Long
Public HotbarIcon1Width As Long
Public HotbarIcon1Height As Long
Public HotbarIcon1Bounds As rect
Public HotbarIcon2X As Long
Public HotbarIcon2Y As Long
Public HotbarIcon2Width As Long
Public HotbarIcon2Height As Long
Public HotbarIcon2Bounds As rect
Public HotbarIcon3X As Long
Public HotbarIcon3Y As Long
Public HotbarIcon3Width As Long
Public HotbarIcon3Height As Long
Public HotbarIcon3Bounds As rect
Public HotbarIcon4X As Long
Public HotbarIcon4Y As Long
Public HotbarIcon4Width As Long
Public HotbarIcon4Height As Long
Public HotbarIcon4Bounds As rect
Public HotbarIcon5X As Long
Public HotbarIcon5Y As Long
Public HotbarIcon5Width As Long
Public HotbarIcon5Height As Long
Public HotbarIcon5Bounds As rect
Public HotbarIcon6X As Long
Public HotbarIcon6Y As Long
Public HotbarIcon6Width As Long
Public HotbarIcon6Height As Long
Public HotbarIcon6Bounds As rect
Public HotbarIcon7X As Long
Public HotbarIcon7Y As Long
Public HotbarIcon7Width As Long
Public HotbarIcon7Height As Long
Public HotbarIcon7Bounds As rect
Public HotbarIcon8X As Long
Public HotbarIcon8Y As Long
Public HotbarIcon8Width As Long
Public HotbarIcon8Height As Long
Public HotbarIcon8Bounds As rect
Public HotbarIcon9X As Long
Public HotbarIcon9Y As Long
Public HotbarIcon9Width As Long
Public HotbarIcon9Height As Long
Public HotbarIcon9Bounds As rect
Public HotbarIcon10X As Long
Public HotbarIcon10Y As Long
Public HotbarIcon10Width As Long
Public HotbarIcon10Height As Long
Public HotbarIcon10Bounds As rect
Public HotbarIcon11X As Long
Public HotbarIcon11Y As Long
Public HotbarIcon11Width As Long
Public HotbarIcon11Height As Long
Public HotbarIcon11Bounds As rect
Public HotbarIcon12X As Long
Public HotbarIcon12Y As Long
Public HotbarIcon12Width As Long
Public HotbarIcon12Height As Long
Public HotbarIcon12Bounds As rect
Public InventoryPnlX As Long
Public InventoryPnlY As Long
Public InventoryPnlWidth As Long
Public InventoryPnlHeight As Long
Public InventoryPnlImage As DX8TextureRec
Public InventoryPnlBounds As rect
Public InventoryPnlSrcBounds As rect
Public InvItemsX As Long
Public InvItemsY As Long
Public InvItemsWidth As Long
Public InvItemsHeight As Long
Public InvItemsBounds As rect
Public CloseInvBtnX As Long
Public CloseInvBtnY As Long
Public CloseInvBtnWidth As Long
Public CloseInvBtnHeight As Long
Public CloseInvBtnNormImage As DX8TextureRec
Public CloseInvBtnClickImage As DX8TextureRec
Public CloseInvBtnHoverImage As DX8TextureRec
Public CloseInvBtnBounds As rect
Public CloseInvBtnSrcBounds As rect
Public CloseInvBtnState As Byte
Public SpellsPnlX As Long
Public SpellsPnlY As Long
Public SpellsPnlWidth As Long
Public SpellsPnlHeight As Long
Public SpellsPnlImage As DX8TextureRec
Public SpellsPnlBounds As rect
Public SpellsPnlSrcBounds As rect
Public SpellIconsX As Long
Public SpellIconsY As Long
Public SpellIconsWidth As Long
Public SpellIconsHeight As Long
Public SpellIconsBounds As rect
Public CloseSpellsBtnX As Long
Public CloseSpellsBtnY As Long
Public CloseSpellsBtnWidth As Long
Public CloseSpellsBtnHeight As Long
Public CloseSpellsBtnNormImage As DX8TextureRec
Public CloseSpellsBtnClickImage As DX8TextureRec
Public CloseSpellsBtnHoverImage As DX8TextureRec
Public CloseSpellsBtnSrcBounds As rect
Public CloseSpellsBtnBounds As rect
Public CloseSpellsBtnState As Byte
Public CharacterPnlX As Long
Public CharacterPnlY As Long
Public CharacterPnlWidth As Long
Public CharacterPnlHeight As Long
Public CharacterPnlImage As DX8TextureRec
Public CharacterPnlBounds As rect
Public CharacterPnlSrcBounds As rect
Public PlayerNameLblX As Long
Public PlayerNameLblY As Long
Public PlayerNameLblWidth As Long
Public PlayerNameLblHeight As Long
Public PlayerNameLblBounds As rect
Public CharacterFaceX As Long
Public CharacterFaceY As Long
Public CharacterFaceWidth As Long
Public CharacterFaceHeight As Long
Public CharacterFaceBounds As rect
Public StrengthLblX As Long
Public StrengthLblY As Long
Public StrengthLblWidth As Long
Public StrengthLblHeight As Long
Public StrengthLblBounds As rect
Public EnduranceLblX As Long
Public EnduranceLblY As Long
Public EnduranceLblWidth As Long
Public EnduranceLblHeight As Long
Public EnduranceLblBounds As rect
Public IntelligenceLblX As Long
Public IntelligenceLblY As Long
Public IntelligenceLblWidth As Long
Public IntelligenceLblHeight As Long
Public IntelligenceLblBounds As rect
Public AgilityLblX As Long
Public AgilityLblY As Long
Public AgilityLblWidth As Long
Public AgilityLblHeight As Long
Public AgilityLblBounds As rect
Public WillpowerLblX As Long
Public WillpowerLblY As Long
Public WillpowerLblWidth As Long
Public WillpowerLblHeight As Long
Public WillpowerLblBounds As rect
Public PointsLblX As Long
Public PointsLblY As Long
Public PointsLblWidth As Long
Public PointsLblHeight As Long
Public PointsLblBounds As rect
Public AddStrengthBtnX As Long
Public AddStrengthBtnY As Long
Public AddStrengthBtnWidth As Long
Public AddStrengthBtnHeight As Long
Public AddStrengthBtnNormImage As DX8TextureRec
Public AddStrengthBtnClickImage As DX8TextureRec
Public AddStrengthBtnHoverImage As DX8TextureRec
Public AddStrengthBtnBounds As rect
Public AddStrengthBtnSrcBounds As rect
Public AddStrengthBtnState As Byte
Public AddEnduranceBtnX As Long
Public AddEnduranceBtnY As Long
Public AddEnduranceBtnWidth As Long
Public AddEnduranceBtnHeight As Long
Public AddEnduranceBtnNormImage As DX8TextureRec
Public AddEnduranceBtnClickImage As DX8TextureRec
Public AddEnduranceBtnHoverImage As DX8TextureRec
Public AddEnduranceBtnBounds As rect
Public AddEnduranceBtnSrcBounds As rect
Public AddEnduranceBtnState As Byte
Public AddIntelligenceBtnX As Long
Public AddIntelligenceBtnY As Long
Public AddIntelligenceBtnWidth As Long
Public AddIntelligenceBtnHeight As Long
Public AddIntelligenceBtnNormImage As DX8TextureRec
Public AddIntelligenceBtnClickImage As DX8TextureRec
Public AddIntelligenceBtnHoverImage As DX8TextureRec
Public AddIntelligenceBtnBounds As rect
Public AddIntelligenceBtnSrcBounds As rect
Public AddIntelligenceBtnState As Byte
Public AddAgilityBtnX As Long
Public AddAgilityBtnY As Long
Public AddAgilityBtnWidth As Long
Public AddAgilityBtnHeight As Long
Public AddAgilityBtnNormImage As DX8TextureRec
Public AddAgilityBtnClickImage As DX8TextureRec
Public AddAgilityBtnHoverImage As DX8TextureRec
Public AddAgilityBtnBounds As rect
Public AddAgilityBtnSrcBounds As rect
Public AddAgilityBtnState As Byte
Public AddWillpowerBtnX As Long
Public AddWillpowerBtnY As Long
Public AddWillpowerBtnWidth As Long
Public AddWillpowerBtnHeight As Long
Public AddWillpowerBtnNormImage As DX8TextureRec
Public AddWillpowerBtnClickImage As DX8TextureRec
Public AddWillpowerBtnHoverImage As DX8TextureRec
Public AddWillpowerBtnBounds As rect
Public AddWillpowerBtnSrcBounds As rect
Public AddWillpowerBtnState As Byte
Public PlayerWeaponSlotX As Long
Public PlayerWeaponSlotY As Long
Public PlayerWeaponSlotWidth As Long
Public PlayerWeaponSlotHeight As Long
Public PlayerWeaponSlotImage As DX8TextureRec
Public PlayerWeaponSlotBounds As rect
Public PlayerArmorSlotX As Long
Public PlayerArmorSlotY As Long
Public PlayerArmorSlotWidth As Long
Public PlayerArmorSlotHeight As Long
Public PlayerArmorSlotImage As DX8TextureRec
Public PlayerArmorSlotBounds As rect
Public PlayerHelmetSlotX As Long
Public PlayerHelmetSlotY As Long
Public PlayerHelmetSlotWidth As Long
Public PlayerHelmetSlotHeight As Long
Public PlayerHelmetSlotImage As DX8TextureRec
Public PlayerHelmetSlotBounds As rect
Public PlayerShieldSlotX As Long
Public PlayerShieldSlotY As Long
Public PlayerShieldSlotWidth As Long
Public PlayerShieldSlotHeight As Long
Public PlayerShieldSlotImage As DX8TextureRec
Public PlayerShieldSlotBounds As rect
Public CloseCharacterBtnX As Long
Public CloseCharacterBtnY As Long
Public CloseCharacterBtnWidth As Long
Public CloseCharacterBtnHeight As Long
Public CloseCharacterBtnNormImage As DX8TextureRec
Public CloseCharacterBtnClickImage As DX8TextureRec
Public CloseCharacterBtnHoverImage As DX8TextureRec
Public CloseCharacterBtnBounds As rect
Public CloseCharacterBtnSrcBounds As rect
Public CloseCharacterBtnState As Byte
Public OptionsPnlX As Long
Public OptionsPnlY As Long
Public OptionsPnlWidth As Long
Public OptionsPnlHeight As Long
Public OptionsPnlImage As DX8TextureRec
Public OptionsPnlBounds As rect
Public OptionsPnlSrcBounds As rect
Public MusicOnBtnX As Long
Public MusicOnBtnY As Long
Public MusicOnBtnWidth As Long
Public MusicOnBtnHeight As Long
Public MusicOnBtnNormImage As DX8TextureRec
Public MusicOnBtnClickImage As DX8TextureRec
Public MusicOnBtnHoverImage As DX8TextureRec
Public MusicOnBtnBounds As rect
Public MusicOnBtnSrcBounds As rect
Public MusicOnBtnState As Byte
Public MusicOffBtnX As Long
Public MusicOffBtnY As Long
Public MusicOffBtnWidth As Long
Public MusicOffBtnHeight As Long
Public MusicOffBtnNormImage As DX8TextureRec
Public MusicOffBtnClickImage As DX8TextureRec
Public MusicOffBtnHoverImage As DX8TextureRec
Public MusicOffBtnBounds As rect
Public MusicOffBtnSrcBounds As rect
Public MusicOffBtnState As Byte
Public SoundOnBtnX As Long
Public SoundOnBtnY As Long
Public SoundOnBtnWidth As Long
Public SoundOnBtnHeight As Long
Public SoundOnBtnNormImage As DX8TextureRec
Public SoundOnBtnClickImage As DX8TextureRec
Public SoundOnBtnHoverImage As DX8TextureRec
Public SoundOnBtnBounds As rect
Public SoundOnBtnSrcBounds As rect
Public SoundOnBtnState As Byte
Public SoundOffBtnX As Long
Public SoundOffBtnY As Long
Public SoundOffBtnWidth As Long
Public SoundOffBtnHeight As Long
Public SoundOffBtnNormImage As DX8TextureRec
Public SoundOffBtnClickImage As DX8TextureRec
Public SoundOffBtnHoverImage As DX8TextureRec
Public SoundOffBtnBounds As rect
Public SoundOffBtnSrcBounds As rect
Public SoundOffBtnState As Byte
Public FullScreenOnBtnX As Long
Public FullScreenOnBtnY As Long
Public FullScreenOnBtnWidth As Long
Public FullScreenOnBtnHeight As Long
Public FullScreenOnBtnNormImage As DX8TextureRec
Public FullScreenOnBtnClickImage As DX8TextureRec
Public FullScreenOnBtnHoverImage As DX8TextureRec
Public FullScreenOnBtnBounds As rect
Public FullscreenOnBtnSrcBounds As rect
Public FullScreenOnBtnState As Byte
Public FullScreenOffBtnX As Long
Public FullScreenOffBtnY As Long
Public FullScreenOffBtnWidth As Long
Public FullScreenOffBtnHeight As Long
Public FullScreenOffBtnNormImage As DX8TextureRec
Public FullScreenOffBtnClickImage As DX8TextureRec
Public FullScreenOffBtnHoverImage As DX8TextureRec
Public FullScreenOffBtnBounds As rect
Public FullscreenOffBtnSrcBounds As rect
Public FullScreenOffBtnState As Byte
Public CloseOptionsBtnX As Long
Public CloseOptionsBtnY As Long
Public CloseOptionsBtnWidth As Long
Public CloseOptionsBtnHeight As Long
Public CloseOptionsBtnNormImage As DX8TextureRec
Public CloseOptionsBtnClickImage As DX8TextureRec
Public CloseOptionsBtnHoverImage As DX8TextureRec
Public CloseOptionsBtnBounds As rect
Public CloseOptionsBtnSrcBounds As rect
Public CloseOptionsBtnState As Byte
Public PartyPnlX As Long
Public PartyPnlY As Long
Public PartyPnlWidth As Long
Public PartyPnlHeight As Long
Public PartyPnlImage As DX8TextureRec
Public PartyPnlBounds As rect
Public PartyPnlSrcBounds As rect
Public PartyLeaderNameX As Long
Public PartyLeaderNameY As Long
Public PartyLeaderNameWidth As Long
Public PartyLeaderNameHeight As Long
Public PartyLeaderNameBounds As rect
Public PartyLeaderHPBarX As Long
Public PartyLeaderHPBarY As Long
Public PartyLeaderHPBarWidth As Long
Public PartyLeaderHPBarHeight As Long
Public PartyLeaderHPBarImage As DX8TextureRec
Public PartyLeaderHPBarBounds As rect
Public PartyLeaderHPBarSrcBounds As rect
Public PartyLeaderMPBarX As Long
Public PartyLeaderMPBarY As Long
Public PartyLeaderMPBarWidth As Long
Public PartyLeaderMPBarHeight As Long
Public PartyLeaderMPBarImage As DX8TextureRec
Public PartyLeaderMPBarBounds As rect
Public PartyLeaderMPBarSrcBounds As rect
Public PartyMember1NameX As Long
Public PartyMember1NameY As Long
Public PartyMember1NameWidth As Long
Public PartyMember1NameHeight As Long
Public PartyMember1NameBounds As rect
Public PartyMember1HPBarX As Long
Public PartyMember1HPBarY As Long
Public PartyMember1HPBarWidth As Long
Public PartyMember1HPBarHeight As Long
Public PartyMember1HPBarImage As DX8TextureRec
Public PartyMember1HPBarBounds As rect
Public PartyMember1HPBarSrcBounds As rect
Public PartyMember1MPBarX As Long
Public PartyMember1MPBarY As Long
Public PartyMember1MPBarWidth As Long
Public PartyMember1MPBarHeight As Long
Public PartyMember1MPBarImage As DX8TextureRec
Public PartyMember1MPBarBounds As rect
Public PartyMember1MPBarSrcBounds As rect
Public PartyMember2NameX As Long
Public PartyMember2NameY As Long
Public PartyMember2NameWidth As Long
Public PartyMember2NameHeight As Long
Public PartyMember2NameBounds As rect
Public PartyMember2HPBarX As Long
Public PartyMember2HPBarY As Long
Public PartyMember2HPBarWidth As Long
Public PartyMember2HPBarHeight As Long
Public PartyMember2HPBarImage As DX8TextureRec
Public PartyMember2HPBarBounds As rect
Public PartyMember2HPBarSrcBounds As rect
Public PartyMember2MPBarX As Long
Public PartyMember2MPBarY As Long
Public PartyMember2MPBarWidth As Long
Public PartyMember2MPBarHeight As Long
Public PartyMember2MPBarImage As DX8TextureRec
Public PartyMember2MPBarBounds As rect
Public PartyMember2MPBarSrcBounds As rect
Public PartyMember3NameX As Long
Public PartyMember3NameY As Long
Public PartyMember3NameWidth As Long
Public PartyMember3NameHeight As Long
Public PartyMember3NameBounds As rect
Public PartyMember3HPBarX As Long
Public PartyMember3HPBarY As Long
Public PartyMember3HPBarWidth As Long
Public PartyMember3HPBarHeight As Long
Public PartyMember3HPBarImage As DX8TextureRec
Public PartyMember3HPBarBounds As rect
Public PartyMember3HPBarSrcBounds As rect
Public PartyMember3MPBarX As Long
Public PartyMember3MPBarY As Long
Public PartyMember3MPBarWidth As Long
Public PartyMember3MPBarHeight As Long
Public PartyMember3MPBarImage As DX8TextureRec
Public PartyMember3MPBarBounds As rect
Public PartyMember3MPBarSrcBounds As rect
Public PartyInviteBtnX As Long
Public PartyInviteBtnY As Long
Public PartyInviteBtnWidth As Long
Public PartyInviteBtnHeight As Long
Public PartyInviteBtnNormImage As DX8TextureRec
Public PartyInviteBtnClickImage As DX8TextureRec
Public PartyInviteBtnHoverImage As DX8TextureRec
Public PartyInviteBtnBounds As rect
Public PartyInviteBtnSrcBounds As rect
Public PartyInviteBtnState As Byte
Public PartyLeaveBtnX As Long
Public PartyLeaveBtnY As Long
Public PartyLeaveBtnWidth As Long
Public PartyLeaveBtnHeight As Long
Public PartyLeaveBtnNormImage As DX8TextureRec
Public PartyLeaveBtnClickImage As DX8TextureRec
Public PartyLeaveBtnHoverImage As DX8TextureRec
Public PartyLeaveBtnBounds As rect
Public PartyLeaveBtnSrcBounds As rect
Public PartyLeaveBtnState As Byte
Public ClosePartyBtnX As Long
Public ClosePartyBtnY As Long
Public ClosePartyBtnWidth As Long
Public ClosePartyBtnHeight As Long
Public ClosePartyBtnNormImage As DX8TextureRec
Public ClosePartyBtnClickImage As DX8TextureRec
Public ClosePartyBtnHoverImage As DX8TextureRec
Public ClosePartyBtnBounds As rect
Public ClosePartyBtnSrcBounds As rect
Public ClosePartyBtnState As Byte
Public FriendsPnlX As Long
Public FriendsPnlY As Long
Public FriendsPnlWidth As Long
Public FriendsPnlHeight As Long
Public FriendsPnlImage As DX8TextureRec
Public FriendsPnlBounds As rect
Public FriendsPnlSrcBounds As rect
Public FriendsListX As Long
Public FriendsListY As Long
Public FriendsListWidth As Long
Public FriendsListHeight As Long
Public FriendsListBounds As rect
Public FriendsUpBtnX As Long
Public FriendsUpBtnY As Long
Public FriendsUpBtnWidth As Long
Public FriendsUpBtnHeight As Long
Public FriendsUpBtnNormImage As DX8TextureRec
Public FriendsUpBtnClickImage As DX8TextureRec
Public FriendsUpBtnHoverImage As DX8TextureRec
Public FriendsUpBtnBounds As rect
Public FriendsUpBtnSrcBounds As rect
Public FriendsUpBtnState As Byte
Public FriendsDownBtnX As Long
Public FriendsDownBtnY As Long
Public FriendsDownBtnWidth As Long
Public FriendsDownBtnHeight As Long
Public FriendsDownBtnNormImage As DX8TextureRec
Public FriendsDownBtnClickImage As DX8TextureRec
Public FriendsDownBtnHoverImage As DX8TextureRec
Public FriendsDownBtnBounds As rect
Public FriendsDownBtnSrcBounds As rect
Public FriendsDownBtnState As Byte
Public AddFriendBtnX As Long
Public AddFriendBtnY As Long
Public AddFriendBtnWidth As Long
Public AddFriendBtnHeight As Long
Public AddFriendBtnNormImage As DX8TextureRec
Public AddFriendBtnClickImage As DX8TextureRec
Public AddFriendBtnHoverImage As DX8TextureRec
Public AddFriendBtnBounds As rect
Public AddFriendBtnSrcBounds As rect
Public AddFriendBtnState As Byte
Public DelFriendBtnX As Long
Public DelFriendBtnY As Long
Public DelFriendBtnWidth As Long
Public DelFriendBtnHeight As Long
Public DelFriendBtnNormImage As DX8TextureRec
Public DelFriendBtnClickImage As DX8TextureRec
Public DelFriendBtnHoverImage As DX8TextureRec
Public DelFriendBtnBounds As rect
Public DelFriendBtnSrcBounds As rect
Public DelFriendBtnState As Byte
Public CloseFriendsBtnX As Long
Public CloseFriendsBtnY As Long
Public CloseFriendsBtnWidth As Long
Public CloseFriendsBtnHeight As Long
Public CloseFriendsBtnNormImage As DX8TextureRec
Public CloseFriendsBtnClickImage As DX8TextureRec
Public CloseFriendsBtnHoverImage As DX8TextureRec
Public CloseFriendsBtnBounds As rect
Public CloseFriendsBtnSrcBounds As rect
Public CloseFriendsBtnState As Byte
Public QuestsPnlX As Long
Public QuestsPnlY As Long
Public QuestsPnlWidth As Long
Public QuestsPnlHeight As Long
Public QuestsPnlImage As DX8TextureRec
Public QuestsPnlBounds As rect
Public QuestsPnlSrcBounds As rect
Public QuestListX As Long
Public QuestListY As Long
Public QuestListWidth As Long
Public QuestListHeight As Long
Public QuestListBounds As rect
Public QuestUpBtnX As Long
Public QuestUpBtnY As Long
Public QuestUpBtnWidth As Long
Public QuestUpBtnHeight As Long
Public QuestUpBtnNormImage As DX8TextureRec
Public QuestUpBtnClickImage As DX8TextureRec
Public QuestUpBtnHoverImage As DX8TextureRec
Public QuestUpBtnBounds As rect
Public QuestUpBtnSrcBounds As rect
Public QuestUpBtnState As Byte
Public QuestDownBtnX As Long
Public QuestDownBtnY As Long
Public QuestDownBtnWidth As Long
Public QuestDownBtnHeight As Long
Public QuestDownBtnNormImage As DX8TextureRec
Public QuestDownBtnClickImage As DX8TextureRec
Public QuestDownBtnHoverImage As DX8TextureRec
Public QuestDownBtnBounds As rect
Public QuestDownBtnSrcBounds As rect
Public QuestDownBtnState As Byte
Public QuestInfoBtnX As Long
Public QuestInfoBtnY As Long
Public QuestInfoBtnWidth As Long
Public QuestInfoBtnHeight As Long
Public QuestInfoBtnNormImage As DX8TextureRec
Public QuestInfoBtnClickImage As DX8TextureRec
Public QuestInfoBtnHoverImage As DX8TextureRec
Public QuestInfoBtnBounds As rect
Public QuestInfoBtnSrcBounds As rect
Public QuestInfoBtnState As Byte
Public CloseQuestsBtnX As Long
Public CloseQuestsBtnY As Long
Public CloseQuestsBtnWidth As Long
Public CloseQuestsBtnHeight As Long
Public CloseQuestsBtnNormImage As DX8TextureRec
Public CloseQuestsBtnClickImage As DX8TextureRec
Public CloseQuestsBtnHoverImage As DX8TextureRec
Public CloseQuestsBtnBounds As rect
Public CloseQuestsBtnSrcBounds As rect
Public CloseQuestsBtnState As Byte
Public BankPnlX As Long
Public BankPnlY As Long
Public BankPnlWidth As Long
Public BankPnlHeight As Long
Public BankPnlImage As DX8TextureRec
Public BankPnlBounds As rect
Public BankPnlSrcBounds As rect
Public BankItemsX As Long
Public BankItemsY As Long
Public BankItemsWidth As Long
Public BankItemsHeight As Long
Public BankItemsBounds As rect
Public CloseBankBtnX As Long
Public CloseBankBtnY As Long
Public CloseBankBtnWidth As Long
Public CloseBankBtnHeight As Long
Public CloseBankBtnNormImage As DX8TextureRec
Public CloseBankBtnClickImage As DX8TextureRec
Public CloseBankBtnHoverImage As DX8TextureRec
Public CloseBankBtnBounds As rect
Public CloseBankBtnSrcBounds As rect
Public CloseBankBtnState As Byte
Public ShopPnlX As Long
Public ShopPnlY As Long
Public ShopPnlWidth As Long
Public ShopPnlHeight As Long
Public ShopPnlImage As DX8TextureRec
Public ShopPnlBounds As rect
Public ShopPnlSrcBounds As rect
Public ShopItemsX As Long
Public ShopItemsY As Long
Public ShopItemsWidth As Long
Public ShopItemsHeight As Long
Public ShopItemsBounds As rect
Public CloseShopBtnX As Long
Public CloseShopBtnY As Long
Public CloseShopBtnWidth As Long
Public CloseShopBtnHeight As Long
Public CloseShopBtnNormImage As DX8TextureRec
Public CloseShopBtnClickImage As DX8TextureRec
Public CloseShopBtnHoverImage As DX8TextureRec
Public CloseShopBtnBounds As rect
Public CloseShopBtnSrcBounds As rect
Public CloseShopBtnState As Byte
Public ItemDescPnlX As Long
Public ItemDescPnlY As Long
Public ItemDescPnlWidth As Long
Public ItemDescPnlHeight As Long
Public ItemDescPnlBounds As rect
Public ItemDescPnlSrcBounds As rect
Public ItemDescPnlImage As DX8TextureRec
Public ItemDescNameLblX As Long
Public ItemDescNameLblY As Long
Public ItemDescNameLblWidth As Long
Public ItemDescNameLblHeight As Long
Public ItemDescNameLblBounds As rect
Public ItemDescIconX As Long
Public ItemDescIconY As Long
Public ItemDescIconWidth As Long
Public ItemDescIconHeight As Long
Public ItemDescIconBounds As rect
Public ItemClassReqLblX As Long
Public ItemClassReqLblY As Long
Public ItemClassReqLblWidth As Long
Public ItemClassReqLblHeight As Long
Public ItemClassReqLblBounds As rect
Public ItemLevelReqLblX As Long
Public ItemLevelReqLblY As Long
Public ItemLevelReqLblWidth As Long
Public ItemLevelReqLblHeight As Long
Public ItemLevelReqLblBounds As rect
Public ItemDesc1X As Long
Public ItemDesc1Y As Long
Public ItemDesc1Width As Long
Public ItemDesc1Height As Long
Public ItemDesc1Bounds As rect
Public ItemDesc2X As Long
Public ItemDesc2Y As Long
Public ItemDesc2Width As Long
Public ItemDesc2Height As Long
Public ItemDesc2Bounds As rect
Public ItemDesc3X As Long
Public ItemDesc3Y As Long
Public ItemDesc3Width As Long
Public ItemDesc3Height As Long
Public ItemDesc3Bounds As rect
Public ItemDesc4X As Long
Public ItemDesc4Y As Long
Public ItemDesc4Width As Long
Public ItemDesc4Height As Long
Public ItemDesc4Bounds As rect
Public ItemDesc5X As Long
Public ItemDesc5Y As Long
Public ItemDesc5Width As Long
Public ItemDesc5Height As Long
Public ItemDesc5Bounds As rect
Public ItemDesc6X As Long
Public ItemDesc6Y As Long
Public ItemDesc6Width As Long
Public ItemDesc6Height As Long
Public ItemDesc6Bounds As rect
Public ItemDesc7X As Long
Public ItemDesc7Y As Long
Public ItemDesc7Width As Long
Public ItemDesc7Height As Long
Public ItemDesc7Bounds As rect
Public ItemDesc8X As Long
Public ItemDesc8Y As Long
Public ItemDesc8Width As Long
Public ItemDesc8Height As Long
Public ItemDesc8Bounds As rect
Public SpellDescPnlX As Long
Public SpellDescPnlY As Long
Public SpellDescPnlWidth As Long
Public SpellDescPnlHeight As Long
Public SpellDescPnlImage As DX8TextureRec
Public SpellDescPnlBounds As rect
Public SpellDescPnlSrcBounds As rect
Public SpellDescNameLblX As Long
Public SpellDescNameLblY As Long
Public SpellDescNameLblWidth As Long
Public SpellDescNameLblHeight As Long
Public SpellDescNameLblBounds As rect
Public SpellDescIconX As Long
Public SpellDescIconY As Long
Public SpellDescIconWidth As Long
Public SpellDescIconHeight As Long
Public SpellDescIconBounds As rect
Public SpellDesc1X As Long
Public SpellDesc1Y As Long
Public SpellDesc1Width As Long
Public SpellDesc1Height As Long
Public SpellDesc1Bounds As rect
Public SpellDesc2X As Long
Public SpellDesc2Y As Long
Public SpellDesc2Width As Long
Public SpellDesc2Height As Long
Public SpellDesc2Bounds As rect
Public SpellDesc3X As Long
Public SpellDesc3Y As Long
Public SpellDesc3Width As Long
Public SpellDesc3Height As Long
Public SpellDesc3Bounds As rect
Public SpellDesc4X As Long
Public SpellDesc4Y As Long
Public SpellDesc4Width As Long
Public SpellDesc4Height As Long
Public SpellDesc4Bounds As rect
Public SpellDesc5X As Long
Public SpellDesc5Y As Long
Public SpellDesc5Width As Long
Public SpellDesc5Height As Long
Public SpellDesc5Bounds As rect
Public SpellDesc6X As Long
Public SpellDesc6Y As Long
Public SpellDesc6Width As Long
Public SpellDesc6Height As Long
Public SpellDesc6Bounds As rect
Public SpellDesc7X As Long
Public SpellDesc7Y As Long
Public SpellDesc7Width As Long
Public SpellDesc7Height As Long
Public SpellDesc7Bounds As rect
Public SpellDesc8X As Long
Public SpellDesc8Y As Long
Public SpellDesc8Width As Long
Public SpellDesc8Height As Long
Public SpellDesc8Bounds As rect

Public TradePnlX As Long
Public TradePnlY As Long
Public TradePnlWidth As Long
Public TradePnlHeight As Long
Public TradePnlImage As DX8TextureRec
Public TradePnlBounds As rect
Public TradePnlSrcBounds As rect
Public YourTradePnlX As Long
Public YourTradePnlY As Long
Public YourTradePnlWidth As Long
Public YourTradePnlHeight As Long
Public YourTradePnlBounds As rect
Public TheirTradePnlX As Long
Public TheirTradePnlY As Long
Public TheirTradePnlWidth As Long
Public TheirTradePnlHeight As Long
Public TheirTradePnlBounds As rect
Public TradeStatusLblX As Long
Public TradeStatusLblY As Long
Public TradeStatusLblWidth As Long
Public TradeStatusLblHeight As Long
Public TradeStatusLblBounds As rect
Public YourWorthLblX As Long
Public YourWorthLblY As Long
Public YourWorthLblWidth As Long
Public YourWorthLblHeight As Long
Public YourWorthLblBounds As rect
Public TheirWorthLblX As Long
Public TheirWorthLblY As Long
Public TheirWorthLblWidth As Long
Public TheirWorthLblHeight As Long
Public TheirWorthLblBounds As rect
Public AcceptTradeBtnX As Long
Public AcceptTradeBtnY As Long
Public AcceptTradeBtnWidth As Long
Public AcceptTradeBtnHeight As Long
Public AcceptTradeBtnNormImage As DX8TextureRec
Public AcceptTradeBtnClickImage As DX8TextureRec
Public AcceptTradeBtnHoverImage As DX8TextureRec
Public AcceptTradeBtnBounds As rect
Public AcceptTradeBtnSrcBounds As rect
Public AcceptTradeBtnState As Byte
Public DeclineTradeBtnX As Long
Public DeclineTradeBtnY As Long
Public DeclineTradeBtnWidth As Long
Public DeclineTradeBtnHeight As Long
Public DeclineTradeBtnNormImage As DX8TextureRec
Public DeclineTradeBtnClickImage As DX8TextureRec
Public DeclineTradeBtnHoverImage As DX8TextureRec
Public DeclineTradeBtnBounds As rect
Public DeclineTradeBtnSrcBounds As rect
Public DeclineTradeBtnState As Byte

Public DialoguePanelX As Long
Public DialoguePanelY As Long
Public DialoguePanelWidth As Long
Public DialoguePanelHeight As Long
Public DialoguePanelImage As DX8TextureRec
Public DialoguePanelBounds As rect
Public DialoguePanelSrcBounds As rect
Public DialogueTitleX As Long
Public DialogueTitleY As Long
Public DialogueTitleWidth As Long
Public DialogueTitleHeight As Long
Public DialogueTitleBounds As rect
Public DialogueContentX As Long
Public DialogueContentY As Long
Public DialogueContentWidth As Long
Public DialogueContentHeight As Long
Public DialogueContentBounds As rect
Public DialogueYesBtnX As Long
Public DialogueYesBtnY As Long
Public DialogueYesBtnWidth As Long
Public DialogueYesBtnHeight As Long
Public DialogueYesBtnNormImage As DX8TextureRec
Public DialogueYesBtnClickImage As DX8TextureRec
Public DialogueYesBtnHoverImage As DX8TextureRec
Public DialogueYesBtnBounds As rect
Public DialogueYesBtnSrcBounds As rect
Public DialogueYesBtnState As Byte
Public DialogueNoBtnX As Long
Public DialogueNoBtnY As Long
Public DialogueNoBtnWidth As Long
Public DialogueNoBtnHeight As Long
Public DialogueNoBtnNormImage As DX8TextureRec
Public DialogueNoBtnClickImage As DX8TextureRec
Public DialogueNoBtnHoverImage As DX8TextureRec
Public DialogueNoBtnBounds As rect
Public DialogueNoBtnSrcBounds As rect
Public DialogueNoBtnState As Byte
Public DialogueOkayBtnX As Long
Public DialogueOkayBtnY As Long
Public DialogueOkayBtnWidth As Long
Public DialogueOkayBtnHeight As Long
Public DialogueOkayBtnNormImage As DX8TextureRec
Public DialogueOkayBtnClickImage As DX8TextureRec
Public DialogueOkayBtnHoverImage As DX8TextureRec
Public DialogueOkayBtnBounds As rect
Public DialogueOkayBtnSrcBounds As rect
Public DialogueOkayBtnState As Byte

Public CurrencyPanelX As Long
Public CurrencyPanelY As Long
Public CurrencyPanelWidth As Long
Public CurrencyPanelHeight As Long
Public CurrencyPanelImage As DX8TextureRec
Public CurrencyPanelBounds As rect
Public CurrencyPanelSrcBounds As rect
Public CurrencyPromptX As Long
Public CurrencyPromptY As Long
Public CurrencyPromptWidth As Long
Public CurrencyPromptHeight As Long
Public CurrencyPromptBounds As rect
Public CurrencyInputX As Long
Public CurrencyInputY As Long
Public CurrencyInputWidth As Long
Public CurrencyInputHeight As Long
Public CurrencyInputBounds As rect
Public CurrencyOkBtnX As Long
Public CurrencyOkBtnY As Long
Public CurrencyOkBtnWidth As Long
Public CurrencyOkBtnHeight As Long
Public CurrencyOkBtnNormImage As DX8TextureRec
Public CurrencyOkBtnClickImage As DX8TextureRec
Public CurrencyOkBtnHoverImage As DX8TextureRec
Public CurrencyOkBtnBounds As rect
Public CurrencyOkBtnSrcBounds As rect
Public CurrencyOkBtnState As Byte
Public CurrencyCancelBtnX As Long
Public CurrencyCancelBtnY As Long
Public CurrencyCancelBtnWidth As Long
Public CurrencyCancelBtnHeight As Long
Public CurrencyCancelBtnNormImage As DX8TextureRec
Public CurrencyCancelBtnClickImage As DX8TextureRec
Public CurrencyCancelBtnHoverImage As DX8TextureRec
Public CurrencyCancelBtnBounds As rect
Public CurrencyCancelBtnSrcBounds As rect
Public CurrencyCancelBtnState As Byte

Public EventPnlX As Long
Public EventPnlY As Long
Public EventPnlWidth As Long
Public EventPnlHeight As Long
Public EventPnlImage As DX8TextureRec
Public EventPnlBounds As rect
Public EventPnlSrcBounds As rect
Public EventPromptX As Long
Public EventPromptY As Long
Public EventPromptWidth As Long
Public EventPromptHeight As Long
Public EventPromptBounds As rect
Public Response1LblX As Long
Public Response1LblY As Long
Public Response1LblWidth As Long
Public Response1LblHeight As Long
Public Response1LblBounds As rect
Public Response2LblX As Long
Public Response2LblY As Long
Public Response2LblWidth As Long
Public Response2LblHeight As Long
Public Response2LblBounds As rect
Public Response3LblX As Long
Public Response3LblY As Long
Public Response3LblWidth As Long
Public Response3LblHeight As Long
Public Response3LblBounds As rect
Public Response4LblX As Long
Public Response4LblY As Long
Public Response4LblWidth As Long
Public Response4LblHeight As Long
Public Response4LblBounds As rect
Public EventContinueLblX As Long
Public EventContinueLblY As Long
Public EventContinueLblWidth As Long
Public EventContinueLblHeight As Long
Public EventContinueLblBounds As rect

Public QuestLogPanelX As Long
Public QuestLogPanelY As Long
Public QuestLogPanelWidth As Long
Public QuestLogPanelHeight As Long
Public QuestLogPanelImage As DX8TextureRec
Public QuestLogPanelBounds As rect
Public QuestLogPanelSrcBounds As rect
Public QuestTitleLblX As Long
Public QuestTitleLblY As Long
Public QuestTitleLblWidth As Long
Public QuestTitleLblHeight As Long
Public QuestTitleLblBounds As rect
Public QuestPageContentX As Long
Public QuestPageContentY As Long
Public QuestPageContentWidth As Long
Public QuestPageContentHeight As Long
Public QuestPageContentBounds As rect
Public QuestDeclineLblX As Long
Public QuestDeclineLblY As Long
Public QuestDeclineLblWidth As Long
Public QuestDeclineLblHeight As Long
Public QuestDeclineLblBounds As rect
Public QuestAcceptLblX As Long
Public QuestAcceptLblY As Long
Public QuestAcceptLblWidth As Long
Public QuestAcceptLblHeight As Long
Public QuestAcceptLblBounds As rect
Public QuitQuestLblX As Long
Public QuitQuestLblY As Long
Public QuitQuestLblWidth As Long
Public QuitQuestLblHeight As Long
Public QuitQuestLblBounds As rect
Public CloseQuestLogBtnX As Long
Public CloseQuestLogBtnY As Long
Public CloseQuestLogBtnWidth As Long
Public CloseQuestLogBtnHeight As Long
Public CloseQuestLogBtnNormImage As DX8TextureRec
Public CloseQuestLogBtnClickImage As DX8TextureRec
Public CloseQuestLogBtnHoverImage As DX8TextureRec
Public CloseQuestLogBtnBounds As rect
Public CloseQuestLogBtnSrcBounds As rect
Public CloseQuestLogBtnState As Byte

Public MailboxPnlX As Long
Public MailboxPnlY As Long
Public MailboxPnlWidth As Long
Public MailboxPnlHeight As Long
Public MailboxPnlImage As DX8TextureRec
Public MailboxPnlBounds As rect
Public MailboxPnlSrcBounds As rect
Public CheckMailBtnX As Long
Public CheckMailBtnY As Long
Public CheckMailBtnWidth As Long
Public CheckMailBtnHeight As Long
Public CheckMailBtnNormImage As DX8TextureRec
Public CheckMailBtnClickImage As DX8TextureRec
Public CheckMailBtnHoverImage As DX8TextureRec
Public CheckMailBtnBounds As rect
Public CheckMailBtnSrcBounds As rect
Public CheckMailBtnState As Byte
Public SendMailBtnX As Long
Public SendMailBtnY As Long
Public SendMailBtnWidth As Long
Public SendMailBtnHeight As Long
Public SendMailBtnNormImage As DX8TextureRec
Public SendMailBtnClickImage As DX8TextureRec
Public SendMailBtnHoverImage As DX8TextureRec
Public SendMailBtnBounds As rect
Public SendMailBtnSrcBounds As rect
Public SendMailBtnState As Byte
Public CloseMailboxBtnX As Long
Public CloseMailboxBtnY As Long
Public CloseMailboxBtnWidth As Long
Public CloseMailboxBtnHeight As Long
Public CloseMailboxBtnNormImage As DX8TextureRec
Public CloseMailboxBtnClickImage As DX8TextureRec
Public CloseMailboxBtnHoverImage As DX8TextureRec
Public CloseMailboxBtnBounds As rect
Public CloseMailboxBtnSrcBounds As rect
Public CloseMailboxBtnState As Byte



Public InboxPnlX As Long
Public InboxPnlY As Long
Public InboxPnlWidth As Long
Public InboxPnlHeight As Long
Public InboxPnlImage As DX8TextureRec
Public InboxPnlBounds As rect
Public InboxPnlSrcBounds As rect
Public InboxListX As Long
Public InboxListY As Long
Public InboxListWidth As Long
Public InboxListHeight As Long
Public InboxListBounds As rect
Public ScrlInboxUpBtnX As Long
Public ScrlInboxUpBtnY As Long
Public ScrlInboxUpBtnWidth As Long
Public ScrlInboxUpBtnHeight As Long
Public ScrlInboxUpBtnNormImage As DX8TextureRec
Public ScrlInboxUpBtnClickImage As DX8TextureRec
Public ScrlInboxUpBtnHoverImage As DX8TextureRec
Public ScrlInboxUpBtnBounds As rect
Public ScrlInboxUpBtnSrcBounds As rect
Public ScrlInboxUpBtnState As Byte
Public ScrlInboxDownBtnX As Long
Public ScrlInboxDownBtnY As Long
Public ScrlInboxDownBtnWidth As Long
Public ScrlInboxDownBtnHeight As Long
Public ScrlInboxDownBtnNormImage As DX8TextureRec
Public ScrlInboxDownBtnClickImage As DX8TextureRec
Public ScrlInboxDownBtnHoverImage As DX8TextureRec
Public ScrlInboxDownBtnBounds As rect
Public ScrlInboxDownBtnSrcBounds As rect
Public ScrlInboxDownBtnState As Byte
Public CloseInboxBtnX As Long
Public CloseInboxBtnY As Long
Public CloseInboxBtnWidth As Long
Public CloseInboxBtnHeight As Long
Public CloseInboxBtnNormImage As DX8TextureRec
Public CloseInboxBtnClickImage As DX8TextureRec
Public CloseInboxBtnHoverImage As DX8TextureRec
Public CloseInboxBtnBounds As rect
Public CloseInboxBtnSrcBounds As rect
Public CloseInboxBtnState As Byte

Public SendMailPnlX As Long
Public SendMailPnlY As Long
Public SendMailPnlWidth As Long
Public SendMailPnlHeight As Long
Public SendMailPnlImage As DX8TextureRec
Public SendMailPnlBounds As rect
Public SendMailPnlSrcBounds As rect
Public SendMessageToX As Long
Public SendMessageToY As Long
Public SendMessageToWidth As Long
Public SendMessageToHeight As Long
Public SendMessageToBounds As rect
Public SendMessageTextX As Long
Public SendMessageTextY As Long
Public SendMessageTextWidth As Long
Public SendMessageTextHeight As Long
Public SendMessageTextBounds As rect
Public SendMessageItemX As Long
Public SendMessageItemY As Long
Public SendMessageItemWidth As Long
Public SendMessageItemHeight As Long
Public SendMessageItemBounds As rect
Public SendMessageBtnX As Long
Public SendMessageBtnY As Long
Public SendMessageBtnWidth As Long
Public SendMessageBtnHeight As Long
Public SendMessageBtnNormImage As DX8TextureRec
Public SendMessageBtnClickImage As DX8TextureRec
Public SendMessageBtnHoverImage As DX8TextureRec
Public SendMessageBtnBounds As rect
Public SendMessageBtnSrcBounds As rect
Public SendMessageBtnState As Byte
Public DiscardMessageBtnX As Long
Public DiscardMessageBtnY As Long
Public DiscardMessageBtnWidth As Long
Public DiscardMessageBtnHeight As Long
Public DiscardMessageBtnNormImage As DX8TextureRec
Public DiscardMessageBtnClickImage As DX8TextureRec
Public DiscardMessageBtnHoverImage As DX8TextureRec
Public DiscardMessageBtnBounds As rect
Public DiscardMessageBtnSrcBounds As rect
Public DiscardMessageBtnState As Byte

Public ReadLetterPnlX As Long
Public ReadLetterPnlY As Long
Public ReadLetterPnlWidth As Long
Public ReadLetterPnlHeight As Long
Public ReadLetterPnlImage As DX8TextureRec
Public ReadLetterPnlBounds As rect
Public ReadLetterPnlSrcBounds As rect
Public MessageFromX As Long
Public MessageFromY As Long
Public MessageFromWidth As Long
Public MessageFromHeight As Long
Public MessageFromBounds As rect
Public MessageFromContentX As Long
Public MessageFromContentY As Long
Public MessageFromContentWidth As Long
Public MessageFromContentHeight As Long
Public MessageFromContentBounds As rect
Public ItemReceivedX As Long
Public ItemReceivedY As Long
Public ItemReceivedWidth As Long
Public ItemReceivedHeight As Long
Public ItemReceivedBounds As rect
Public ReplyLetterBtnX As Long
Public ReplyLetterBtnY As Long
Public ReplyLetterBtnWidth As Long
Public ReplyLetterBtnHeight As Long
Public ReplyLetterBtnNormImage As DX8TextureRec
Public ReplyLetterBtnClickImage As DX8TextureRec
Public ReplyLetterBtnHoverImage As DX8TextureRec
Public ReplyLetterBtnBounds As rect
Public ReplyLetterBtnSrcBounds As rect
Public ReplyLetterBtnState As Byte
Public TrashLetterBtnX As Long
Public TrashLetterBtnY As Long
Public TrashLetterBtnWidth As Long
Public TrashLetterBtnHeight As Long
Public TrashLetterBtnNormImage As DX8TextureRec
Public TrashLetterBtnClickImage As DX8TextureRec
Public TrashLetterBtnHoverImage As DX8TextureRec
Public TrashLetterBtnBounds As rect
Public TrashLetterBtnSrcBounds As rect
Public TrashLetterBtnState As Byte
Public StopReadingBtnX As Long
Public StopReadingBtnY As Long
Public StopReadingBtnWidth As Long
Public StopReadingBtnHeight As Long
Public StopReadingBtnNormImage As DX8TextureRec
Public StopReadingBtnClickImage As DX8TextureRec
Public StopReadingBtnHoverImage As DX8TextureRec
Public StopReadingBtnBounds As rect
Public StopReadingBtnSrcBounds As rect
Public StopReadingBtnState As Byte
Public PetPanelX As Long
Public PetPanelY As Long
Public PetPanelWidth As Long
Public PetPanelHeight As Long
Public PetPanelImage As DX8TextureRec
Public PetPanelSrcBounds As rect
Public PetPanelBounds As rect
Public PetNameX As Long
Public PetNameY As Long
Public PetNameWidth As Long
Public PetNameHeight As Long
Public PetNameBounds As rect
Public PetHPPanelX As Long
Public PetHPPanelY As Long
Public PetHPPanelWidth As Long
Public PetHPPanelHeight As Long
Public PetHPPanelImage As DX8TextureRec
Public PetHPPanelSrcBounds As rect
Public PetHPPanelBounds As rect
Public PetMPPanelX As Long
Public PetMPPanelY As Long
Public PetMPPanelWidth As Long
Public PetMPPanelHeight As Long
Public PetMPPanelImage As DX8TextureRec
Public PetMPPanelSrcBounds As rect
Public PetMPPanelBounds As rect
Public PetHPTextX As Long
Public PetHPTextY As Long
Public PetHPTextWidth As Long
Public PetHPTextHeight As Long
Public PetHPTextBounds As rect
Public PetMPTextX As Long
Public PetMPTextY As Long
Public PetMPTextWidth As Long
Public PetMPTextHeight As Long
Public PetMPTextBounds As rect
Public PetIconPanelX As Long
Public PetIconPanelY As Long
Public PetIconPanelWidth As Long
Public PetIconPanelHeight As Long
Public PetIconPanelSrcBounds As rect
Public PetIconPanelBounds As rect
Public PetStrLabelX As Long
Public PetStrLabelY As Long
Public PetStrLabelWidth As Long
Public PetStrLabelHeight As Long
Public PetStrLabelBounds As rect
Public PetEndLabelX As Long
Public PetEndLabelY As Long
Public PetEndLabelWidth As Long
Public PetEndLabelHeight As Long
Public PetEndLabelBounds As rect
Public PetIntLabelX As Long
Public PetIntLabelY As Long
Public PetIntLabelWidth As Long
Public PetIntLabelHeight As Long
Public PetIntLabelBounds As rect
Public PetAgiLabelX As Long
Public PetAgiLabelY As Long
Public PetAgiLabelWidth As Long
Public PetAgiLabelHeight As Long
Public PetAgiLabelBounds As rect
Public PetWillLabelX As Long
Public PetWillLabelY As Long
Public PetWillLabelWidth As Long
Public PetWillLabelHeight As Long
Public PetWillLabelBounds As rect
Public PetPntsLabelX As Long
Public PetPntsLabelY As Long
Public PetPntsLabelWidth As Long
Public PetPntsLabelHeight As Long
Public PetPntsLabelBounds As rect
Public PetAddStrBtnX As Long
Public PetAddStrBtnY As Long
Public PetAddStrBtnWidth As Long
Public PetAddStrBtnHeight As Long
Public PetAddStrBtnNormImage As DX8TextureRec
Public PetAddStrBtnClickImage As DX8TextureRec
Public PetAddStrBtnHoverImage As DX8TextureRec
Public PetAddStrBtnBounds As rect
Public PetAddStrBtnSrcBounds As rect
Public PetAddStrBtnState As Byte
Public PetAddEndBtnX As Long
Public PetAddEndBtnY As Long
Public PetAddEndBtnWidth As Long
Public PetAddEndBtnHeight As Long
Public PetAddEndBtnNormImage As DX8TextureRec
Public PetAddEndBtnClickImage As DX8TextureRec
Public PetAddEndBtnHoverImage As DX8TextureRec
Public PetAddEndBtnBounds As rect
Public PetAddEndBtnSrcBounds As rect
Public PetAddEndBtnState As Byte
Public PetAddIntBtnX As Long
Public PetAddIntBtnY As Long
Public PetAddIntBtnWidth As Long
Public PetAddIntBtnHeight As Long
Public PetAddIntBtnNormImage As DX8TextureRec
Public PetAddIntBtnClickImage As DX8TextureRec
Public PetAddIntBtnHoverImage As DX8TextureRec
Public PetAddIntBtnBounds As rect
Public PetAddIntBtnSrcBounds As rect
Public PetAddIntBtnState As Byte
Public PetAddAgiBtnX As Long
Public PetAddAgiBtnY As Long
Public PetAddAgiBtnWidth As Long
Public PetAddAgiBtnHeight As Long
Public PetAddAgiBtnNormImage As DX8TextureRec
Public PetAddAgiBtnClickImage As DX8TextureRec
Public PetAddAgiBtnHoverImage As DX8TextureRec
Public PetAddAgiBtnBounds As rect
Public PetAddAgiBtnSrcBounds As rect
Public PetAddAgiBtnState As Byte
Public PetAddWillBtnX As Long
Public PetAddWillBtnY As Long
Public PetAddWillBtnWidth As Long
Public PetAddWillBtnHeight As Long
Public PetAddWillBtnNormImage As DX8TextureRec
Public PetAddWillBtnClickImage As DX8TextureRec
Public PetAddWillBtnHoverImage As DX8TextureRec
Public PetAddWillBtnBounds As rect
Public PetAddWillBtnSrcBounds As rect
Public PetAddWillBtnState As Byte
Public PetSpell1PanelX As Long
Public PetSpell1PanelY As Long
Public PetSpell1PanelWidth As Long
Public PetSpell1PanelHeight As Long
Public PetSpell1PanelBounds As rect
Public PetSpell2PanelX As Long
Public PetSpell2PanelY As Long
Public PetSpell2PanelWidth As Long
Public PetSpell2PanelHeight As Long
Public PetSpell2PanelBounds As rect
Public PetSpell3PanelX As Long
Public PetSpell3PanelY As Long
Public PetSpell3PanelWidth As Long
Public PetSpell3PanelHeight As Long
Public PetSpell3PanelBounds As rect
Public PetSpell4PanelX As Long
Public PetSpell4PanelY As Long
Public PetSpell4PanelWidth As Long
Public PetSpell4PanelHeight As Long
Public PetSpell4PanelBounds As rect
Public PetSpell1LabelX As Long
Public PetSpell1LabelY As Long
Public PetSpell1LabelWidth As Long
Public PetSpell1LabelHeight As Long
Public PetSpell1LabelBounds As rect
Public PetSpell2LabelX As Long
Public PetSpell2LabelY As Long
Public PetSpell2LabelWidth As Long
Public PetSpell2LabelHeight As Long
Public PetSpell2LabelBounds As rect
Public PetSpell3LabelX As Long
Public PetSpell3LabelY As Long
Public PetSpell3LabelWidth As Long
Public PetSpell3LabelHeight As Long
Public PetSpell3LabelBounds As rect
Public PetSpell4LabelX As Long
Public PetSpell4LabelY As Long
Public PetSpell4LabelWidth As Long
Public PetSpell4LabelHeight As Long
Public PetSpell4LabelBounds As rect
Public PetReleaseLabelX As Long
Public PetReleaseLabelY As Long
Public PetReleaseLabelWidth As Long
Public PetReleaseLabelHeight As Long
Public PetReleaseLabelBounds As rect



Public ChatboxParent As Long
Public GameMenuPanelParent As Long
Public GUIBarsPanelParent As Long
Public HotbarPnlParent As Long
Public InventoryPnlParent As Long
Public SpellsPnlParent As Long
Public CharacterPnlParent As Long
Public OptionsPnlParent As Long
Public PartyPnlParent As Long
Public FriendsPnlParent As Long
Public QuestsPnlParent As Long
Public ItemDescPnlParent As Long
Public SpellDescPnlParent As Long
Public BankPnlParent As Long
Public ShopPnlParent As Long
Public TradePnlParent As Long
Public DialoguePanelParent As Long
Public CurrencyPanelParent As Long
Public EventPnlParent As Long
Public QuestLogPanelParent As Long
Public MailboxPnlParent As Long
Public InboxPnlParent As Long
Public SendMailPnlParent As Long
Public ReadLetterPnlParent As Long
Public PetsPanelParent As Long

Public DragBoxImage As DX8TextureRec

Public ItemDescVisible As Boolean
Public ItemDescLbls(1 To 8) As String
Public ItemClassReq As String
Public ItemLevelReq As String
Public ItemNameColor As Long
Public ItemClassColor As Long
Public ItemLevelColor As Long

Public SpellDescVisible As Boolean
Public SpellDescLbls(1 To 8) As String

Public FriendsList(1 To 25) As String
Public FriendIndex(1 To 25) As Long
Public FriendOnline(1 To 25) As Long
Public FriendListScroll As Long
Public FriendSelection As Long
Public FriendCount As Long

Public QuestList(1 To 250) As String
Public QuestIndex(1 To 250) As Long
Public QuestListScroll As Long
Public QuestSelection As Long
Public QuestCount As Long

Private Declare Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
' For completeness:
Public Const SM_CYCAPTION = 4
Public Const SM_CYBORDER = 6
Public Const SM_CYFRAME = 32


Sub InitGUI()

   On Error GoTo errorhandler

    If IntroType = 1 Then
        If UBound(IntroImages) > 0 Then
            IntroStep = 1
            If IntroFade = 1 Then
                FadeAmount = 255
                FadeType = 0
            Else
                IntroTick = GetTickCount + IntroTimer
            End If
            InIntro = 1
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "InitGUI", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub
Public Function PixelsToTwips(pixels As Integer)

   On Error GoTo errorhandler

PixelsToTwips = pixels * Screen.TwipsPerPixelX


   On Error GoTo 0
   Exit Function
errorhandler:
    HandleError "PixelsToTwips", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Function
Public Function TwipsToPixels(twips As Integer)

   On Error GoTo errorhandler

TwipsToPixels = twips / Screen.TwipsPerPixelX


   On Error GoTo 0
   Exit Function
errorhandler:
    HandleError "TwipsToPixels", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Function

Public Sub LoadGUI(Optional ByVal loadingscreen As Boolean = False)
Dim i As Long, filename As String

   On Error GoTo errorhandler
    'If IsGold = False Then
    '    SetupSilver loadingscreen
    '    Exit Sub
    'End If
    If FileExist(App.path & "\data files\" & ServerDir & "\GUI.dat", True) = True Then
        filename = App.path & "\data files\" & ServerDir & "\gui.dat"
        ' loading screen (we need to initiate quickly so don't do a ton of extra work)
        If loadingscreen Then
           'BBWidth = 800
           'BBHeight = 640
            FontColor = Val(GetVar(filename, "General", "FontColor"))
            If FontColor <> 15 Then frmLoad.lblStatus.ForeColor = &H0&
            frmLoad.ScaleWidth = Val(GetVar(filename, "Loading", "LoadingWidth"))
            frmLoad.ScaleHeight = Val(GetVar(filename, "Loading", "LoadingHeight"))
            If FileExist(App.path & GFX_PATH & "gui\" & Trim$(GetVar(filename, "Loading", "Image")), True) Then
                frmLoad.picLoad.Picture = LoadPicture(App.path & GFX_PATH & "gui\" & Trim$(GetVar(filename, "Loading", "Image")))
            End If
            frmLoad.picLoad.Width = Val(GetVar(filename, "Loading", "LoadingWidth"))
            frmLoad.picLoad.Height = Val(GetVar(filename, "Loading", "LoadingHeight"))
            frmLoad.lblStatus.Left = (Val(GetVar(filename, "Loading", "StatusX")))
            frmLoad.lblStatus.Top = (Val(GetVar(filename, "Loading", "StatusY")))
            frmLoad.lblStatus.Width = (Val(GetVar(filename, "Loading", "StatusWidth")))
            frmLoad.lblStatus.Height = (Val(GetVar(filename, "Loading", "StatusHeight")))
            frmLoad.Width = PixelsToTwips(Val(GetVar(filename, "Loading", "LoadingWidth")))
            frmLoad.Height = PixelsToTwips(Val(GetVar(filename, "Loading", "LoadingHeight")) + (frmLoad.lblStatus.Height + 5))
            '        MenuWidth = Val(GetVar(filename, "Menu", "MenuWidth"))
            'MenuHeight = Val(GetVar(filename, "Menu", "MenuHeight"))
            'GameWindow
            GameWindowWidth = Val(GetVar(filename, "InGame", "GameWindowWidth"))
            GameWindowHeight = Val(GetVar(filename, "InGame", "GameWindowHeight"))
            If MenuWidth > GameWindowWidth Then
                BBWidth = MenuWidth
            Else
               If GameWindowWidth > 0 Then BBWidth = GameWindowWidth
            End If
                   If MenuHeight > GameWindowHeight Then
               BBHeight = MenuHeight
            Else
                If GameWindowHeight > 0 Then BBHeight = GameWindowHeight
            End If
                    DoEvents
            Exit Sub
        End If
        IntroType = Val(GetVar(filename, "Intro", "Type"))
        If Val(GetVar(filename, "Intro", "Count")) > 0 Then
            ReDim IntroImages(Val(GetVar(filename, "Intro", "Count")))
            For i = 1 To Val(GetVar(filename, "Intro", "Count"))
                If Val(GetVar(filename, "Intro", "Image" & i)) > 0 Then
                    NumTextures = NumTextures + 1
                    ReDim Preserve gTexture(NumTextures)
                    IntroImages(i).filepath = App.path & GFX_PATH & "gui\" & CStr(GetVar(filename, "Intro", "Image" & i)) & ".png"
                    IntroImages(i).Texture = NumTextures
                    LoadTexture1 IntroImages(i)
                End If
            Next
        End If
        IntroFade = Val(GetVar(filename, "Intro", "Fade"))
        IntroSkip = Val(GetVar(filename, "Intro", "Skip"))
        IntroTimer = Val(GetVar(filename, "Intro", "Time"))
            'Go ahead and load everything that is needed for the menu :/
        MenuWidth = Val(GetVar(filename, "Menu", "MenuWidth"))
        MenuHeight = Val(GetVar(filename, "Menu", "MenuHeight"))
        If Val(GetVar(filename, "Menu", "MenuImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MenuImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "MenuImage")) & ".png"
            MenuImage.Texture = NumTextures
        End If
            GUIContainerX = Val(GetVar(filename, "Menu", "GUIContainerX"))
        GUIContainerY = Val(GetVar(filename, "Menu", "GUIContainerY"))
        GUIContainerWidth = Val(GetVar(filename, "Menu", "GUIContainerWidth"))
        GUIContainerHeight = Val(GetVar(filename, "Menu", "GUIcontainerHeight"))
        If Val(GetVar(filename, "Menu", "GUIContainerImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            GUIContainerImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "GUIContainerImage")) & ".png"
            GUIContainerImage.Texture = NumTextures
        End If
            'OpenLogin
        OpenLoginX = Val(GetVar(filename, "Menu", "OpenLoginX"))
        OpenLoginY = Val(GetVar(filename, "Menu", "OpenLoginY"))
        OpenLoginWidth = Val(GetVar(filename, "Menu", "OpenLoginWidth"))
        OpenLoginHeight = Val(GetVar(filename, "Menu", "OpenLoginHeight"))
        If Val(GetVar(filename, "Menu", "OpenLoginNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenLoginNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenLoginNormImage")) & ".png"
            OpenLoginNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "Menu", "OpenLoginclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenLoginClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenLoginclickimage")) & ".png"
            OpenLoginClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "Menu", "OpenLoginhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenLoginHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenLoginhoverimage")) & ".png"
            OpenLoginHoverImage.Texture = NumTextures
        End If
                'OpenRegister
        OpenRegisterX = Val(GetVar(filename, "Menu", "OpenRegisterX"))
        OpenRegisterY = Val(GetVar(filename, "Menu", "OpenRegisterY"))
        OpenRegisterWidth = Val(GetVar(filename, "Menu", "OpenRegisterWidth"))
        OpenRegisterHeight = Val(GetVar(filename, "Menu", "OpenRegisterHeight"))
        If Val(GetVar(filename, "Menu", "OpenRegisterNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenRegisterNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenRegisterNormImage")) & ".png"
            OpenRegisterNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "Menu", "OpenRegisterclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenRegisterClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenRegisterclickimage")) & ".png"
            OpenRegisterClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureOpenRegisterClickImage
        End If
        If Val(GetVar(filename, "Menu", "OpenRegisterhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenRegisterHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenRegisterhoverimage")) & ".png"
            OpenRegisterHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureOpenRegisterHoverImage
        End If
                'OpenCredits
        OpenCreditsX = Val(GetVar(filename, "Menu", "OpenCreditsX"))
        OpenCreditsY = Val(GetVar(filename, "Menu", "OpenCreditsY"))
        OpenCreditsWidth = Val(GetVar(filename, "Menu", "OpenCreditsWidth"))
        OpenCreditsHeight = Val(GetVar(filename, "Menu", "OpenCreditsHeight"))
        If Val(GetVar(filename, "Menu", "OpenCreditsNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenCreditsNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenCreditsNormImage")) & ".png"
            OpenCreditsNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureOpenCreditsNormImage
        End If
        If Val(GetVar(filename, "Menu", "OpenCreditsclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenCreditsClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenCreditsclickimage")) & ".png"
            OpenCreditsClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureOpenCreditsClickImage
        End If
        If Val(GetVar(filename, "Menu", "OpenCreditshoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OpenCreditsHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "OpenCreditshoverimage")) & ".png"
            OpenCreditsHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureOpenCreditsHoverImage
        End If
                'ExitGame
        ExitGameX = Val(GetVar(filename, "Menu", "ExitGameX"))
        ExitGameY = Val(GetVar(filename, "Menu", "ExitGameY"))
        ExitGameWidth = Val(GetVar(filename, "Menu", "ExitGameWidth"))
        ExitGameHeight = Val(GetVar(filename, "Menu", "ExitGameHeight"))
        If Val(GetVar(filename, "Menu", "ExitGameNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ExitGameNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "ExitGameNormImage")) & ".png"
            ExitGameNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureExitGameNormImage
        End If
        If Val(GetVar(filename, "Menu", "ExitGameclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ExitGameClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "ExitGameclickimage")) & ".png"
            ExitGameClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureExitGameClickImage
        End If
        If Val(GetVar(filename, "Menu", "ExitGamehoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ExitGameHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "ExitGamehoverimage")) & ".png"
            ExitGameHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureExitGameHoverImage
        End If
                'LoginPanel
        LoginPanelX = Val(GetVar(filename, "Menu", "LoginPanelX"))
        LoginPanelY = Val(GetVar(filename, "Menu", "LoginPanelY"))
        LoginPanelWidth = Val(GetVar(filename, "Menu", "LoginPanelWidth"))
        LoginPanelHeight = Val(GetVar(filename, "Menu", "LoginPanelHeight"))
        If Val(GetVar(filename, "Menu", "LoginPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LoginPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LoginPanelImage")) & ".png"
            LoginPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLoginPanelImage
        End If
                'LUsername
        LUsernameX = Val(GetVar(filename, "Menu", "LUsernameX"))
        LUsernameY = Val(GetVar(filename, "Menu", "LUsernameY"))
        LUsernameWidth = Val(GetVar(filename, "Menu", "LUsernameWidth"))
        LUsernameHeight = Val(GetVar(filename, "Menu", "LUsernameHeight"))
        If Val(GetVar(filename, "Menu", "LUsernameImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LUsernameImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LUsernameImage")) & ".png"
            LUsernameImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLUsernameImage
        End If
                'LPassword
        LPasswordX = Val(GetVar(filename, "Menu", "LPasswordX"))
        LPasswordY = Val(GetVar(filename, "Menu", "LPasswordY"))
        LPasswordWidth = Val(GetVar(filename, "Menu", "LPasswordWidth"))
        LPasswordHeight = Val(GetVar(filename, "Menu", "LPasswordHeight"))
        If Val(GetVar(filename, "Menu", "LPasswordImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LPasswordImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LPasswordImage")) & ".png"
            LPasswordImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLPasswordImage
        End If
        'SaveInfoCheck
        SaveInfoCheckX = Val(GetVar(filename, "Menu", "SaveInfoCheckX"))
        SaveInfoCheckY = Val(GetVar(filename, "Menu", "SaveInfoCheckY"))
        SaveInfoCheckWidth = Val(GetVar(filename, "Menu", "SaveInfoCheckWidth"))
        SaveInfoCheckHeight = Val(GetVar(filename, "Menu", "SaveInfoCheckHeight"))
        If Val(GetVar(filename, "Menu", "SaveInfoCheckNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SaveInfoCheckNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "SaveInfoCheckNormImage")) & ".png"
            SaveInfoCheckNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureSaveInfoCheckNormImage
        End If
        If Val(GetVar(filename, "Menu", "SaveInfoCheckclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SaveInfoCheckClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "SaveInfoCheckclickimage")) & ".png"
            SaveInfoCheckClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureSaveInfoCheckClickImage
        End If
        If Val(GetVar(filename, "Menu", "SaveInfoCheckhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SaveInfoCheckHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "SaveInfoCheckhoverimage")) & ".png"
            SaveInfoCheckHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureSaveInfoCheckHoverImage
        End If
                'LoginButton
        LoginButtonX = Val(GetVar(filename, "Menu", "LoginButtonX"))
        LoginButtonY = Val(GetVar(filename, "Menu", "LoginButtonY"))
        LoginButtonWidth = Val(GetVar(filename, "Menu", "LoginButtonWidth"))
        LoginButtonHeight = Val(GetVar(filename, "Menu", "LoginButtonHeight"))
        If Val(GetVar(filename, "Menu", "LoginButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LoginButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LoginButtonNormImage")) & ".png"
            LoginButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLoginButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "LoginButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LoginButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LoginButtonclickimage")) & ".png"
            LoginButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLoginButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "LoginButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            LoginButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "LoginButtonhoverimage")) & ".png"
            LoginButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureLoginButtonHoverImage
        End If
                'RegisterPanel
        RegisterPanelX = Val(GetVar(filename, "Menu", "RegisterPanelX"))
        RegisterPanelY = Val(GetVar(filename, "Menu", "RegisterPanelY"))
        RegisterPanelWidth = Val(GetVar(filename, "Menu", "RegisterPanelWidth"))
        RegisterPanelHeight = Val(GetVar(filename, "Menu", "RegisterPanelHeight"))
        If Val(GetVar(filename, "Menu", "RegisterPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RegisterPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RegisterPanelImage")) & ".png"
            RegisterPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRegisterPanelImage
        End If
                'RUsername
        RUsernameX = Val(GetVar(filename, "Menu", "RUsernameX"))
        RUsernameY = Val(GetVar(filename, "Menu", "RUsernameY"))
        RUsernameWidth = Val(GetVar(filename, "Menu", "RUsernameWidth"))
        RUsernameHeight = Val(GetVar(filename, "Menu", "RUsernameHeight"))
        If Val(GetVar(filename, "Menu", "RUsernameImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RUsernameImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RUsernameImage")) & ".png"
            RUsernameImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRUsernameImage
        End If
                'RPassword
        RPasswordX = Val(GetVar(filename, "Menu", "RPasswordX"))
        RPasswordY = Val(GetVar(filename, "Menu", "RPasswordY"))
        RPasswordWidth = Val(GetVar(filename, "Menu", "RPasswordWidth"))
        RPasswordHeight = Val(GetVar(filename, "Menu", "RPasswordHeight"))
        If Val(GetVar(filename, "Menu", "RPasswordImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RPasswordImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RPasswordImage")) & ".png"
            RPasswordImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRPasswordImage
        End If
                'RPassword2
        RPassword2X = Val(GetVar(filename, "Menu", "RPassword2X"))
        RPassword2Y = Val(GetVar(filename, "Menu", "RPassword2Y"))
        RPassword2Width = Val(GetVar(filename, "Menu", "RPassword2Width"))
        RPassword2Height = Val(GetVar(filename, "Menu", "RPassword2Height"))
        If Val(GetVar(filename, "Menu", "RPassword2Image")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RPassword2Image.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RPassword2Image")) & ".png"
            RPassword2Image.Texture = NumTextures
            'Textures Dynamic     LoadTextureRPassword2Image
        End If
                'RegisterButton
        RegisterButtonX = Val(GetVar(filename, "Menu", "RegisterButtonX"))
        RegisterButtonY = Val(GetVar(filename, "Menu", "RegisterButtonY"))
        RegisterButtonWidth = Val(GetVar(filename, "Menu", "RegisterButtonWidth"))
        RegisterButtonHeight = Val(GetVar(filename, "Menu", "RegisterButtonHeight"))
        If Val(GetVar(filename, "Menu", "RegisterButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RegisterButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RegisterButtonNormImage")) & ".png"
            RegisterButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRegisterButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "RegisterButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RegisterButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RegisterButtonclickimage")) & ".png"
            RegisterButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRegisterButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "RegisterButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            RegisterButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "RegisterButtonhoverimage")) & ".png"
            RegisterButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureRegisterButtonHoverImage
        End If
                'NewsPanel
        NewsPanelX = Val(GetVar(filename, "Menu", "NewsPanelX"))
        NewsPanelY = Val(GetVar(filename, "Menu", "NewsPanelY"))
        NewsPanelWidth = Val(GetVar(filename, "Menu", "NewsPanelWidth"))
        NewsPanelHeight = Val(GetVar(filename, "Menu", "NewsPanelHeight"))
        If Val(GetVar(filename, "Menu", "NewsPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NewsPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NewsPanelImage")) & ".png"
            NewsPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNewsPanelImage
        End If
                'CreditsPanel
        CreditsPanelX = Val(GetVar(filename, "Menu", "CreditsPanelX"))
        CreditsPanelY = Val(GetVar(filename, "Menu", "CreditsPanelY"))
        CreditsPanelWidth = Val(GetVar(filename, "Menu", "CreditsPanelWidth"))
        CreditsPanelHeight = Val(GetVar(filename, "Menu", "CreditsPanelHeight"))
        If Val(GetVar(filename, "Menu", "CreditsPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CreditsPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "CreditsPanelImage")) & ".png"
            CreditsPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureCreditsPanelImage
        End If
                'NewCharPanel
        NewCharPanelX = Val(GetVar(filename, "Menu", "NewCharPanelX"))
        NewCharPanelY = Val(GetVar(filename, "Menu", "NewCharPanelY"))
        NewCharPanelWidth = Val(GetVar(filename, "Menu", "NewCharPanelWidth"))
        NewCharPanelHeight = Val(GetVar(filename, "Menu", "NewCharPanelHeight"))
        If Val(GetVar(filename, "Menu", "NewCharPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NewCharPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NewCharPanelImage")) & ".png"
            NewCharPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNewCharPanelImage
        End If
                'NCTextbox
        NCTextboxX = Val(GetVar(filename, "Menu", "NCTextboxX"))
        NCTextboxY = Val(GetVar(filename, "Menu", "NCTextboxY"))
        NCTextboxWidth = Val(GetVar(filename, "Menu", "NCTextboxWidth"))
        NCTextboxHeight = Val(GetVar(filename, "Menu", "NCTextboxHeight"))
        If Val(GetVar(filename, "Menu", "NCTextboxImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NCTextboxImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NCTextboxImage")) & ".png"
            NCTextboxImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNCTextboxImage
        End If
                'NCPreview
        NCPreviewX = Val(GetVar(filename, "Menu", "NCPreviewX"))
        NCPreviewY = Val(GetVar(filename, "Menu", "NCPreviewY"))
        NCPreviewWidth = Val(GetVar(filename, "Menu", "NCPreviewWidth"))
        NCPreviewHeight = Val(GetVar(filename, "Menu", "NCPreviewHeight"))
                'PrevClass
        PrevClassX = Val(GetVar(filename, "Menu", "PrevClassX"))
        PrevClassY = Val(GetVar(filename, "Menu", "PrevClassY"))
        PrevClassWidth = Val(GetVar(filename, "Menu", "PrevClassWidth"))
        PrevClassHeight = Val(GetVar(filename, "Menu", "PrevClassHeight"))
        If Val(GetVar(filename, "Menu", "PrevClassNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevClassNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevClassNormImage")) & ".png"
            PrevClassNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevClassNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevClassclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevClassClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevClassclickimage")) & ".png"
            PrevClassClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevClassClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevClasshoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevClassHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevClasshoverimage")) & ".png"
            PrevClassHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevClassHoverImage
        End If
                'NextClass
        NextClassX = Val(GetVar(filename, "Menu", "NextClassX"))
        NextClassY = Val(GetVar(filename, "Menu", "NextClassY"))
        NextClassWidth = Val(GetVar(filename, "Menu", "NextClassWidth"))
        NextClassHeight = Val(GetVar(filename, "Menu", "NextClassHeight"))
        If Val(GetVar(filename, "Menu", "NextClassNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextClassNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextClassNormImage")) & ".png"
            NextClassNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextClassNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextClassclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextClassClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextClassclickimage")) & ".png"
            NextClassClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextClassClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextClasshoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextClassHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextClasshoverimage")) & ".png"
            NextClassHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextClassHoverImage
        End If
                'NCClassName
        NCClassNameX = Val(GetVar(filename, "Menu", "NCClassNameX"))
        NCClassNameY = Val(GetVar(filename, "Menu", "NCClassNameY"))
        NCClassNameWidth = Val(GetVar(filename, "Menu", "NCClassNameWidth"))
        NCClassNameHeight = Val(GetVar(filename, "Menu", "NCClassNameHeight"))
        If Val(GetVar(filename, "Menu", "NCClassNameImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NCClassNameImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NCClassNameImage")) & ".png"
            NCClassNameImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNCClassNameImage
        End If
                'MaleButton
        MaleButtonX = Val(GetVar(filename, "Menu", "MaleButtonX"))
        MaleButtonY = Val(GetVar(filename, "Menu", "MaleButtonY"))
        MaleButtonWidth = Val(GetVar(filename, "Menu", "MaleButtonWidth"))
        MaleButtonHeight = Val(GetVar(filename, "Menu", "MaleButtonHeight"))
        If Val(GetVar(filename, "Menu", "MaleButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MaleButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "MaleButtonNormImage")) & ".png"
            MaleButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureMaleButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "MaleButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MaleButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "MaleButtonclickimage")) & ".png"
            MaleButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureMaleButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "MaleButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MaleButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "MaleButtonhoverimage")) & ".png"
            MaleButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureMaleButtonHoverImage
        End If
                'FemaleButton
        FemaleButtonX = Val(GetVar(filename, "Menu", "FemaleButtonX"))
        FemaleButtonY = Val(GetVar(filename, "Menu", "FemaleButtonY"))
        FemaleButtonWidth = Val(GetVar(filename, "Menu", "FemaleButtonWidth"))
        FemaleButtonHeight = Val(GetVar(filename, "Menu", "FemaleButtonHeight"))
        If Val(GetVar(filename, "Menu", "FemaleButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FemaleButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "FemaleButtonNormImage")) & ".png"
            FemaleButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureFemaleButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "FemaleButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FemaleButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "FemaleButtonclickimage")) & ".png"
            FemaleButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureFemaleButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "FemaleButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FemaleButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "FemaleButtonhoverimage")) & ".png"
            FemaleButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureFemaleButtonHoverImage
        End If
                'NCAccept
        NCAcceptX = Val(GetVar(filename, "Menu", "NCAcceptX"))
        NCAcceptY = Val(GetVar(filename, "Menu", "NCAcceptY"))
        NCAcceptWidth = Val(GetVar(filename, "Menu", "NCAcceptWidth"))
        NCAcceptHeight = Val(GetVar(filename, "Menu", "NCAcceptHeight"))
        If Val(GetVar(filename, "Menu", "NCAcceptNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NCAcceptNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NCAcceptNormImage")) & ".png"
            NCAcceptNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNCAcceptNormImage
        End If
        If Val(GetVar(filename, "Menu", "NCAcceptclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NCAcceptClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NCAcceptclickimage")) & ".png"
            NCAcceptClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNCAcceptClickImage
        End If
        If Val(GetVar(filename, "Menu", "NCAccepthoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NCAcceptHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NCAccepthoverimage")) & ".png"
            NCAcceptHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNCAcceptHoverImage
        End If
                'NextHair
        NextHairX = Val(GetVar(filename, "Menu", "NextHairX"))
        NextHairY = Val(GetVar(filename, "Menu", "NextHairY"))
        NextHairWidth = Val(GetVar(filename, "Menu", "NextHairWidth"))
        NextHairHeight = Val(GetVar(filename, "Menu", "NextHairHeight"))
        If Val(GetVar(filename, "Menu", "NextHairNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHairNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHairNormImage")) & ".png"
            NextHairNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHairNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextHairclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHairClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHairclickimage")) & ".png"
            NextHairClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHairClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextHairhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHairHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHairhoverimage")) & ".png"
            NextHairHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHairHoverImage
        End If
                'NextHead
        NextHeadX = Val(GetVar(filename, "Menu", "NextHeadX"))
        NextHeadY = Val(GetVar(filename, "Menu", "NextHeadY"))
        NextHeadWidth = Val(GetVar(filename, "Menu", "NextHeadWidth"))
        NextHeadHeight = Val(GetVar(filename, "Menu", "NextHeadHeight"))
        If Val(GetVar(filename, "Menu", "NextHeadNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHeadNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHeadNormImage")) & ".png"
            NextHeadNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHeadNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextHeadclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHeadClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHeadclickimage")) & ".png"
            NextHeadClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHeadClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextHeadhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextHeadHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextHeadhoverimage")) & ".png"
            NextHeadHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextHeadHoverImage
        End If
                'NextEye
        NextEyeX = Val(GetVar(filename, "Menu", "NextEyeX"))
        NextEyeY = Val(GetVar(filename, "Menu", "NextEyeY"))
        NextEyeWidth = Val(GetVar(filename, "Menu", "NextEyeWidth"))
        NextEyeHeight = Val(GetVar(filename, "Menu", "NextEyeHeight"))
        If Val(GetVar(filename, "Menu", "NextEyeNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyeNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyeNormImage")) & ".png"
            NextEyeNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyeNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextEyeclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyeClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyeclickimage")) & ".png"
            NextEyeClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyeClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextEyehoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyeHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyehoverimage")) & ".png"
            NextEyeHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyeHoverImage
        End If
                'NextEyebrow
        NextEyebrowX = Val(GetVar(filename, "Menu", "NextEyebrowX"))
        NextEyebrowY = Val(GetVar(filename, "Menu", "NextEyebrowY"))
        NextEyebrowWidth = Val(GetVar(filename, "Menu", "NextEyebrowWidth"))
        NextEyebrowHeight = Val(GetVar(filename, "Menu", "NextEyebrowHeight"))
        If Val(GetVar(filename, "Menu", "NextEyebrowNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyebrowNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyebrowNormImage")) & ".png"
            NextEyebrowNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyebrowNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextEyebrowclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyebrowClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyebrowclickimage")) & ".png"
            NextEyebrowClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyebrowClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextEyebrowhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEyebrowHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEyebrowhoverimage")) & ".png"
            NextEyebrowHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEyebrowHoverImage
        End If
                'NextEar
        NextEarX = Val(GetVar(filename, "Menu", "NextEarX"))
        NextEarY = Val(GetVar(filename, "Menu", "NextEarY"))
        NextEarWidth = Val(GetVar(filename, "Menu", "NextEarWidth"))
        NextEarHeight = Val(GetVar(filename, "Menu", "NextEarHeight"))
        If Val(GetVar(filename, "Menu", "NextEarNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEarNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEarNormImage")) & ".png"
            NextEarNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEarNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextEarclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEarClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEarclickimage")) & ".png"
            NextEarClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEarClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextEarhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextEarHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextEarhoverimage")) & ".png"
            NextEarHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextEarHoverImage
        End If
                'NextNose
        NextNoseX = Val(GetVar(filename, "Menu", "NextNoseX"))
        NextNoseY = Val(GetVar(filename, "Menu", "NextNoseY"))
        NextNoseWidth = Val(GetVar(filename, "Menu", "NextNoseWidth"))
        NextNoseHeight = Val(GetVar(filename, "Menu", "NextNoseHeight"))
        If Val(GetVar(filename, "Menu", "NextNoseNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextNoseNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextNoseNormImage")) & ".png"
            NextNoseNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextNoseNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextNoseclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextNoseClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextNoseclickimage")) & ".png"
            NextNoseClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextNoseClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextNosehoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextNoseHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextNosehoverimage")) & ".png"
            NextNoseHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextNoseHoverImage
        End If
                'NextMouth
        NextMouthX = Val(GetVar(filename, "Menu", "NextMouthX"))
        NextMouthY = Val(GetVar(filename, "Menu", "NextMouthY"))
        NextMouthWidth = Val(GetVar(filename, "Menu", "NextMouthWidth"))
        NextMouthHeight = Val(GetVar(filename, "Menu", "NextMouthHeight"))
        If Val(GetVar(filename, "Menu", "NextMouthNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextMouthNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextMouthNormImage")) & ".png"
            NextMouthNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextMouthNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextMouthclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextMouthClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextMouthclickimage")) & ".png"
            NextMouthClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextMouthClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextMouthhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextMouthHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextMouthhoverimage")) & ".png"
            NextMouthHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextMouthHoverImage
        End If
                'NextShirt
        NextShirtX = Val(GetVar(filename, "Menu", "NextShirtX"))
        NextShirtY = Val(GetVar(filename, "Menu", "NextShirtY"))
        NextShirtWidth = Val(GetVar(filename, "Menu", "NextShirtWidth"))
        NextShirtHeight = Val(GetVar(filename, "Menu", "NextShirtHeight"))
        If Val(GetVar(filename, "Menu", "NextShirtNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextShirtNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextShirtNormImage")) & ".png"
            NextShirtNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextShirtNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextShirtclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextShirtClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextShirtclickimage")) & ".png"
            NextShirtClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextShirtClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextShirthoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextShirtHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextShirthoverimage")) & ".png"
            NextShirtHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextShirtHoverImage
        End If
                'NextExtra
        NextExtraX = Val(GetVar(filename, "Menu", "NextExtraX"))
        NextExtraY = Val(GetVar(filename, "Menu", "NextExtraY"))
        NextExtraWidth = Val(GetVar(filename, "Menu", "NextExtraWidth"))
        NextExtraHeight = Val(GetVar(filename, "Menu", "NextExtraHeight"))
        If Val(GetVar(filename, "Menu", "NextExtraNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextExtraNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextExtraNormImage")) & ".png"
            NextExtraNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextExtraNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextExtraclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextExtraClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextExtraclickimage")) & ".png"
            NextExtraClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextExtraClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextExtrahoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextExtraHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextExtrahoverimage")) & ".png"
            NextExtraHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextExtraHoverImage
        End If
                'PrevHair
        PrevHairX = Val(GetVar(filename, "Menu", "PrevHairX"))
        PrevHairY = Val(GetVar(filename, "Menu", "PrevHairY"))
        PrevHairWidth = Val(GetVar(filename, "Menu", "PrevHairWidth"))
        PrevHairHeight = Val(GetVar(filename, "Menu", "PrevHairHeight"))
        If Val(GetVar(filename, "Menu", "PrevHairNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHairNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHairNormImage")) & ".png"
            PrevHairNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHairNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevHairclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHairClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHairclickimage")) & ".png"
            PrevHairClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHairClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevHairhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHairHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHairhoverimage")) & ".png"
            PrevHairHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHairHoverImage
        End If
                'PrevHead
        PrevHeadX = Val(GetVar(filename, "Menu", "PrevHeadX"))
        PrevHeadY = Val(GetVar(filename, "Menu", "PrevHeadY"))
        PrevHeadWidth = Val(GetVar(filename, "Menu", "PrevHeadWidth"))
        PrevHeadHeight = Val(GetVar(filename, "Menu", "PrevHeadHeight"))
        If Val(GetVar(filename, "Menu", "PrevHeadNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHeadNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHeadNormImage")) & ".png"
            PrevHeadNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHeadNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevHeadclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHeadClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHeadclickimage")) & ".png"
            PrevHeadClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHeadClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevHeadhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevHeadHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevHeadhoverimage")) & ".png"
            PrevHeadHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevHeadHoverImage
        End If
                'PrevEye
        PrevEyeX = Val(GetVar(filename, "Menu", "PrevEyeX"))
        PrevEyeY = Val(GetVar(filename, "Menu", "PrevEyeY"))
        PrevEyeWidth = Val(GetVar(filename, "Menu", "PrevEyeWidth"))
        PrevEyeHeight = Val(GetVar(filename, "Menu", "PrevEyeHeight"))
        If Val(GetVar(filename, "Menu", "PrevEyeNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyeNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyeNormImage")) & ".png"
            PrevEyeNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyeNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEyeclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyeClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyeclickimage")) & ".png"
            PrevEyeClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyeClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEyehoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyeHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyehoverimage")) & ".png"
            PrevEyeHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyeHoverImage
        End If
                'PrevEyebrow
        PrevEyebrowX = Val(GetVar(filename, "Menu", "PrevEyebrowX"))
        PrevEyebrowY = Val(GetVar(filename, "Menu", "PrevEyebrowY"))
        PrevEyebrowWidth = Val(GetVar(filename, "Menu", "PrevEyebrowWidth"))
        PrevEyebrowHeight = Val(GetVar(filename, "Menu", "PrevEyebrowHeight"))
        If Val(GetVar(filename, "Menu", "PrevEyebrowNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyebrowNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyebrowNormImage")) & ".png"
            PrevEyebrowNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyebrowNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEyebrowclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyebrowClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyebrowclickimage")) & ".png"
            PrevEyebrowClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyebrowClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEyebrowhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEyebrowHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEyebrowhoverimage")) & ".png"
            PrevEyebrowHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEyebrowHoverImage
        End If
                'PrevEar
        PrevEarX = Val(GetVar(filename, "Menu", "PrevEarX"))
        PrevEarY = Val(GetVar(filename, "Menu", "PrevEarY"))
        PrevEarWidth = Val(GetVar(filename, "Menu", "PrevEarWidth"))
        PrevEarHeight = Val(GetVar(filename, "Menu", "PrevEarHeight"))
        If Val(GetVar(filename, "Menu", "PrevEarNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEarNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEarNormImage")) & ".png"
            PrevEarNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEarNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEarclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEarClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEarclickimage")) & ".png"
            PrevEarClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEarClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevEarhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevEarHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevEarhoverimage")) & ".png"
            PrevEarHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevEarHoverImage
        End If
                'PrevNose
        PrevNoseX = Val(GetVar(filename, "Menu", "PrevNoseX"))
        PrevNoseY = Val(GetVar(filename, "Menu", "PrevNoseY"))
        PrevNoseWidth = Val(GetVar(filename, "Menu", "PrevNoseWidth"))
        PrevNoseHeight = Val(GetVar(filename, "Menu", "PrevNoseHeight"))
        If Val(GetVar(filename, "Menu", "PrevNoseNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevNoseNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevNoseNormImage")) & ".png"
            PrevNoseNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevNoseNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevNoseclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevNoseClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevNoseclickimage")) & ".png"
            PrevNoseClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevNoseClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevNosehoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevNoseHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevNosehoverimage")) & ".png"
            PrevNoseHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevNoseHoverImage
        End If
                'PrevMouth
        PrevMouthX = Val(GetVar(filename, "Menu", "PrevMouthX"))
        PrevMouthY = Val(GetVar(filename, "Menu", "PrevMouthY"))
        PrevMouthWidth = Val(GetVar(filename, "Menu", "PrevMouthWidth"))
        PrevMouthHeight = Val(GetVar(filename, "Menu", "PrevMouthHeight"))
        If Val(GetVar(filename, "Menu", "PrevMouthNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevMouthNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevMouthNormImage")) & ".png"
            PrevMouthNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevMouthNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevMouthclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevMouthClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevMouthclickimage")) & ".png"
            PrevMouthClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevMouthClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevMouthhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevMouthHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevMouthhoverimage")) & ".png"
            PrevMouthHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevMouthHoverImage
        End If
                'PrevShirt
        PrevShirtX = Val(GetVar(filename, "Menu", "PrevShirtX"))
        PrevShirtY = Val(GetVar(filename, "Menu", "PrevShirtY"))
        PrevShirtWidth = Val(GetVar(filename, "Menu", "PrevShirtWidth"))
        PrevShirtHeight = Val(GetVar(filename, "Menu", "PrevShirtHeight"))
        If Val(GetVar(filename, "Menu", "PrevShirtNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevShirtNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevShirtNormImage")) & ".png"
            PrevShirtNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevShirtNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevShirtclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevShirtClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevShirtclickimage")) & ".png"
            PrevShirtClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevShirtClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevShirthoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevShirtHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevShirthoverimage")) & ".png"
            PrevShirtHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevShirtHoverImage
        End If
                'PrevExtra
        PrevExtraX = Val(GetVar(filename, "Menu", "PrevExtraX"))
        PrevExtraY = Val(GetVar(filename, "Menu", "PrevExtraY"))
        PrevExtraWidth = Val(GetVar(filename, "Menu", "PrevExtraWidth"))
        PrevExtraHeight = Val(GetVar(filename, "Menu", "PrevExtraHeight"))
        If Val(GetVar(filename, "Menu", "PrevExtraNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevExtraNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevExtraNormImage")) & ".png"
            PrevExtraNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevExtraNormImage
        End If
        If Val(GetVar(filename, "Menu", "PrevExtraclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevExtraClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevExtraclickimage")) & ".png"
            PrevExtraClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevExtraClickImage
        End If
        If Val(GetVar(filename, "Menu", "PrevExtrahoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PrevExtraHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "PrevExtrahoverimage")) & ".png"
            PrevExtraHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTexturePrevExtraHoverImage
        End If
                'CharPanel
        CharPanelX = Val(GetVar(filename, "Menu", "CharPanelX"))
        CharPanelY = Val(GetVar(filename, "Menu", "CharPanelY"))
        CharPanelWidth = Val(GetVar(filename, "Menu", "CharPanelWidth"))
        CharPanelHeight = Val(GetVar(filename, "Menu", "CharPanelHeight"))
        If Val(GetVar(filename, "Menu", "CharPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CharPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "CharPanelImage")) & ".png"
            CharPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureCharPanelImage
        End If
                'NewCharButton
        NewCharButtonX = Val(GetVar(filename, "Menu", "NewCharButtonX"))
        NewCharButtonY = Val(GetVar(filename, "Menu", "NewCharButtonY"))
        NewCharButtonWidth = Val(GetVar(filename, "Menu", "NewCharButtonWidth"))
        NewCharButtonHeight = Val(GetVar(filename, "Menu", "NewCharButtonHeight"))
        If Val(GetVar(filename, "Menu", "NewCharButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NewCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NewCharButtonNormImage")) & ".png"
            NewCharButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNewCharButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "NewCharButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NewCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NewCharButtonclickimage")) & ".png"
            NewCharButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNewCharButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "NewCharButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NewCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NewCharButtonhoverimage")) & ".png"
            NewCharButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNewCharButtonHoverImage
        End If
                'UseCharButton
        UseCharButtonX = Val(GetVar(filename, "Menu", "UseCharButtonX"))
        UseCharButtonY = Val(GetVar(filename, "Menu", "UseCharButtonY"))
        UseCharButtonWidth = Val(GetVar(filename, "Menu", "UseCharButtonWidth"))
        UseCharButtonHeight = Val(GetVar(filename, "Menu", "UseCharButtonHeight"))
        If Val(GetVar(filename, "Menu", "UseCharButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            UseCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "UseCharButtonNormImage")) & ".png"
            UseCharButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureUseCharButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "UseCharButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            UseCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "UseCharButtonclickimage")) & ".png"
            UseCharButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureUseCharButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "UseCharButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            UseCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "UseCharButtonhoverimage")) & ".png"
            UseCharButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureUseCharButtonHoverImage
        End If
                'DelCharButton
        DelCharButtonX = Val(GetVar(filename, "Menu", "DelCharButtonX"))
        DelCharButtonY = Val(GetVar(filename, "Menu", "DelCharButtonY"))
        DelCharButtonWidth = Val(GetVar(filename, "Menu", "DelCharButtonWidth"))
        DelCharButtonHeight = Val(GetVar(filename, "Menu", "DelCharButtonHeight"))
        If Val(GetVar(filename, "Menu", "DelCharButtonNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "DelCharButtonNormImage")) & ".png"
            DelCharButtonNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureDelCharButtonNormImage
        End If
        If Val(GetVar(filename, "Menu", "DelCharButtonclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "DelCharButtonclickimage")) & ".png"
            DelCharButtonClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureDelCharButtonClickImage
        End If
        If Val(GetVar(filename, "Menu", "DelCharButtonhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "DelCharButtonhoverimage")) & ".png"
            DelCharButtonHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureDelCharButtonHoverImage
        End If
                'CharPreview
        CharPreviewX = Val(GetVar(filename, "Menu", "CharPreviewX"))
        CharPreviewY = Val(GetVar(filename, "Menu", "CharPreviewY"))
        CharPreviewWidth = Val(GetVar(filename, "Menu", "CharPreviewWidth"))
        CharPreviewHeight = Val(GetVar(filename, "Menu", "CharPreviewHeight"))
                'CharName
        CharNameX = Val(GetVar(filename, "Menu", "CharNameX"))
        CharNameY = Val(GetVar(filename, "Menu", "CharNameY"))
        CharNameWidth = Val(GetVar(filename, "Menu", "CharNameWidth"))
        CharNameHeight = Val(GetVar(filename, "Menu", "CharNameHeight"))
                'CharClass
        CharClassX = Val(GetVar(filename, "Menu", "CharClassX"))
        CharClassY = Val(GetVar(filename, "Menu", "CharClassY"))
        CharClassWidth = Val(GetVar(filename, "Menu", "CharClassWidth"))
        CharClassHeight = Val(GetVar(filename, "Menu", "CharClassHeight"))
                'NextChar
        NextCharX = Val(GetVar(filename, "Menu", "NextCharX"))
        NextCharY = Val(GetVar(filename, "Menu", "NextCharY"))
        NextCharWidth = Val(GetVar(filename, "Menu", "NextCharWidth"))
        NextCharHeight = Val(GetVar(filename, "Menu", "NextCharHeight"))
        If Val(GetVar(filename, "Menu", "NextCharNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextCharNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextCharNormImage")) & ".png"
            NextCharNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextCharNormImage
        End If
        If Val(GetVar(filename, "Menu", "NextCharclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextCharClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextCharclickimage")) & ".png"
            NextCharClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextCharClickImage
        End If
        If Val(GetVar(filename, "Menu", "NextCharhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            NextCharHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "NextCharhoverimage")) & ".png"
            NextCharHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureNextCharHoverImage
        End If
            'prevChar
        prevCharX = Val(GetVar(filename, "Menu", "prevCharX"))
        prevCharY = Val(GetVar(filename, "Menu", "prevCharY"))
        prevCharWidth = Val(GetVar(filename, "Menu", "prevCharWidth"))
        prevCharHeight = Val(GetVar(filename, "Menu", "prevCharHeight"))
        If Val(GetVar(filename, "Menu", "prevCharNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            prevCharNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "prevCharNormImage")) & ".png"
            prevCharNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureprevCharNormImage
        End If
        If Val(GetVar(filename, "Menu", "prevCharclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            prevCharClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "prevCharclickimage")) & ".png"
            prevCharClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureprevCharClickImage
        End If
        If Val(GetVar(filename, "Menu", "prevCharhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            prevCharHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "Menu", "prevCharhoverimage")) & ".png"
            prevCharHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureprevCharHoverImage
        End If



        LoadInGameGUIPart1
        LoadInGameGUIPart2
        'LoadInGameGUIPart3
        CacheInterfaceBounds
        Exit Sub
    Else
        MsgBox "User interface configuration not found! - Exiting!"
        Exit Sub
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "LoadGUI", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub CacheInterfaceBounds()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    On Error GoTo errorhandler
        dX = OpenLoginX
        dY = OpenLoginY
        dw = OpenLoginWidth
        dH = OpenLoginHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If OpenLoginNormImage.Texture > 0 Then
                    If dw > OpenLoginNormImage.Width Then sW = dw - sx
                    If dH > OpenLoginNormImage.Height Then sH = dH - sy
                ElseIf OpenLoginHoverImage.Texture > 0 Then
                    If dw > OpenLoginHoverImage.Width Then sW = dw - sx
                    If dH > OpenLoginHoverImage.Height Then sH = dH - sy
                ElseIf OpenLoginClickImage.Texture > 0 Then
                    If dw > OpenLoginClickImage.Width Then sW = dw - sx
                    If dH > OpenLoginClickImage.Height Then sH = dH - sy
                End If
                OpenLoginBounds.Left = dX
                OpenLoginBounds.Right = dw
                OpenLoginBounds.Top = dY
                OpenLoginBounds.Bottom = dH
                OpenLoginSrcBounds.Left = sx
                OpenLoginSrcBounds.Right = sW
                OpenLoginSrcBounds.Top = sy
                OpenLoginSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'Open Register
        dX = OpenRegisterX
        dY = OpenRegisterY
        dw = OpenRegisterWidth
        dH = OpenRegisterHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If OpenRegisterNormImage.Texture > 0 Then
                    If dw > OpenRegisterNormImage.Width Then sW = dw - sx
                    If dH > OpenRegisterNormImage.Height Then sH = dH - sy
                ElseIf OpenRegisterHoverImage.Texture > 0 Then
                    If dw > OpenRegisterHoverImage.Width Then sW = dw - sx
                    If dH > OpenRegisterHoverImage.Height Then sH = dH - sy
                ElseIf OpenRegisterClickImage.Texture > 0 Then
                    If dw > OpenRegisterClickImage.Width Then sW = dw - sx
                    If dH > OpenRegisterClickImage.Height Then sH = dH - sy
                End If
                OpenRegisterBounds.Left = dX
                OpenRegisterBounds.Right = dw
                OpenRegisterBounds.Top = dY
                OpenRegisterBounds.Bottom = dH
                OpenRegisterSrcBounds.Left = sx
                OpenRegisterSrcBounds.Right = sW
                OpenRegisterSrcBounds.Top = sy
                OpenRegisterSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Open Credits
        dX = OpenCreditsX
        dY = OpenCreditsY
        dw = OpenCreditsWidth
        dH = OpenCreditsHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If OpenCreditsNormImage.Texture > 0 Then
                    If dw > OpenCreditsNormImage.Width Then sW = dw - sx
                    If dH > OpenCreditsNormImage.Height Then sH = dH - sy
                ElseIf OpenCreditsHoverImage.Texture > 0 Then
                    If dw > OpenCreditsHoverImage.Width Then sW = dw - sx
                    If dH > OpenCreditsHoverImage.Height Then sH = dH - sy
                ElseIf OpenCreditsClickImage.Texture > 0 Then
                    If dw > OpenCreditsClickImage.Width Then sW = dw - sx
                    If dH > OpenCreditsClickImage.Height Then sH = dH - sy
                End If
                OpenCreditsBounds.Left = dX
                OpenCreditsBounds.Right = dw
                OpenCreditsBounds.Top = dY
                OpenCreditsBounds.Bottom = dH
                OpenCreditsSrcBounds.Left = sx
                OpenCreditsSrcBounds.Right = sW
                OpenCreditsSrcBounds.Top = sy
                OpenCreditsSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Exit Game
        dX = ExitGameX
        dY = ExitGameY
        dw = ExitGameWidth
        dH = ExitGameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If ExitGameNormImage.Texture > 0 Then
                    If dw > ExitGameNormImage.Width Then sW = dw - sx
                    If dH > ExitGameNormImage.Height Then sH = dH - sy
                ElseIf ExitGameHoverImage.Texture > 0 Then
                    If dw > ExitGameHoverImage.Width Then sW = dw - sx
                    If dH > ExitGameHoverImage.Height Then sH = dH - sy
                ElseIf ExitGameClickImage.Texture > 0 Then
                    If dw > ExitGameClickImage.Width Then sW = dw - sx
                    If dH > ExitGameClickImage.Height Then sH = dH - sy
                End If
                ExitGameBounds.Left = dX
                ExitGameBounds.Right = dw
                ExitGameBounds.Top = dY
                ExitGameBounds.Bottom = dH
                ExitGameSrcBounds.Left = sx
                ExitGameSrcBounds.Right = sW
                ExitGameSrcBounds.Top = sy
                ExitGameSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'News Panel
        dX = NewsPanelX
        dY = NewsPanelY
        dw = NewsPanelWidth
        dH = NewsPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                NewsPanelBounds.Left = dX
                NewsPanelBounds.Right = dw
                NewsPanelBounds.Top = dY
                NewsPanelBounds.Bottom = dH
            End If
            sx = 0
            sy = 0
        End If
            'Credits Panel
        dX = CreditsPanelX
        dY = CreditsPanelY
        dw = CreditsPanelWidth
        dH = CreditsPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                CreditsPanelBounds.Left = dX
                CreditsPanelBounds.Right = dw
                CreditsPanelBounds.Top = dY
                CreditsPanelBounds.Bottom = dH
            End If
            sx = 0
            sy = 0
        End If
        dX = LoginPanelX
        dY = LoginPanelY
        dw = LoginPanelWidth
        dH = LoginPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If LoginPanelImage.Texture > 0 Then
                End If
                LoginPanelBounds.Left = dX
                LoginPanelBounds.Right = dw
                LoginPanelBounds.Top = dY
                LoginPanelBounds.Bottom = dH
                LoginPanelSrcBounds.Left = sx
                LoginPanelSrcBounds.Right = sW
                LoginPanelSrcBounds.Top = sy
                LoginPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        dX = LUsernameX
        dY = LUsernameY
        dw = LUsernameWidth
        dH = LUsernameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < LoginPanelBounds.Right And dY < LoginPanelBounds.Bottom Then
                If dX + dw > LoginPanelBounds.Right Then
                    dw = dw - ((dX + dw) - LoginPanelBounds.Right)
                End If
                If dY + dH > LoginPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - LoginPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + LoginPanelX
                dY = dY + GUIContainerY + LoginPanelY
                sW = dw
                sH = dH
                If LUsernameImage.Texture > 0 Then
                End If
                LUsernameBounds.Left = dX
                LUsernameBounds.Right = dw
                LUsernameBounds.Top = dY
                LUsernameBounds.Bottom = dH
                LUsernameSrcBounds.Left = sx
                LUsernameSrcBounds.Right = sW
                LUsernameSrcBounds.Top = sy
                LUsernameSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Login Password Textbox
        dX = LPasswordX
        dY = LPasswordY
        dw = LPasswordWidth
        dH = LPasswordHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < LoginPanelBounds.Right And dY < LoginPanelBounds.Bottom Then
                If dX + dw > LoginPanelBounds.Right Then
                    dw = dw - ((dX + dw) - LoginPanelBounds.Right)
                End If
                If dY + dH > LoginPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - LoginPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + LoginPanelX
                dY = dY + GUIContainerY + LoginPanelY
                sW = dw
                sH = dH
                If LPasswordImage.Texture > 0 Then
                End If
                LPasswordBounds.Left = dX
                LPasswordBounds.Right = dw
                LPasswordBounds.Top = dY
                LPasswordBounds.Bottom = dH
                LPasswordSrcBounds.Left = sx
                LPasswordSrcBounds.Right = sW
                LPasswordSrcBounds.Top = sy
                LPasswordSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        'Save Info Checkbox
        dX = SaveInfoCheckX
        dY = SaveInfoCheckY
        dw = SaveInfoCheckWidth
        dH = SaveInfoCheckHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < LoginPanelBounds.Right And dY < LoginPanelBounds.Bottom Then
                If dX + dw > LoginPanelBounds.Right Then
                    dw = dw - ((dX + dw) - LoginPanelBounds.Right)
                End If
                If dY + dH > LoginPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - LoginPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + LoginPanelX
                dY = dY + GUIContainerY + LoginPanelY
                sW = dw
                sH = dH
                If SaveInfoCheckNormImage.Texture > 0 Then
                    If dw > SaveInfoCheckNormImage.Width Then sW = dw - sx
                    If dH > SaveInfoCheckNormImage.Height Then sH = dH - sy
                ElseIf SaveInfoCheckHoverImage.Texture > 0 Then
                    If dw > SaveInfoCheckHoverImage.Width Then sW = dw - sx
                    If dH > SaveInfoCheckHoverImage.Height Then sH = dH - sy
                ElseIf SaveInfoCheckClickImage.Texture > 0 Then
                    If dw > SaveInfoCheckClickImage.Width Then sW = dw - sx
                    If dH > SaveInfoCheckClickImage.Height Then sH = dH - sy
                End If
                SaveInfoCheckBounds.Left = dX
                SaveInfoCheckBounds.Right = dw
                SaveInfoCheckBounds.Top = dY
                SaveInfoCheckBounds.Bottom = dH
                SaveInfoCheckSrcBounds.Left = sx
                SaveInfoCheckSrcBounds.Right = sW
                SaveInfoCheckSrcBounds.Top = sy
                SaveInfoCheckSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Send Login
        dX = LoginButtonX
        dY = LoginButtonY
        dw = LoginButtonWidth
        dH = LoginButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < LoginPanelBounds.Right And dY < LoginPanelBounds.Bottom Then
                If dX + dw > LoginPanelBounds.Right Then
                    dw = dw - ((dX + dw) - LoginPanelBounds.Right)
                End If
                If dY + dH > LoginPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - LoginPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + LoginPanelX
                dY = dY + GUIContainerY + LoginPanelY
                sW = dw
                sH = dH
                If LoginButtonNormImage.Texture > 0 Then
                    If dw > LoginButtonNormImage.Width Then sW = dw - sx
                    If dH > LoginButtonNormImage.Height Then sH = dH - sy
                ElseIf LoginButtonHoverImage.Texture > 0 Then
                    If dw > LoginButtonHoverImage.Width Then sW = dw - sx
                    If dH > LoginButtonHoverImage.Height Then sH = dH - sy
                ElseIf LoginButtonClickImage.Texture > 0 Then
                    If dw > LoginButtonClickImage.Width Then sW = dw - sx
                    If dH > LoginButtonClickImage.Height Then sH = dH - sy
                End If
                LoginButtonBounds.Left = dX
                LoginButtonBounds.Right = dw
                LoginButtonBounds.Top = dY
                LoginButtonBounds.Bottom = dH
                LoginButtonSrcBounds.Left = sx
                LoginButtonSrcBounds.Right = sW
                LoginButtonSrcBounds.Top = sy
                LoginButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                    'Register Panel
        dX = RegisterPanelX
        dY = RegisterPanelY
        dw = RegisterPanelWidth
        dH = RegisterPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If RegisterPanelImage.Texture > 0 Then
                End If
                RegisterPanelBounds.Left = dX
                RegisterPanelBounds.Right = dw
                RegisterPanelBounds.Top = dY
                RegisterPanelBounds.Bottom = dH
                RegisterPanelSrcBounds.Left = sx
                RegisterPanelSrcBounds.Right = sW
                RegisterPanelSrcBounds.Top = sy
                RegisterPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Register Username Textbox
        dX = RUsernameX
        dY = RUsernameY
        dw = RUsernameWidth
        dH = RUsernameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < RegisterPanelBounds.Right And dY < RegisterPanelBounds.Bottom Then
                If dX + dw > RegisterPanelBounds.Right Then
                    dw = dw - ((dX + dw) - RegisterPanelBounds.Right)
                End If
                If dY + dH > RegisterPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - RegisterPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + RegisterPanelX
                dY = dY + GUIContainerY + RegisterPanelY
                sW = dw
                sH = dH
                If RUsernameImage.Texture > 0 Then
                End If
                RUsernameBounds.Left = dX
                RUsernameBounds.Right = dw
                RUsernameBounds.Top = dY
                RUsernameBounds.Bottom = dH
                RUsernameSrcBounds.Left = sx
                RUsernameSrcBounds.Right = sW
                RUsernameSrcBounds.Top = sy
                RUsernameSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Register Password Textbox
        dX = RPasswordX
        dY = RPasswordY
        dw = RPasswordWidth
        dH = RPasswordHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < RegisterPanelBounds.Right And dY < RegisterPanelBounds.Bottom Then
                If dX + dw > RegisterPanelBounds.Right Then
                    dw = dw - ((dX + dw) - RegisterPanelBounds.Right)
                End If
                If dY + dH > RegisterPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - RegisterPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + RegisterPanelX
                dY = dY + GUIContainerY + RegisterPanelY
                sW = dw
                sH = dH
                If RPasswordImage.Texture > 0 Then
                End If
                RPasswordBounds.Left = dX
                RPasswordBounds.Right = dw
                RPasswordBounds.Top = dY
                RPasswordBounds.Bottom = dH
                RPasswordSrcBounds.Left = sx
                RPasswordSrcBounds.Right = sW
                RPasswordSrcBounds.Top = sy
                RPasswordSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Register Password2 Textbox
        dX = RPassword2X
        dY = RPassword2Y
        dw = RPassword2Width
        dH = RPassword2Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < RegisterPanelBounds.Right And dY < RegisterPanelBounds.Bottom Then
                If dX + dw > RegisterPanelBounds.Right Then
                    dw = dw - ((dX + dw) - RegisterPanelBounds.Right)
                End If
                If dY + dH > RegisterPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - RegisterPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + RegisterPanelX
                dY = dY + GUIContainerY + RegisterPanelY
                sW = dw
                sH = dH
                If RPassword2Image.Texture > 0 Then
                End If
                RPassword2Bounds.Left = dX
                RPassword2Bounds.Right = dw
                RPassword2Bounds.Top = dY
                RPassword2Bounds.Bottom = dH
                RPassword2SrcBounds.Left = sx
                RPassword2SrcBounds.Right = sW
                RPassword2SrcBounds.Top = sy
                RPassword2SrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Register Button
        dX = RegisterButtonX
        dY = RegisterButtonY
        dw = RegisterButtonWidth
        dH = RegisterButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < RegisterPanelBounds.Right And dY < RegisterPanelBounds.Bottom Then
                If dX + dw > RegisterPanelBounds.Right Then
                    dw = dw - ((dX + dw) - RegisterPanelBounds.Right)
                End If
                If dY + dH > RegisterPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - RegisterPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + RegisterPanelX
                dY = dY + GUIContainerY + RegisterPanelY
                sW = dw
                sH = dH
                If RegisterButtonNormImage.Texture > 0 Then
                    If dw > RegisterButtonNormImage.Width Then sW = dw - sx
                    If dH > RegisterButtonNormImage.Height Then sH = dH - sy
                ElseIf RegisterButtonHoverImage.Texture > 0 Then
                    If dw > RegisterButtonHoverImage.Width Then sW = dw - sx
                    If dH > RegisterButtonHoverImage.Height Then sH = dH - sy
                ElseIf RegisterButtonClickImage.Texture > 0 Then
                    If dw > RegisterButtonClickImage.Width Then sW = dw - sx
                    If dH > RegisterButtonClickImage.Height Then sH = dH - sy
                End If
                RegisterButtonBounds.Left = dX
                RegisterButtonBounds.Right = dw
                RegisterButtonBounds.Top = dY
                RegisterButtonBounds.Bottom = dH
                RegisterButtonSrcBounds.Left = sx
                RegisterButtonSrcBounds.Right = sW
                RegisterButtonSrcBounds.Top = sy
                RegisterButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'Char Panel
        dX = CharPanelX
        dY = CharPanelY
        dw = CharPanelWidth
        dH = CharPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If CharPanelImage.Texture > 0 Then
                End If
                CharPanelBounds.Left = dX
                CharPanelBounds.Right = dw
                CharPanelBounds.Top = dY
                CharPanelBounds.Bottom = dH
                CharPanelSrcBounds.Left = sx
                CharPanelSrcBounds.Right = sW
                CharPanelSrcBounds.Top = sy
                CharPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NewChar Preview
        dX = CharPreviewX
        dY = CharPreviewY
        dw = CharPreviewWidth
        dH = CharPreviewHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                CharPreviewBounds.Left = dX
                CharPreviewBounds.Right = dw
                CharPreviewBounds.Top = dY
                CharPreviewBounds.Bottom = dH
                CharPreviewSrcBounds.Left = sx
                CharPreviewSrcBounds.Right = sW
                CharPreviewSrcBounds.Top = sy
                CharPreviewSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'UseChar Button
        dX = UseCharButtonX
        dY = UseCharButtonY
        dw = UseCharButtonWidth
        dH = UseCharButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                If UseCharButtonNormImage.Texture > 0 Then
                    If dw > UseCharButtonNormImage.Width Then sW = dw - sx
                    If dH > UseCharButtonNormImage.Height Then sH = dH - sy
                ElseIf UseCharButtonHoverImage.Texture > 0 Then
                    If dw > UseCharButtonHoverImage.Width Then sW = dw - sx
                    If dH > UseCharButtonHoverImage.Height Then sH = dH - sy
                ElseIf UseCharButtonClickImage.Texture > 0 Then
                    If dw > UseCharButtonClickImage.Width Then sW = dw - sx
                    If dH > UseCharButtonClickImage.Height Then sH = dH - sy
                End If
                UseCharButtonBounds.Left = dX
                UseCharButtonBounds.Right = dw
                UseCharButtonBounds.Top = dY
                UseCharButtonBounds.Bottom = dH
                UseCharButtonSrcBounds.Left = sx
                UseCharButtonSrcBounds.Right = sW
                UseCharButtonSrcBounds.Top = sy
                UseCharButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NewChar Button
        dX = NewCharButtonX
        dY = NewCharButtonY
        dw = NewCharButtonWidth
        dH = NewCharButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                If NewCharButtonNormImage.Texture > 0 Then
                    If dw > NewCharButtonNormImage.Width Then sW = dw - sx
                    If dH > NewCharButtonNormImage.Height Then sH = dH - sy
                ElseIf NewCharButtonHoverImage.Texture > 0 Then
                    If dw > NewCharButtonHoverImage.Width Then sW = dw - sx
                    If dH > NewCharButtonHoverImage.Height Then sH = dH - sy
                ElseIf NewCharButtonClickImage.Texture > 0 Then
                    If dw > NewCharButtonClickImage.Width Then sW = dw - sx
                    If dH > NewCharButtonClickImage.Height Then sH = dH - sy
                End If
                NewCharButtonBounds.Left = dX
                NewCharButtonBounds.Right = dw
                NewCharButtonBounds.Top = dY
                NewCharButtonBounds.Bottom = dH
                NewCharButtonSrcBounds.Left = sx
                NewCharButtonSrcBounds.Right = sW
                NewCharButtonSrcBounds.Top = sy
                NewCharButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'DelChar Button
        dX = DelCharButtonX
        dY = DelCharButtonY
        dw = DelCharButtonWidth
        dH = DelCharButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                If DelCharButtonNormImage.Texture > 0 Then
                    If dw > DelCharButtonNormImage.Width Then sW = dw - sx
                    If dH > DelCharButtonNormImage.Height Then sH = dH - sy
                ElseIf DelCharButtonHoverImage.Texture > 0 Then
                    If dw > DelCharButtonHoverImage.Width Then sW = dw - sx
                    If dH > DelCharButtonHoverImage.Height Then sH = dH - sy
                ElseIf DelCharButtonClickImage.Texture > 0 Then
                    If dw > DelCharButtonClickImage.Width Then sW = dw - sx
                    If dH > DelCharButtonClickImage.Height Then sH = dH - sy
                End If
                DelCharButtonBounds.Left = dX
                DelCharButtonBounds.Right = dw
                DelCharButtonBounds.Top = dY
                DelCharButtonBounds.Bottom = dH
                DelCharButtonSrcBounds.Left = sx
                DelCharButtonSrcBounds.Right = sW
                DelCharButtonSrcBounds.Top = sy
                DelCharButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevChar Button
        dX = prevCharX
        dY = prevCharY
        dw = prevCharWidth
        dH = prevCharHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                If prevCharNormImage.Texture > 0 Then
                    If dw > prevCharNormImage.Width Then sW = dw - sx
                    If dH > prevCharNormImage.Height Then sH = dH - sy
                ElseIf prevCharHoverImage.Texture > 0 Then
                    If dw > prevCharHoverImage.Width Then sW = dw - sx
                    If dH > prevCharHoverImage.Height Then sH = dH - sy
                ElseIf prevCharClickImage.Texture > 0 Then
                    If dw > prevCharClickImage.Width Then sW = dw - sx
                    If dH > prevCharClickImage.Height Then sH = dH - sy
                End If
                PrevCharBounds.Left = dX
                PrevCharBounds.Right = dw
                PrevCharBounds.Top = dY
                PrevCharBounds.Bottom = dH
                PrevCharSrcBounds.Left = sx
                PrevCharSrcBounds.Right = sW
                PrevCharSrcBounds.Top = sy
                PrevCharSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextChar Button
        dX = NextCharX
        dY = NextCharY
        dw = NextCharWidth
        dH = NextCharHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                If NextCharNormImage.Texture > 0 Then
                    If dw > NextCharNormImage.Width Then sW = dw - sx
                    If dH > NextCharNormImage.Height Then sH = dH - sy
                ElseIf NextCharHoverImage.Texture > 0 Then
                    If dw > NextCharHoverImage.Width Then sW = dw - sx
                    If dH > NextCharHoverImage.Height Then sH = dH - sy
                ElseIf NextCharClickImage.Texture > 0 Then
                    If dw > NextCharClickImage.Width Then sW = dw - sx
                    If dH > NextCharClickImage.Height Then sH = dH - sy
                End If
                NextCharBounds.Left = dX
                NextCharBounds.Right = dw
                NextCharBounds.Top = dY
                NextCharBounds.Bottom = dH
                NextCharSrcBounds.Left = sx
                NextCharSrcBounds.Right = sW
                NextCharSrcBounds.Top = sy
                NextCharSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Char Name in Selection
        dX = CharNameX
        dY = CharNameY
        dw = CharNameWidth
        dH = CharNameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                CharNameBounds.Left = dX
                CharNameBounds.Right = dw
                CharNameBounds.Top = dY
                CharNameBounds.Bottom = dH
            End If
            sx = 0
            sy = 0
        End If
            'Char Class in Selection
        dX = CharClassX
        dY = CharClassY
        dw = CharClassWidth
        dH = CharClassHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharPanelBounds.Right And dY < CharPanelBounds.Bottom Then
                If dX + dw > CharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CharPanelBounds.Right)
                End If
                If dY + dH > CharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + CharPanelX
                dY = dY + GUIContainerY + CharPanelY
                sW = dw
                sH = dH
                CharClassBounds.Left = dX
                CharClassBounds.Right = dw
                CharClassBounds.Top = dY
                CharClassBounds.Bottom = dH
            End If
            sx = 0
            sy = 0
        End If
                'NewChar Panel
        dX = NewCharPanelX
        dY = NewCharPanelY
        dw = NewCharPanelWidth
        dH = NewCharPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIContainerWidth And dY < GUIContainerHeight Then
                If dX + dw > GUIContainerWidth Then
                    dw = dw - ((dX + dw) - GUIContainerWidth)
                End If
                If dY + dH > GUIContainerHeight Then
                    dH = dH - ((dY + dH) - GUIContainerHeight)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX
                dY = dY + GUIContainerY
                sW = dw
                sH = dH
                If NewCharPanelImage.Texture > 0 Then
                End If
                NewCharPanelBounds.Left = dX
                NewCharPanelBounds.Right = dw
                NewCharPanelBounds.Top = dY
                NewCharPanelBounds.Bottom = dH
                NewCharPanelSrcBounds.Left = sx
                NewCharPanelSrcBounds.Right = sW
                NewCharPanelSrcBounds.Top = sy
                NewCharPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NewChar Textbox
        dX = NCTextboxX
        dY = NCTextboxY
        dw = NCTextboxWidth
        dH = NCTextboxHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NCTextboxImage.Texture > 0 Then
                End If
                NCTextboxBounds.Left = dX
                NCTextboxBounds.Right = dw
                NCTextboxBounds.Top = dY
                NCTextboxBounds.Bottom = dH
                NCTextboxSrcBounds.Left = sx
                NCTextboxSrcBounds.Right = sW
                NCTextboxSrcBounds.Top = sy
                NCTextboxSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NewChar Preview
        dX = NCPreviewX
        dY = NCPreviewY
        dw = NCPreviewWidth
        dH = NCPreviewHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                NCPreviewBounds.Left = dX
                NCPreviewBounds.Right = dw
                NCPreviewBounds.Top = dY
                NCPreviewBounds.Bottom = dH
                NCPreviewSrcBounds.Left = sx
                NCPreviewSrcBounds.Right = sW
                NCPreviewSrcBounds.Top = sy
                NCPreviewSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevClass Button
        dX = PrevClassX
        dY = PrevClassY
        dw = PrevClassWidth
        dH = PrevClassHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevClassNormImage.Texture > 0 Then
                    If dw > PrevClassNormImage.Width Then sW = dw - sx
                    If dH > PrevClassNormImage.Height Then sH = dH - sy
                ElseIf PrevClassHoverImage.Texture > 0 Then
                    If dw > PrevClassHoverImage.Width Then sW = dw - sx
                    If dH > PrevClassHoverImage.Height Then sH = dH - sy
                ElseIf PrevClassClickImage.Texture > 0 Then
                    If dw > PrevClassClickImage.Width Then sW = dw - sx
                    If dH > PrevClassClickImage.Height Then sH = dH - sy
                End If
                PrevClassBounds.Left = dX
                PrevClassBounds.Right = dw
                PrevClassBounds.Top = dY
                PrevClassBounds.Bottom = dH
                PrevClassSrcBounds.Left = sx
                PrevClassSrcBounds.Right = sW
                PrevClassSrcBounds.Top = sy
                PrevClassSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextClass Button
        dX = NextClassX
        dY = NextClassY
        dw = NextClassWidth
        dH = NextClassHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextClassNormImage.Texture > 0 Then
                    If dw > NextClassNormImage.Width Then sW = dw - sx
                    If dH > NextClassNormImage.Height Then sH = dH - sy
                ElseIf NextClassHoverImage.Texture > 0 Then
                    If dw > NextClassHoverImage.Width Then sW = dw - sx
                    If dH > NextClassHoverImage.Height Then sH = dH - sy
                ElseIf NextClassClickImage.Texture > 0 Then
                    If dw > NextClassClickImage.Width Then sW = dw - sx
                    If dH > NextClassClickImage.Height Then sH = dH - sy
                End If
                NextClassBounds.Left = dX
                NextClassBounds.Right = dw
                NextClassBounds.Top = dY
                NextClassBounds.Bottom = dH
                NextClassSrcBounds.Left = sx
                NextClassSrcBounds.Right = sW
                NextClassSrcBounds.Top = sy
                NextClassSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'Class Name in Creation
        dX = NCClassNameX
        dY = NCClassNameY
        dw = NCClassNameWidth
        dH = NCClassNameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                NCClassNameBounds.Left = dX
                NCClassNameBounds.Right = dw
                NCClassNameBounds.Top = dY
                NCClassNameBounds.Bottom = dH
            End If
            sx = 0
            sy = 0
        End If
            'MaleButton Button
        dX = MaleButtonX
        dY = MaleButtonY
        dw = MaleButtonWidth
        dH = MaleButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If MaleButtonNormImage.Texture > 0 Then
                    If dw > MaleButtonNormImage.Width Then sW = dw - sx
                    If dH > MaleButtonNormImage.Height Then sH = dH - sy
                ElseIf MaleButtonClickImage.Texture > 0 Then
                    If dw > MaleButtonClickImage.Width Then sW = dw - sx
                    If dH > MaleButtonClickImage.Height Then sH = dH - sy
                End If
                MaleButtonBounds.Left = dX
                MaleButtonBounds.Right = dw
                MaleButtonBounds.Top = dY
                MaleButtonBounds.Bottom = dH
                MaleButtonSrcBounds.Left = sx
                MaleButtonSrcBounds.Right = sW
                MaleButtonSrcBounds.Top = sy
                MaleButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'FemaleButton Button
        dX = FemaleButtonX
        dY = FemaleButtonY
        dw = FemaleButtonWidth
        dH = FemaleButtonHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If FemaleButtonNormImage.Texture > 0 Then
                    If dw > FemaleButtonNormImage.Width Then sW = dw - sx
                    If dH > FemaleButtonNormImage.Height Then sH = dH - sy
                ElseIf FemaleButtonClickImage.Texture > 0 Then
                    If dw > FemaleButtonClickImage.Width Then sW = dw - sx
                    If dH > FemaleButtonClickImage.Height Then sH = dH - sy
                End If
                FemaleButtonBounds.Left = dX
                FemaleButtonBounds.Right = dw
                FemaleButtonBounds.Top = dY
                FemaleButtonBounds.Bottom = dH
                FemaleButtonSrcBounds.Left = sx
                FemaleButtonSrcBounds.Right = sW
                FemaleButtonSrcBounds.Top = sy
                FemaleButtonSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NCAccept Button
        dX = NCAcceptX
        dY = NCAcceptY
        dw = NCAcceptWidth
        dH = NCAcceptHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NCAcceptNormImage.Texture > 0 Then
                    If dw > NCAcceptNormImage.Width Then sW = dw - sx
                    If dH > NCAcceptNormImage.Height Then sH = dH - sy
                ElseIf NCAcceptHoverImage.Texture > 0 Then
                    If dw > NCAcceptHoverImage.Width Then sW = dw - sx
                    If dH > NCAcceptHoverImage.Height Then sH = dH - sy
                ElseIf NCAcceptClickImage.Texture > 0 Then
                    If dw > NCAcceptClickImage.Width Then sW = dw - sx
                    If dH > NCAcceptClickImage.Height Then sH = dH - sy
                End If
                NCAcceptBounds.Left = dX
                NCAcceptBounds.Right = dw
                NCAcceptBounds.Top = dY
                NCAcceptBounds.Bottom = dH
                NCAcceptSrcBounds.Left = sx
                NCAcceptSrcBounds.Right = sW
                NCAcceptSrcBounds.Top = sy
                NCAcceptSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextHair Button
        dX = NextHairX
        dY = NextHairY
        dw = NextHairWidth
        dH = NextHairHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextHairNormImage.Texture > 0 Then
                    If dw > NextHairNormImage.Width Then sW = dw - sx
                    If dH > NextHairNormImage.Height Then sH = dH - sy
                ElseIf NextHairHoverImage.Texture > 0 Then
                    If dw > NextHairHoverImage.Width Then sW = dw - sx
                    If dH > NextHairHoverImage.Height Then sH = dH - sy
                ElseIf NextHairClickImage.Texture > 0 Then
                    If dw > NextHairClickImage.Width Then sW = dw - sx
                    If dH > NextHairClickImage.Height Then sH = dH - sy
                End If
                NextHairBounds.Left = dX
                NextHairBounds.Right = dw
                NextHairBounds.Top = dY
                NextHairBounds.Bottom = dH
                NextHairSrcBounds.Left = sx
                NextHairSrcBounds.Right = sW
                NextHairSrcBounds.Top = sy
                NextHairSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextHead Button
        dX = NextHeadX
        dY = NextHeadY
        dw = NextHeadWidth
        dH = NextHeadHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextHeadNormImage.Texture > 0 Then
                    If dw > NextHeadNormImage.Width Then sW = dw - sx
                    If dH > NextHeadNormImage.Height Then sH = dH - sy
                ElseIf NextHeadHoverImage.Texture > 0 Then
                    If dw > NextHeadHoverImage.Width Then sW = dw - sx
                    If dH > NextHeadHoverImage.Height Then sH = dH - sy
                ElseIf NextHeadClickImage.Texture > 0 Then
                    If dw > NextHeadClickImage.Width Then sW = dw - sx
                    If dH > NextHeadClickImage.Height Then sH = dH - sy
                End If
                NextHeadBounds.Left = dX
                NextHeadBounds.Right = dw
                NextHeadBounds.Top = dY
                NextHeadBounds.Bottom = dH
                NextHeadSrcBounds.Left = sx
                NextHeadSrcBounds.Right = sW
                NextHeadSrcBounds.Top = sy
                NextHeadSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextEye Button
        dX = NextEyeX
        dY = NextEyeY
        dw = NextEyeWidth
        dH = NextEyeHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextEyeNormImage.Texture > 0 Then
                    If dw > NextEyeNormImage.Width Then sW = dw - sx
                    If dH > NextEyeNormImage.Height Then sH = dH - sy
                ElseIf NextEyeHoverImage.Texture > 0 Then
                    If dw > NextEyeHoverImage.Width Then sW = dw - sx
                    If dH > NextEyeHoverImage.Height Then sH = dH - sy
                ElseIf NextEyeClickImage.Texture > 0 Then
                    If dw > NextEyeClickImage.Width Then sW = dw - sx
                    If dH > NextEyeClickImage.Height Then sH = dH - sy
                End If
                NextEyeBounds.Left = dX
                NextEyeBounds.Right = dw
                NextEyeBounds.Top = dY
                NextEyeBounds.Bottom = dH
                NextEyeSrcBounds.Left = sx
                NextEyeSrcBounds.Right = sW
                NextEyeSrcBounds.Top = sy
                NextEyeSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextEyebrow Button
        dX = NextEyebrowX
        dY = NextEyebrowY
        dw = NextEyebrowWidth
        dH = NextEyebrowHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextEyebrowNormImage.Texture > 0 Then
                    If dw > NextEyebrowNormImage.Width Then sW = dw - sx
                    If dH > NextEyebrowNormImage.Height Then sH = dH - sy
                ElseIf NextEyebrowHoverImage.Texture > 0 Then
                    If dw > NextEyebrowHoverImage.Width Then sW = dw - sx
                    If dH > NextEyebrowHoverImage.Height Then sH = dH - sy
                ElseIf NextEyebrowClickImage.Texture > 0 Then
                    If dw > NextEyebrowClickImage.Width Then sW = dw - sx
                    If dH > NextEyebrowClickImage.Height Then sH = dH - sy
                End If
                NextEyebrowBounds.Left = dX
                NextEyebrowBounds.Right = dw
                NextEyebrowBounds.Top = dY
                NextEyebrowBounds.Bottom = dH
                NextEyebrowSrcBounds.Left = sx
                NextEyebrowSrcBounds.Right = sW
                NextEyebrowSrcBounds.Top = sy
                NextEyebrowSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextEar Button
        dX = NextEarX
        dY = NextEarY
        dw = NextEarWidth
        dH = NextEarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextEarNormImage.Texture > 0 Then
                    If dw > NextEarNormImage.Width Then sW = dw - sx
                    If dH > NextEarNormImage.Height Then sH = dH - sy
                ElseIf NextEarHoverImage.Texture > 0 Then
                    If dw > NextEarHoverImage.Width Then sW = dw - sx
                    If dH > NextEarHoverImage.Height Then sH = dH - sy
                ElseIf NextEarClickImage.Texture > 0 Then
                    If dw > NextEarClickImage.Width Then sW = dw - sx
                    If dH > NextEarClickImage.Height Then sH = dH - sy
                End If
                NextEarBounds.Left = dX
                NextEarBounds.Right = dw
                NextEarBounds.Top = dY
                NextEarBounds.Bottom = dH
                NextEarSrcBounds.Left = sx
                NextEarSrcBounds.Right = sW
                NextEarSrcBounds.Top = sy
                NextEarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextMouth Button
        dX = NextMouthX
        dY = NextMouthY
        dw = NextMouthWidth
        dH = NextMouthHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextMouthNormImage.Texture > 0 Then
                    If dw > NextMouthNormImage.Width Then sW = dw - sx
                    If dH > NextMouthNormImage.Height Then sH = dH - sy
                ElseIf NextMouthHoverImage.Texture > 0 Then
                    If dw > NextMouthHoverImage.Width Then sW = dw - sx
                    If dH > NextMouthHoverImage.Height Then sH = dH - sy
                ElseIf NextMouthClickImage.Texture > 0 Then
                    If dw > NextMouthClickImage.Width Then sW = dw - sx
                    If dH > NextMouthClickImage.Height Then sH = dH - sy
                End If
                NextMouthBounds.Left = dX
                NextMouthBounds.Right = dw
                NextMouthBounds.Top = dY
                NextMouthBounds.Bottom = dH
                NextMouthSrcBounds.Left = sx
                NextMouthSrcBounds.Right = sW
                NextMouthSrcBounds.Top = sy
                NextMouthSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextNose Button
        dX = NextNoseX
        dY = NextNoseY
        dw = NextNoseWidth
        dH = NextNoseHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextNoseNormImage.Texture > 0 Then
                    If dw > NextNoseNormImage.Width Then sW = dw - sx
                    If dH > NextNoseNormImage.Height Then sH = dH - sy
                ElseIf NextNoseHoverImage.Texture > 0 Then
                    If dw > NextNoseHoverImage.Width Then sW = dw - sx
                    If dH > NextNoseHoverImage.Height Then sH = dH - sy
                ElseIf NextNoseClickImage.Texture > 0 Then
                    If dw > NextNoseClickImage.Width Then sW = dw - sx
                    If dH > NextNoseClickImage.Height Then sH = dH - sy
                End If
                NextNoseBounds.Left = dX
                NextNoseBounds.Right = dw
                NextNoseBounds.Top = dY
                NextNoseBounds.Bottom = dH
                NextNoseSrcBounds.Left = sx
                NextNoseSrcBounds.Right = sW
                NextNoseSrcBounds.Top = sy
                NextNoseSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextShirt Button
        dX = NextShirtX
        dY = NextShirtY
        dw = NextShirtWidth
        dH = NextShirtHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextShirtNormImage.Texture > 0 Then
                    If dw > NextShirtNormImage.Width Then sW = dw - sx
                    If dH > NextShirtNormImage.Height Then sH = dH - sy
                ElseIf NextShirtHoverImage.Texture > 0 Then
                    If dw > NextShirtHoverImage.Width Then sW = dw - sx
                    If dH > NextShirtHoverImage.Height Then sH = dH - sy
                ElseIf NextShirtClickImage.Texture > 0 Then
                    If dw > NextShirtClickImage.Width Then sW = dw - sx
                    If dH > NextShirtClickImage.Height Then sH = dH - sy
                End If
                NextShirtBounds.Left = dX
                NextShirtBounds.Right = dw
                NextShirtBounds.Top = dY
                NextShirtBounds.Bottom = dH
                NextShirtSrcBounds.Left = sx
                NextShirtSrcBounds.Right = sW
                NextShirtSrcBounds.Top = sy
                NextShirtSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'NextExtra Button
        dX = NextExtraX
        dY = NextExtraY
        dw = NextExtraWidth
        dH = NextExtraHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If NextExtraNormImage.Texture > 0 Then
                    If dw > NextExtraNormImage.Width Then sW = dw - sx
                    If dH > NextExtraNormImage.Height Then sH = dH - sy
                ElseIf NextExtraHoverImage.Texture > 0 Then
                    If dw > NextExtraHoverImage.Width Then sW = dw - sx
                    If dH > NextExtraHoverImage.Height Then sH = dH - sy
                ElseIf NextExtraClickImage.Texture > 0 Then
                    If dw > NextExtraClickImage.Width Then sW = dw - sx
                    If dH > NextExtraClickImage.Height Then sH = dH - sy
                End If
                NextExtraBounds.Left = dX
                NextExtraBounds.Right = dw
                NextExtraBounds.Top = dY
                NextExtraBounds.Bottom = dH
                NextExtraSrcBounds.Left = sx
                NextExtraSrcBounds.Right = sW
                NextExtraSrcBounds.Top = sy
                NextExtraSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                                                                                                                                        'PrevHair Button
        dX = PrevHairX
        dY = PrevHairY
        dw = PrevHairWidth
        dH = PrevHairHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevHairNormImage.Texture > 0 Then
                    If dw > PrevHairNormImage.Width Then sW = dw - sx
                    If dH > PrevHairNormImage.Height Then sH = dH - sy
                ElseIf PrevHairHoverImage.Texture > 0 Then
                    If dw > PrevHairHoverImage.Width Then sW = dw - sx
                    If dH > PrevHairHoverImage.Height Then sH = dH - sy
                ElseIf PrevHairClickImage.Texture > 0 Then
                    If dw > PrevHairClickImage.Width Then sW = dw - sx
                    If dH > PrevHairClickImage.Height Then sH = dH - sy
                End If
                PrevHairBounds.Left = dX
                PrevHairBounds.Right = dw
                PrevHairBounds.Top = dY
                PrevHairBounds.Bottom = dH
                PrevHairSrcBounds.Left = sx
                PrevHairSrcBounds.Right = sW
                PrevHairSrcBounds.Top = sy
                PrevHairSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevHead Button
        dX = PrevHeadX
        dY = PrevHeadY
        dw = PrevHeadWidth
        dH = PrevHeadHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevHeadNormImage.Texture > 0 Then
                    If dw > PrevHeadNormImage.Width Then sW = dw - sx
                    If dH > PrevHeadNormImage.Height Then sH = dH - sy
                ElseIf PrevHeadHoverImage.Texture > 0 Then
                    If dw > PrevHeadHoverImage.Width Then sW = dw - sx
                    If dH > PrevHeadHoverImage.Height Then sH = dH - sy
                ElseIf PrevHeadClickImage.Texture > 0 Then
                    If dw > PrevHeadClickImage.Width Then sW = dw - sx
                    If dH > PrevHeadClickImage.Height Then sH = dH - sy
                End If
                PrevHeadBounds.Left = dX
                PrevHeadBounds.Right = dw
                PrevHeadBounds.Top = dY
                PrevHeadBounds.Bottom = dH
                PrevHeadSrcBounds.Left = sx
                PrevHeadSrcBounds.Right = sW
                PrevHeadSrcBounds.Top = sy
                PrevHeadSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevEye Button
        dX = PrevEyeX
        dY = PrevEyeY
        dw = PrevEyeWidth
        dH = PrevEyeHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevEyeNormImage.Texture > 0 Then
                    If dw > PrevEyeNormImage.Width Then sW = dw - sx
                    If dH > PrevEyeNormImage.Height Then sH = dH - sy
                ElseIf PrevEyeHoverImage.Texture > 0 Then
                    If dw > PrevEyeHoverImage.Width Then sW = dw - sx
                    If dH > PrevEyeHoverImage.Height Then sH = dH - sy
                ElseIf PrevEyeClickImage.Texture > 0 Then
                    If dw > PrevEyeClickImage.Width Then sW = dw - sx
                    If dH > PrevEyeClickImage.Height Then sH = dH - sy
                End If
                PrevEyeBounds.Left = dX
                PrevEyeBounds.Right = dw
                PrevEyeBounds.Top = dY
                PrevEyeBounds.Bottom = dH
                PrevEyeSrcBounds.Left = sx
                PrevEyeSrcBounds.Right = sW
                PrevEyeSrcBounds.Top = sy
                PrevEyeSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevEyebrow Button
        dX = PrevEyebrowX
        dY = PrevEyebrowY
        dw = PrevEyebrowWidth
        dH = PrevEyebrowHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevEyebrowNormImage.Texture > 0 Then
                    If dw > PrevEyebrowNormImage.Width Then sW = dw - sx
                    If dH > PrevEyebrowNormImage.Height Then sH = dH - sy
                ElseIf PrevEyebrowHoverImage.Texture > 0 Then
                    If dw > PrevEyebrowHoverImage.Width Then sW = dw - sx
                    If dH > PrevEyebrowHoverImage.Height Then sH = dH - sy
                ElseIf PrevEyebrowClickImage.Texture > 0 Then
                    If dw > PrevEyebrowClickImage.Width Then sW = dw - sx
                    If dH > PrevEyebrowClickImage.Height Then sH = dH - sy
                End If
                PrevEyebrowBounds.Left = dX
                PrevEyebrowBounds.Right = dw
                PrevEyebrowBounds.Top = dY
                PrevEyebrowBounds.Bottom = dH
                PrevEyebrowSrcBounds.Left = sx
                PrevEyebrowSrcBounds.Right = sW
                PrevEyebrowSrcBounds.Top = sy
                PrevEyebrowSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevEar Button
        dX = PrevEarX
        dY = PrevEarY
        dw = PrevEarWidth
        dH = PrevEarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevEarNormImage.Texture > 0 Then
                    If dw > PrevEarNormImage.Width Then sW = dw - sx
                    If dH > PrevEarNormImage.Height Then sH = dH - sy
                ElseIf PrevEarHoverImage.Texture > 0 Then
                    If dw > PrevEarHoverImage.Width Then sW = dw - sx
                    If dH > PrevEarHoverImage.Height Then sH = dH - sy
                ElseIf PrevEarClickImage.Texture > 0 Then
                    If dw > PrevEarClickImage.Width Then sW = dw - sx
                    If dH > PrevEarClickImage.Height Then sH = dH - sy
                End If
                PrevEarBounds.Left = dX
                PrevEarBounds.Right = dw
                PrevEarBounds.Top = dY
                PrevEarBounds.Bottom = dH
                PrevEarSrcBounds.Left = sx
                PrevEarSrcBounds.Right = sW
                PrevEarSrcBounds.Top = sy
                PrevEarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevMouth Button
        dX = PrevMouthX
        dY = PrevMouthY
        dw = PrevMouthWidth
        dH = PrevMouthHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevMouthNormImage.Texture > 0 Then
                    If dw > PrevMouthNormImage.Width Then sW = dw - sx
                    If dH > PrevMouthNormImage.Height Then sH = dH - sy
                ElseIf PrevMouthHoverImage.Texture > 0 Then
                    If dw > PrevMouthHoverImage.Width Then sW = dw - sx
                    If dH > PrevMouthHoverImage.Height Then sH = dH - sy
                ElseIf PrevMouthClickImage.Texture > 0 Then
                    If dw > PrevMouthClickImage.Width Then sW = dw - sx
                    If dH > PrevMouthClickImage.Height Then sH = dH - sy
                End If
                PrevMouthBounds.Left = dX
                PrevMouthBounds.Right = dw
                PrevMouthBounds.Top = dY
                PrevMouthBounds.Bottom = dH
                PrevMouthSrcBounds.Left = sx
                PrevMouthSrcBounds.Right = sW
                PrevMouthSrcBounds.Top = sy
                PrevMouthSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevNose Button
        dX = PrevNoseX
        dY = PrevNoseY
        dw = PrevNoseWidth
        dH = PrevNoseHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevNoseNormImage.Texture > 0 Then
                    If dw > PrevNoseNormImage.Width Then sW = dw - sx
                    If dH > PrevNoseNormImage.Height Then sH = dH - sy
                ElseIf PrevNoseHoverImage.Texture > 0 Then
                    If dw > PrevNoseHoverImage.Width Then sW = dw - sx
                    If dH > PrevNoseHoverImage.Height Then sH = dH - sy
                ElseIf PrevNoseClickImage.Texture > 0 Then
                    If dw > PrevNoseClickImage.Width Then sW = dw - sx
                    If dH > PrevNoseClickImage.Height Then sH = dH - sy
                End If
                PrevNoseBounds.Left = dX
                PrevNoseBounds.Right = dw
                PrevNoseBounds.Top = dY
                PrevNoseBounds.Bottom = dH
                PrevNoseSrcBounds.Left = sx
                PrevNoseSrcBounds.Right = sW
                PrevNoseSrcBounds.Top = sy
                PrevNoseSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevShirt Button
        dX = PrevShirtX
        dY = PrevShirtY
        dw = PrevShirtWidth
        dH = PrevShirtHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevShirtNormImage.Texture > 0 Then
                    If dw > PrevShirtNormImage.Width Then sW = dw - sx
                    If dH > PrevShirtNormImage.Height Then sH = dH - sy
                ElseIf PrevShirtHoverImage.Texture > 0 Then
                    If dw > PrevShirtHoverImage.Width Then sW = dw - sx
                    If dH > PrevShirtHoverImage.Height Then sH = dH - sy
                ElseIf PrevShirtClickImage.Texture > 0 Then
                    If dw > PrevShirtClickImage.Width Then sW = dw - sx
                    If dH > PrevShirtClickImage.Height Then sH = dH - sy
                End If
                PrevShirtBounds.Left = dX
                PrevShirtBounds.Right = dw
                PrevShirtBounds.Top = dY
                PrevShirtBounds.Bottom = dH
                PrevShirtSrcBounds.Left = sx
                PrevShirtSrcBounds.Right = sW
                PrevShirtSrcBounds.Top = sy
                PrevShirtSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PrevExtra Button
        dX = PrevExtraX
        dY = PrevExtraY
        dw = PrevExtraWidth
        dH = PrevExtraHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < NewCharPanelBounds.Right And dY < NewCharPanelBounds.Bottom Then
                If dX + dw > NewCharPanelBounds.Right Then
                    dw = dw - ((dX + dw) - NewCharPanelBounds.Right)
                End If
                If dY + dH > NewCharPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - NewCharPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIContainerX + NewCharPanelX
                dY = dY + GUIContainerY + NewCharPanelY
                sW = dw
                sH = dH
                If PrevExtraNormImage.Texture > 0 Then
                    If dw > PrevExtraNormImage.Width Then sW = dw - sx
                    If dH > PrevExtraNormImage.Height Then sH = dH - sy
                ElseIf PrevExtraHoverImage.Texture > 0 Then
                    If dw > PrevExtraHoverImage.Width Then sW = dw - sx
                    If dH > PrevExtraHoverImage.Height Then sH = dH - sy
                ElseIf PrevExtraClickImage.Texture > 0 Then
                    If dw > PrevExtraClickImage.Width Then sW = dw - sx
                    If dH > PrevExtraClickImage.Height Then sH = dH - sy
                End If
                PrevExtraBounds.Left = dX
                PrevExtraBounds.Right = dw
                PrevExtraBounds.Top = dY
                PrevExtraBounds.Bottom = dH
                PrevExtraSrcBounds.Left = sx
                PrevExtraSrcBounds.Right = sW
                PrevExtraSrcBounds.Top = sy
                PrevExtraSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                                                            'PicScreen/GameScreen
        dX = GameScreenX
        dY = GameScreenY
        dw = GameScreenWidth
        dH = GameScreenHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameWindowWidth And dY < GameWindowWidth Then
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX
                dY = dY
                sW = dw
                sH = dH
                If dw > 0 Then MAX_MAPX = (dw / 32) - 1
                If dH > 0 Then MAX_MAPY = (dH / 32) - 1
                HalfX = ((MAX_MAPX + 1) / 2) * PIC_X
                HalfY = (MAX_MAPY / 2) * PIC_Y
                ScreenX = (MAX_MAPX + 1) * PIC_X
                ScreenY = MAX_MAPY * PIC_Y
                StartXValue = ((MAX_MAPX + 1) / 2)
                StartYValue = (MAX_MAPY / 2)
                EndXValue = (MAX_MAPX)
                EndYValue = (MAX_MAPY)
                Half_PIC_X = PIC_X / 2
                Half_PIC_Y = PIC_Y / 2
                GameScreenBounds.Left = dX
                GameScreenBounds.Right = dw + dX
                GameScreenBounds.Top = dY
                GameScreenBounds.Bottom = dH + dY
                GameScreenSrcBounds.Left = sx
                GameScreenSrcBounds.Right = sW
                GameScreenSrcBounds.Top = sy
                GameScreenSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'chatboxpnl Panel
        dX = ChatboxPnlX
        dY = ChatboxPnlY
        dw = ChatboxPnlWidth
        dH = ChatboxPnlHeight
        If ChatboxParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    ChatboxPnlBounds.Left = dX
                    ChatboxPnlBounds.Right = dw
                    ChatboxPnlBounds.Top = dY
                    ChatboxPnlBounds.Bottom = dH
                    ChatboxPnlSrcBounds.Left = sx
                    ChatboxPnlSrcBounds.Right = sW
                    ChatboxPnlSrcBounds.Top = sy
                    ChatboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    ChatboxPnlBounds.Left = dX
                    ChatboxPnlBounds.Right = dw
                    ChatboxPnlBounds.Top = dY
                    ChatboxPnlBounds.Bottom = dH
                    ChatboxPnlSrcBounds.Left = sx
                    ChatboxPnlSrcBounds.Right = sW
                    ChatboxPnlSrcBounds.Top = sy
                    ChatboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'chatbox text
        dX = ChatboxX
        dY = ChatboxY
        dw = ChatboxWidth
        dH = ChatboxHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ChatboxPnlBounds.Right And dY < ChatboxPnlBounds.Bottom Then
                If dX + dw > ChatboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ChatboxPnlBounds.Right)
                End If
                If dY + dH > ChatboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ChatboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ChatboxPnlBounds.Left
                dY = dY + ChatboxPnlBounds.Top
                sW = dw
                sH = dH
                ChatboxBounds.Left = dX
                ChatboxBounds.Right = dw
                ChatboxBounds.Top = dY
                ChatboxBounds.Bottom = dH
                If dw > 0 Then
                    ChatWidth = dw
                    If dH > 12 Then
                        ChatLines = CInt(dH / 14)
                        ChatScroll = ChatLines
                        ChatOffsetX = ChatboxBounds.Left
                        ChatOffsetY = ChatboxBounds.Top
                    Else
                        ChatScroll = 0
                    End If
                Else
                    ChatScroll = 0
                    ChatWidth = 100
                End If
                sx = 0
                sy = 0
            End If
        End If
            'MyText Panel
        dX = MyTextX
        dY = MyTextY
        dw = MyTextWidth
        dH = MyTextHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ChatboxPnlBounds.Right And dY < ChatboxPnlBounds.Bottom Then
                If dX + dw > ChatboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ChatboxPnlBounds.Right)
                End If
                If dY + dH > ChatboxPnlHeight Then
                    dH = dH - ((dY + dH) - ChatboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ChatboxPnlBounds.Left
                dY = dY + ChatboxPnlBounds.Top
                sW = dw
                sH = dH
                MyTextBounds.Left = dX
                MyTextBounds.Right = dw
                MyTextBounds.Top = dY
                MyTextBounds.Bottom = dH
                sx = 0
                sy = 0
            End If
        End If
            'ChatUpBtn Button
        dX = ChatUpBtnX
        dY = ChatUpBtnY
        dw = ChatUpBtnWidth
        dH = ChatUpBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ChatboxPnlBounds.Right And dY < ChatboxPnlBounds.Bottom Then
                If dX + dw > ChatboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ChatboxPnlBounds.Right)
                End If
                If dY + dH > ChatboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ChatboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ChatboxPnlBounds.Left
                dY = dY + ChatboxPnlBounds.Top
                sW = dw
                sH = dH
                If ChatUpBtnNormImage.Texture > 0 Then
                    If dw > ChatUpBtnNormImage.Width Then sW = dw - sx
                    If dH > ChatUpBtnNormImage.Height Then sH = dH - sy
                ElseIf ChatUpBtnHoverImage.Texture > 0 Then
                    If dw > ChatUpBtnHoverImage.Width Then sW = dw - sx
                    If dH > ChatUpBtnHoverImage.Height Then sH = dH - sy
                ElseIf ChatUpBtnClickImage.Texture > 0 Then
                    If dw > ChatUpBtnClickImage.Width Then sW = dw - sx
                    If dH > ChatUpBtnClickImage.Height Then sH = dH - sy
                End If
                ChatUpBtnBounds.Left = dX
                ChatUpBtnBounds.Right = dw
                ChatUpBtnBounds.Top = dY
                ChatUpBtnBounds.Bottom = dH
                ChatUpBtnSrcBounds.Left = sx
                ChatUpBtnSrcBounds.Right = sW
                ChatUpBtnSrcBounds.Top = sy
                ChatUpBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ChatDownBtn Button
        dX = ChatDownBtnX
        dY = ChatDownBtnY
        dw = ChatDownBtnWidth
        dH = ChatDownBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ChatboxPnlBounds.Right And dY < ChatboxPnlBounds.Bottom Then
                If dX + dw > ChatboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ChatboxPnlBounds.Right)
                End If
                If dY + dH > ChatboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ChatboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ChatboxPnlBounds.Left
                dY = dY + ChatboxPnlBounds.Top
                sW = dw
                sH = dH
                If ChatDownBtnNormImage.Texture > 0 Then
                    If dw > ChatDownBtnNormImage.Width Then sW = dw - sx
                    If dH > ChatDownBtnNormImage.Height Then sH = dH - sy
                ElseIf ChatDownBtnHoverImage.Texture > 0 Then
                    If dw > ChatDownBtnHoverImage.Width Then sW = dw - sx
                    If dH > ChatDownBtnHoverImage.Height Then sH = dH - sy
                ElseIf ChatDownBtnClickImage.Texture > 0 Then
                    If dw > ChatDownBtnClickImage.Width Then sW = dw - sx
                    If dH > ChatDownBtnClickImage.Height Then sH = dH - sy
                End If
                ChatDownBtnBounds.Left = dX
                ChatDownBtnBounds.Right = dw
                ChatDownBtnBounds.Top = dY
                ChatDownBtnBounds.Bottom = dH
                ChatDownBtnSrcBounds.Left = sx
                ChatDownBtnSrcBounds.Right = sW
                ChatDownBtnSrcBounds.Top = sy
                ChatDownBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'GameMenuPanel Panel
        dX = GameMenuPanelX
        dY = GameMenuPanelY
        dw = GameMenuPanelWidth
        dH = GameMenuPanelHeight
        If GameMenuPanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    GameMenuPanelBounds.Left = dX
                    GameMenuPanelBounds.Right = dw
                    GameMenuPanelBounds.Top = dY
                    GameMenuPanelBounds.Bottom = dH
                    GameMenuPanelSrcBounds.Left = sx
                    GameMenuPanelSrcBounds.Right = sW
                    GameMenuPanelSrcBounds.Top = sy
                    GameMenuPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    GameMenuPanelBounds.Left = dX
                    GameMenuPanelBounds.Right = dw
                    GameMenuPanelBounds.Top = dY
                    GameMenuPanelBounds.Bottom = dH
                    GameMenuPanelSrcBounds.Left = sx
                    GameMenuPanelSrcBounds.Right = sW
                    GameMenuPanelSrcBounds.Top = sy
                    GameMenuPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'InventoryBtn Button
        dX = InventoryBtnX
        dY = InventoryBtnY
        dw = InventoryBtnWidth
        dH = InventoryBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If InventoryBtnNormImage.Texture > 0 Then
                    If dw > InventoryBtnNormImage.Width Then sW = dw - sx
                    If dH > InventoryBtnNormImage.Height Then sH = dH - sy
                ElseIf InventoryBtnHoverImage.Texture > 0 Then
                    If dw > InventoryBtnHoverImage.Width Then sW = dw - sx
                    If dH > InventoryBtnHoverImage.Height Then sH = dH - sy
                ElseIf InventoryBtnClickImage.Texture > 0 Then
                    If dw > InventoryBtnClickImage.Width Then sW = dw - sx
                    If dH > InventoryBtnClickImage.Height Then sH = dH - sy
                End If
                InventoryBtnBounds.Left = dX
                InventoryBtnBounds.Right = dw
                InventoryBtnBounds.Top = dY
                InventoryBtnBounds.Bottom = dH
                InventoryBtnSrcBounds.Left = sx
                InventoryBtnSrcBounds.Right = sW
                InventoryBtnSrcBounds.Top = sy
                InventoryBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'SkillsBtn Button
        dX = SkillsBtnX
        dY = SkillsBtnY
        dw = SkillsBtnWidth
        dH = SkillsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If SkillsBtnNormImage.Texture > 0 Then
                    If dw > SkillsBtnNormImage.Width Then sW = dw - sx
                    If dH > SkillsBtnNormImage.Height Then sH = dH - sy
                ElseIf SkillsBtnHoverImage.Texture > 0 Then
                    If dw > SkillsBtnHoverImage.Width Then sW = dw - sx
                    If dH > SkillsBtnHoverImage.Height Then sH = dH - sy
                ElseIf SkillsBtnClickImage.Texture > 0 Then
                    If dw > SkillsBtnClickImage.Width Then sW = dw - sx
                    If dH > SkillsBtnClickImage.Height Then sH = dH - sy
                End If
                SkillsBtnBounds.Left = dX
                SkillsBtnBounds.Right = dw
                SkillsBtnBounds.Top = dY
                SkillsBtnBounds.Bottom = dH
                SkillsBtnSrcBounds.Left = sx
                SkillsBtnSrcBounds.Right = sW
                SkillsBtnSrcBounds.Top = sy
                SkillsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CharacterBtn Button
        dX = CharacterBtnX
        dY = CharacterBtnY
        dw = CharacterBtnWidth
        dH = CharacterBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If CharacterBtnNormImage.Texture > 0 Then
                    If dw > CharacterBtnNormImage.Width Then sW = dw - sx
                    If dH > CharacterBtnNormImage.Height Then sH = dH - sy
                ElseIf CharacterBtnHoverImage.Texture > 0 Then
                    If dw > CharacterBtnHoverImage.Width Then sW = dw - sx
                    If dH > CharacterBtnHoverImage.Height Then sH = dH - sy
                ElseIf CharacterBtnClickImage.Texture > 0 Then
                    If dw > CharacterBtnClickImage.Width Then sW = dw - sx
                    If dH > CharacterBtnClickImage.Height Then sH = dH - sy
                End If
                CharacterBtnBounds.Left = dX
                CharacterBtnBounds.Right = dw
                CharacterBtnBounds.Top = dY
                CharacterBtnBounds.Bottom = dH
                CharacterBtnSrcBounds.Left = sx
                CharacterBtnSrcBounds.Right = sW
                CharacterBtnSrcBounds.Top = sy
                CharacterBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'OptionsBtn Button
        dX = OptionsBtnX
        dY = OptionsBtnY
        dw = OptionsBtnWidth
        dH = OptionsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If OptionsBtnNormImage.Texture > 0 Then
                    If dw > OptionsBtnNormImage.Width Then sW = dw - sx
                    If dH > OptionsBtnNormImage.Height Then sH = dH - sy
                ElseIf OptionsBtnHoverImage.Texture > 0 Then
                    If dw > OptionsBtnHoverImage.Width Then sW = dw - sx
                    If dH > OptionsBtnHoverImage.Height Then sH = dH - sy
                ElseIf OptionsBtnClickImage.Texture > 0 Then
                    If dw > OptionsBtnClickImage.Width Then sW = dw - sx
                    If dH > OptionsBtnClickImage.Height Then sH = dH - sy
                End If
                OptionsBtnBounds.Left = dX
                OptionsBtnBounds.Right = dw
                OptionsBtnBounds.Top = dY
                OptionsBtnBounds.Bottom = dH
                OptionsBtnSrcBounds.Left = sx
                OptionsBtnSrcBounds.Right = sW
                OptionsBtnSrcBounds.Top = sy
                OptionsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'TradeBtn Button
        dX = TradeBtnX
        dY = TradeBtnY
        dw = TradeBtnWidth
        dH = TradeBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If TradeBtnNormImage.Texture > 0 Then
                    If dw > TradeBtnNormImage.Width Then sW = dw - sx
                    If dH > TradeBtnNormImage.Height Then sH = dH - sy
                ElseIf TradeBtnHoverImage.Texture > 0 Then
                    If dw > TradeBtnHoverImage.Width Then sW = dw - sx
                    If dH > TradeBtnHoverImage.Height Then sH = dH - sy
                ElseIf TradeBtnClickImage.Texture > 0 Then
                    If dw > TradeBtnClickImage.Width Then sW = dw - sx
                    If dH > TradeBtnClickImage.Height Then sH = dH - sy
                End If
                TradeBtnBounds.Left = dX
                TradeBtnBounds.Right = dw
                TradeBtnBounds.Top = dY
                TradeBtnBounds.Bottom = dH
                TradeBtnSrcBounds.Left = sx
                TradeBtnSrcBounds.Right = sW
                TradeBtnSrcBounds.Top = sy
                TradeBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyBtn Button
        dX = PartyBtnX
        dY = PartyBtnY
        dw = PartyBtnWidth
        dH = PartyBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If PartyBtnNormImage.Texture > 0 Then
                    If dw > PartyBtnNormImage.Width Then sW = dw - sx
                    If dH > PartyBtnNormImage.Height Then sH = dH - sy
                ElseIf PartyBtnHoverImage.Texture > 0 Then
                    If dw > PartyBtnHoverImage.Width Then sW = dw - sx
                    If dH > PartyBtnHoverImage.Height Then sH = dH - sy
                ElseIf PartyBtnClickImage.Texture > 0 Then
                    If dw > PartyBtnClickImage.Width Then sW = dw - sx
                    If dH > PartyBtnClickImage.Height Then sH = dH - sy
                End If
                PartyBtnBounds.Left = dX
                PartyBtnBounds.Right = dw
                PartyBtnBounds.Top = dY
                PartyBtnBounds.Bottom = dH
                PartyBtnSrcBounds.Left = sx
                PartyBtnSrcBounds.Right = sW
                PartyBtnSrcBounds.Top = sy
                PartyBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'QuestsBtn Button
        dX = QuestsBtnX
        dY = QuestsBtnY
        dw = QuestsBtnWidth
        dH = QuestsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If QuestsBtnNormImage.Texture > 0 Then
                    If dw > QuestsBtnNormImage.Width Then sW = dw - sx
                    If dH > QuestsBtnNormImage.Height Then sH = dH - sy
                ElseIf QuestsBtnHoverImage.Texture > 0 Then
                    If dw > QuestsBtnHoverImage.Width Then sW = dw - sx
                    If dH > QuestsBtnHoverImage.Height Then sH = dH - sy
                ElseIf QuestsBtnClickImage.Texture > 0 Then
                    If dw > QuestsBtnClickImage.Width Then sW = dw - sx
                    If dH > QuestsBtnClickImage.Height Then sH = dH - sy
                End If
                QuestsBtnBounds.Left = dX
                QuestsBtnBounds.Right = dw
                QuestsBtnBounds.Top = dY
                QuestsBtnBounds.Bottom = dH
                QuestsBtnSrcBounds.Left = sx
                QuestsBtnSrcBounds.Right = sW
                QuestsBtnSrcBounds.Top = sy
                QuestsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        'PetsBtn Button
        dX = PetsBtnX
        dY = PetsBtnY
        dw = PetsBtnWidth
        dH = PetsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If PetsBtnNormImage.Texture > 0 Then
                    If dw > PetsBtnNormImage.Width Then sW = dw - sx
                    If dH > PetsBtnNormImage.Height Then sH = dH - sy
                ElseIf PetsBtnHoverImage.Texture > 0 Then
                    If dw > PetsBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetsBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetsBtnClickImage.Texture > 0 Then
                    If dw > PetsBtnClickImage.Width Then sW = dw - sx
                    If dH > PetsBtnClickImage.Height Then sH = dH - sy
                End If
                PetsBtnBounds.Left = dX
                PetsBtnBounds.Right = dw
                PetsBtnBounds.Top = dY
                PetsBtnBounds.Bottom = dH
                PetsBtnSrcBounds.Left = sx
                PetsBtnSrcBounds.Right = sW
                PetsBtnSrcBounds.Top = sy
                PetsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'FriendsBtn Button
        dX = FriendsBtnX
        dY = FriendsBtnY
        dw = FriendsBtnWidth
        dH = FriendsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GameMenuPanelBounds.Right And dY < GameMenuPanelBounds.Bottom Then
                If dX + dw > GameMenuPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GameMenuPanelBounds.Right)
                End If
                If dY + dH > GameMenuPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GameMenuPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GameMenuPanelBounds.Left
                dY = dY + GameMenuPanelBounds.Top
                sW = dw
                sH = dH
                If FriendsBtnNormImage.Texture > 0 Then
                    If dw > FriendsBtnNormImage.Width Then sW = dw - sx
                    If dH > FriendsBtnNormImage.Height Then sH = dH - sy
                ElseIf FriendsBtnHoverImage.Texture > 0 Then
                    If dw > FriendsBtnHoverImage.Width Then sW = dw - sx
                    If dH > FriendsBtnHoverImage.Height Then sH = dH - sy
                ElseIf FriendsBtnClickImage.Texture > 0 Then
                    If dw > FriendsBtnClickImage.Width Then sW = dw - sx
                    If dH > FriendsBtnClickImage.Height Then sH = dH - sy
                End If
                FriendsBtnBounds.Left = dX
                FriendsBtnBounds.Right = dw
                FriendsBtnBounds.Top = dY
                FriendsBtnBounds.Bottom = dH
                FriendsBtnSrcBounds.Left = sx
                FriendsBtnSrcBounds.Right = sW
                FriendsBtnSrcBounds.Top = sy
                FriendsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'GUIbarspanel Panel
        dX = GUIBarsPanelX
        dY = GUIBarsPanelY
        dw = GUIBarsPanelWidth
        dH = GUIBarsPanelHeight
        If GUIBarsPanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    GUIBarsPanelBounds.Left = dX
                    GUIBarsPanelBounds.Right = dw
                    GUIBarsPanelBounds.Top = dY
                    GUIBarsPanelBounds.Bottom = dH
                    GUIBarsPanelSrcBounds.Left = sx
                    GUIBarsPanelSrcBounds.Right = sW
                    GUIBarsPanelSrcBounds.Top = sy
                    GUIBarsPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    GUIBarsPanelBounds.Left = dX
                    GUIBarsPanelBounds.Right = dw
                    GUIBarsPanelBounds.Top = dY
                    GUIBarsPanelBounds.Bottom = dH
                    GUIBarsPanelSrcBounds.Left = sx
                    GUIBarsPanelSrcBounds.Right = sW
                    GUIBarsPanelSrcBounds.Top = sy
                    GUIBarsPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'HealthBar
        dX = HealthBarX
        dY = HealthBarY
        dw = HealthBarWidth
        dH = HealthBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIBarsPanelBounds.Right And dY < GUIBarsPanelBounds.Bottom Then
                If dX + dw > GUIBarsPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GUIBarsPanelBounds.Right)
                End If
                If dY + dH > GUIBarsPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GUIBarsPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIBarsPanelBounds.Left
                dY = dY + GUIBarsPanelBounds.Top
                sW = dw
                sH = dH
                If HealthBarImage.Texture > 0 Then
                End If
                HealthBarBounds.Left = dX
                HealthBarBounds.Right = dw
                HealthBarBounds.Top = dY
                HealthBarBounds.Bottom = dH
                HealthBarSrcBounds.Left = sx
                HealthBarSrcBounds.Right = sW
                HealthBarSrcBounds.Top = sy
                HealthBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ManaBar
        dX = ManaBarX
        dY = ManaBarY
        dw = ManaBarWidth
        dH = ManaBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIBarsPanelBounds.Right And dY < GUIBarsPanelBounds.Bottom Then
                If dX + dw > GUIBarsPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GUIBarsPanelBounds.Right)
                End If
                If dY + dH > GUIBarsPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GUIBarsPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIBarsPanelBounds.Left
                dY = dY + GUIBarsPanelBounds.Top
                sW = dw
                sH = dH
                If ManaBarImage.Texture > 0 Then
                End If
                ManaBarBounds.Left = dX
                ManaBarBounds.Right = dw
                ManaBarBounds.Top = dY
                ManaBarBounds.Bottom = dH
                ManaBarSrcBounds.Left = sx
                ManaBarSrcBounds.Right = sW
                ManaBarSrcBounds.Top = sy
                ManaBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ExpBar
        dX = ExpBarX
        dY = ExpBarY
        dw = ExpBarWidth
        dH = ExpBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < GUIBarsPanelBounds.Right And dY < GUIBarsPanelBounds.Bottom Then
                If dX + dw > GUIBarsPanelBounds.Right Then
                    dw = dw - ((dX + dw) - GUIBarsPanelBounds.Right)
                End If
                If dY + dH > GUIBarsPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - GUIBarsPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + GUIBarsPanelBounds.Left
                dY = dY + GUIBarsPanelBounds.Top
                sW = dw
                sH = dH
                If ExpBarImage.Texture > 0 Then
                End If
                ExpBarBounds.Left = dX
                ExpBarBounds.Right = dw
                ExpBarBounds.Top = dY
                ExpBarBounds.Bottom = dH
                ExpBarSrcBounds.Left = sx
                ExpBarSrcBounds.Right = sW
                ExpBarSrcBounds.Top = sy
                ExpBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            
            

        CacheInterfaceBounds2
    
    On Error GoTo 0
    Exit Sub
errorhandler:
    HandleError "CacheInterfaceBounds", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub
Sub CacheInterfaceBounds2()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    On Error GoTo errorhandler
    
        'HotbarPnl Panel
        dX = HotbarPnlX
        dY = HotbarPnlY
        dw = HotbarPnlWidth
        dH = HotbarPnlHeight
        If HotbarPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    HotbarPnlBounds.Left = dX
                    HotbarPnlBounds.Right = dw
                    HotbarPnlBounds.Top = dY
                    HotbarPnlBounds.Bottom = dH
                    HotbarPnlSrcBounds.Left = sx
                    HotbarPnlSrcBounds.Right = sW
                    HotbarPnlSrcBounds.Top = sy
                    HotbarPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    HotbarPnlBounds.Left = dX
                    HotbarPnlBounds.Right = dw
                    HotbarPnlBounds.Top = dY
                    HotbarPnlBounds.Bottom = dH
                    HotbarPnlSrcBounds.Left = sx
                    HotbarPnlSrcBounds.Right = sW
                    HotbarPnlSrcBounds.Top = sy
                    HotbarPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'HotbarIcon1
        dX = HotbarIcon1X
        dY = HotbarIcon1Y
        dw = HotbarIcon1Width
        dH = HotbarIcon1Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon1Bounds.Left = dX
                HotbarIcon1Bounds.Right = dw
                HotbarIcon1Bounds.Top = dY
                HotbarIcon1Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon2
        dX = HotbarIcon2X
        dY = HotbarIcon2Y
        dw = HotbarIcon2Width
        dH = HotbarIcon2Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon2Bounds.Left = dX
                HotbarIcon2Bounds.Right = dw
                HotbarIcon2Bounds.Top = dY
                HotbarIcon2Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon3
        dX = HotbarIcon3X
        dY = HotbarIcon3Y
        dw = HotbarIcon3Width
        dH = HotbarIcon3Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon3Bounds.Left = dX
                HotbarIcon3Bounds.Right = dw
                HotbarIcon3Bounds.Top = dY
                HotbarIcon3Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon4
        dX = HotbarIcon4X
        dY = HotbarIcon4Y
        dw = HotbarIcon4Width
        dH = HotbarIcon4Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon4Bounds.Left = dX
                HotbarIcon4Bounds.Right = dw
                HotbarIcon4Bounds.Top = dY
                HotbarIcon4Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon5
        dX = HotbarIcon5X
        dY = HotbarIcon5Y
        dw = HotbarIcon5Width
        dH = HotbarIcon5Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon5Bounds.Left = dX
                HotbarIcon5Bounds.Right = dw
                HotbarIcon5Bounds.Top = dY
                HotbarIcon5Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon6
        dX = HotbarIcon6X
        dY = HotbarIcon6Y
        dw = HotbarIcon6Width
        dH = HotbarIcon6Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon6Bounds.Left = dX
                HotbarIcon6Bounds.Right = dw
                HotbarIcon6Bounds.Top = dY
                HotbarIcon6Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon7
        dX = HotbarIcon7X
        dY = HotbarIcon7Y
        dw = HotbarIcon7Width
        dH = HotbarIcon7Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon7Bounds.Left = dX
                HotbarIcon7Bounds.Right = dw
                HotbarIcon7Bounds.Top = dY
                HotbarIcon7Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon8
        dX = HotbarIcon8X
        dY = HotbarIcon8Y
        dw = HotbarIcon8Width
        dH = HotbarIcon8Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon8Bounds.Left = dX
                HotbarIcon8Bounds.Right = dw
                HotbarIcon8Bounds.Top = dY
                HotbarIcon8Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon9
        dX = HotbarIcon9X
        dY = HotbarIcon9Y
        dw = HotbarIcon9Width
        dH = HotbarIcon9Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon9Bounds.Left = dX
                HotbarIcon9Bounds.Right = dw
                HotbarIcon9Bounds.Top = dY
                HotbarIcon9Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon10
        dX = HotbarIcon10X
        dY = HotbarIcon10Y
        dw = HotbarIcon10Width
        dH = HotbarIcon10Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon10Bounds.Left = dX
                HotbarIcon10Bounds.Right = dw
                HotbarIcon10Bounds.Top = dY
                HotbarIcon10Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon11
        dX = HotbarIcon11X
        dY = HotbarIcon11Y
        dw = HotbarIcon11Width
        dH = HotbarIcon11Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon11Bounds.Left = dX
                HotbarIcon11Bounds.Right = dw
                HotbarIcon11Bounds.Top = dY
                HotbarIcon11Bounds.Bottom = dH
            End If
        End If
            'HotbarIcon12
        dX = HotbarIcon12X
        dY = HotbarIcon12Y
        dw = HotbarIcon12Width
        dH = HotbarIcon12Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < HotbarPnlBounds.Right And dY < HotbarPnlBounds.Bottom Then
                If dX + dw > HotbarPnlBounds.Right Then
                    dw = dw - ((dX + dw) - HotbarPnlBounds.Right)
                End If
                If dY + dH > HotbarPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - HotbarPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + HotbarPnlBounds.Left
                dY = dY + HotbarPnlBounds.Top
                HotbarIcon12Bounds.Left = dX
                HotbarIcon12Bounds.Right = dw
                HotbarIcon12Bounds.Top = dY
                HotbarIcon12Bounds.Bottom = dH
            End If
        End If
            'InventoryPnl Panel
        dX = InventoryPnlX
        dY = InventoryPnlY
        dw = InventoryPnlWidth
        dH = InventoryPnlHeight
        If InventoryPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    InventoryPnlBounds.Left = dX
                    InventoryPnlBounds.Right = dw
                    InventoryPnlBounds.Top = dY
                    InventoryPnlBounds.Bottom = dH
                    InventoryPnlSrcBounds.Left = sx
                    InventoryPnlSrcBounds.Right = sW
                    InventoryPnlSrcBounds.Top = sy
                    InventoryPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    InventoryPnlBounds.Left = dX
                    InventoryPnlBounds.Right = dw
                    InventoryPnlBounds.Top = dY
                    InventoryPnlBounds.Bottom = dH
                    InventoryPnlSrcBounds.Left = sx
                    InventoryPnlSrcBounds.Right = sW
                    InventoryPnlSrcBounds.Top = sy
                    InventoryPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'InvItems
        dX = InvItemsX
        dY = InvItemsY
        dw = InvItemsWidth
        dH = InvItemsHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InventoryPnlBounds.Right And dY < InventoryPnlBounds.Bottom Then
                If dX + dw > InventoryPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InventoryPnlBounds.Right)
                End If
                If dY + dH > InventoryPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InventoryPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InventoryPnlBounds.Left
                dY = dY + InventoryPnlBounds.Top
                InvItemsBounds.Left = dX
                InvItemsBounds.Right = dw
                InvItemsBounds.Top = dY
                InvItemsBounds.Bottom = dH
            End If
        End If
            'CloseInvBtn Button
        dX = CloseInvBtnX
        dY = CloseInvBtnY
        dw = CloseInvBtnWidth
        dH = CloseInvBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InventoryPnlBounds.Right And dY < InventoryPnlBounds.Bottom Then
                If dX + dw > InventoryPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InventoryPnlBounds.Right)
                End If
                If dY + dH > InventoryPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InventoryPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InventoryPnlBounds.Left
                dY = dY + InventoryPnlBounds.Top
                sW = dw
                sH = dH
                If CloseInvBtnNormImage.Texture > 0 Then
                    If dw > CloseInvBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseInvBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseInvBtnHoverImage.Texture > 0 Then
                    If dw > CloseInvBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseInvBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseInvBtnClickImage.Texture > 0 Then
                    If dw > CloseInvBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseInvBtnClickImage.Height Then sH = dH - sy
                End If
                CloseInvBtnBounds.Left = dX
                CloseInvBtnBounds.Right = dw
                CloseInvBtnBounds.Top = dY
                CloseInvBtnBounds.Bottom = dH
                CloseInvBtnSrcBounds.Left = sx
                CloseInvBtnSrcBounds.Right = sW
                CloseInvBtnSrcBounds.Top = sy
                CloseInvBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        'ItemDescPnl Panel
        dX = ItemDescPnlX
        dY = ItemDescPnlY
        dw = ItemDescPnlWidth
        dH = ItemDescPnlHeight
        If ItemDescPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    ItemDescPnlBounds.Left = dX
                    ItemDescPnlBounds.Right = dw
                    ItemDescPnlBounds.Top = dY
                    ItemDescPnlBounds.Bottom = dH
                    ItemDescPnlSrcBounds.Left = sx
                    ItemDescPnlSrcBounds.Right = sW
                    ItemDescPnlSrcBounds.Top = sy
                    ItemDescPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    ItemDescPnlBounds.Left = dX
                    ItemDescPnlBounds.Right = dw
                    ItemDescPnlBounds.Top = dY
                    ItemDescPnlBounds.Bottom = dH
                    ItemDescPnlSrcBounds.Left = sx
                    ItemDescPnlSrcBounds.Right = sW
                    ItemDescPnlSrcBounds.Top = sy
                    ItemDescPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'ItemDescNameLbl
        dX = ItemDescNameLblX
        dY = ItemDescNameLblY
        dw = ItemDescNameLblWidth
        dH = ItemDescNameLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDescNameLblBounds.Left = dX
                ItemDescNameLblBounds.Right = dw
                ItemDescNameLblBounds.Top = dY
                ItemDescNameLblBounds.Bottom = dH
            End If
        End If
            'ItemDescIcon
        dX = ItemDescIconX
        dY = ItemDescIconY
        dw = ItemDescIconWidth
        dH = ItemDescIconHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDescIconBounds.Left = dX
                ItemDescIconBounds.Right = dw
                ItemDescIconBounds.Top = dY
                ItemDescIconBounds.Bottom = dH
            End If
        End If
            'ItemClassReqLbl
        dX = ItemClassReqLblX
        dY = ItemClassReqLblY
        dw = ItemClassReqLblWidth
        dH = ItemClassReqLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemClassReqLblBounds.Left = dX
                ItemClassReqLblBounds.Right = dw
                ItemClassReqLblBounds.Top = dY
                ItemClassReqLblBounds.Bottom = dH
            End If
        End If
            'ItemLevelReqLbl
        dX = ItemLevelReqLblX
        dY = ItemLevelReqLblY
        dw = ItemLevelReqLblWidth
        dH = ItemLevelReqLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemLevelReqLblBounds.Left = dX
                ItemLevelReqLblBounds.Right = dw
                ItemLevelReqLblBounds.Top = dY
                ItemLevelReqLblBounds.Bottom = dH
            End If
        End If
            'ItemDesc1
        dX = ItemDesc1X
        dY = ItemDesc1Y
        dw = ItemDesc1Width
        dH = ItemDesc1Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc1Bounds.Left = dX
                ItemDesc1Bounds.Right = dw
                ItemDesc1Bounds.Top = dY
                ItemDesc1Bounds.Bottom = dH
            End If
        End If
            'ItemDesc2
        dX = ItemDesc2X
        dY = ItemDesc2Y
        dw = ItemDesc2Width
        dH = ItemDesc2Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc2Bounds.Left = dX
                ItemDesc2Bounds.Right = dw
                ItemDesc2Bounds.Top = dY
                ItemDesc2Bounds.Bottom = dH
            End If
        End If
            'ItemDesc3
        dX = ItemDesc3X
        dY = ItemDesc3Y
        dw = ItemDesc3Width
        dH = ItemDesc3Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc3Bounds.Left = dX
                ItemDesc3Bounds.Right = dw
                ItemDesc3Bounds.Top = dY
                ItemDesc3Bounds.Bottom = dH
            End If
        End If
            'ItemDesc4
        dX = ItemDesc4X
        dY = ItemDesc4Y
        dw = ItemDesc4Width
        dH = ItemDesc4Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc4Bounds.Left = dX
                ItemDesc4Bounds.Right = dw
                ItemDesc4Bounds.Top = dY
                ItemDesc4Bounds.Bottom = dH
            End If
        End If
            'ItemDesc5
        dX = ItemDesc5X
        dY = ItemDesc5Y
        dw = ItemDesc5Width
        dH = ItemDesc5Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc5Bounds.Left = dX
                ItemDesc5Bounds.Right = dw
                ItemDesc5Bounds.Top = dY
                ItemDesc5Bounds.Bottom = dH
            End If
        End If
            'ItemDesc6
        dX = ItemDesc6X
        dY = ItemDesc6Y
        dw = ItemDesc6Width
        dH = ItemDesc6Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc6Bounds.Left = dX
                ItemDesc6Bounds.Right = dw
                ItemDesc6Bounds.Top = dY
                ItemDesc6Bounds.Bottom = dH
            End If
        End If
            'ItemDesc7
        dX = ItemDesc7X
        dY = ItemDesc7Y
        dw = ItemDesc7Width
        dH = ItemDesc7Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc7Bounds.Left = dX
                ItemDesc7Bounds.Right = dw
                ItemDesc7Bounds.Top = dY
                ItemDesc7Bounds.Bottom = dH
            End If
        End If
            'ItemDesc8
        dX = ItemDesc8X
        dY = ItemDesc8Y
        dw = ItemDesc8Width
        dH = ItemDesc8Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ItemDescPnlBounds.Right And dY < ItemDescPnlBounds.Bottom Then
                If dX + dw > ItemDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ItemDescPnlBounds.Right)
                End If
                If dY + dH > ItemDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ItemDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ItemDescPnlBounds.Left
                dY = dY + ItemDescPnlBounds.Top
                ItemDesc8Bounds.Left = dX
                ItemDesc8Bounds.Right = dw
                ItemDesc8Bounds.Top = dY
                ItemDesc8Bounds.Bottom = dH
            End If
        End If
                'SpellsPnl Panel
        dX = SpellsPnlX
        dY = SpellsPnlY
        dw = SpellsPnlWidth
        dH = SpellsPnlHeight
        If SpellsPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    SpellsPnlBounds.Left = dX
                    SpellsPnlBounds.Right = dw
                    SpellsPnlBounds.Top = dY
                    SpellsPnlBounds.Bottom = dH
                    SpellsPnlSrcBounds.Left = sx
                    SpellsPnlSrcBounds.Right = sW
                    SpellsPnlSrcBounds.Top = sy
                    SpellsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    SpellsPnlBounds.Left = dX
                    SpellsPnlBounds.Right = dw
                    SpellsPnlBounds.Top = dY
                    SpellsPnlBounds.Bottom = dH
                    SpellsPnlSrcBounds.Left = sx
                    SpellsPnlSrcBounds.Right = sW
                    SpellsPnlSrcBounds.Top = sy
                    SpellsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'SpellIcons
        dX = SpellIconsX
        dY = SpellIconsY
        dw = SpellIconsWidth
        dH = SpellIconsHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellsPnlBounds.Right And dY < SpellsPnlBounds.Bottom Then
                If dX + dw > SpellsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellsPnlBounds.Right)
                End If
                If dY + dH > SpellsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellsPnlBounds.Left
                dY = dY + SpellsPnlBounds.Top
                SpellIconsBounds.Left = dX
                SpellIconsBounds.Right = dw
                SpellIconsBounds.Top = dY
                SpellIconsBounds.Bottom = dH
            End If
        End If
            'CloseSpellsBtn Button
        dX = CloseSpellsBtnX
        dY = CloseSpellsBtnY
        dw = CloseSpellsBtnWidth
        dH = CloseSpellsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellsPnlBounds.Right And dY < SpellsPnlBounds.Bottom Then
                If dX + dw > SpellsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellsPnlBounds.Right)
                End If
                If dY + dH > SpellsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellsPnlBounds.Left
                dY = dY + SpellsPnlBounds.Top
                sW = dw
                sH = dH
                If CloseSpellsBtnNormImage.Texture > 0 Then
                    If dw > CloseSpellsBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseSpellsBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseSpellsBtnHoverImage.Texture > 0 Then
                    If dw > CloseSpellsBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseSpellsBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseSpellsBtnClickImage.Texture > 0 Then
                    If dw > CloseSpellsBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseSpellsBtnClickImage.Height Then sH = dH - sy
                End If
                CloseSpellsBtnBounds.Left = dX
                CloseSpellsBtnBounds.Right = dw
                CloseSpellsBtnBounds.Top = dY
                CloseSpellsBtnBounds.Bottom = dH
                CloseSpellsBtnSrcBounds.Left = sx
                CloseSpellsBtnSrcBounds.Right = sW
                CloseSpellsBtnSrcBounds.Top = sy
                CloseSpellsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'SpellDescPnl Panel
        dX = SpellDescPnlX
        dY = SpellDescPnlY
        dw = SpellDescPnlWidth
        dH = SpellDescPnlHeight
        If SpellDescPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    SpellDescPnlBounds.Left = dX
                    SpellDescPnlBounds.Right = dw
                    SpellDescPnlBounds.Top = dY
                    SpellDescPnlBounds.Bottom = dH
                    SpellDescPnlSrcBounds.Left = sx
                    SpellDescPnlSrcBounds.Right = sW
                    SpellDescPnlSrcBounds.Top = sy
                    SpellDescPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    SpellDescPnlBounds.Left = dX
                    SpellDescPnlBounds.Right = dw
                    SpellDescPnlBounds.Top = dY
                    SpellDescPnlBounds.Bottom = dH
                    SpellDescPnlSrcBounds.Left = sx
                    SpellDescPnlSrcBounds.Right = sW
                    SpellDescPnlSrcBounds.Top = sy
                    SpellDescPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'SpellDescNameLbl
        dX = SpellDescNameLblX
        dY = SpellDescNameLblY
        dw = SpellDescNameLblWidth
        dH = SpellDescNameLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDescNameLblBounds.Left = dX
                SpellDescNameLblBounds.Right = dw
                SpellDescNameLblBounds.Top = dY
                SpellDescNameLblBounds.Bottom = dH
            End If
        End If
            'SpellDescIcon
        dX = SpellDescIconX
        dY = SpellDescIconY
        dw = SpellDescIconWidth
        dH = SpellDescIconHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDescIconBounds.Left = dX
                SpellDescIconBounds.Right = dw
                SpellDescIconBounds.Top = dY
                SpellDescIconBounds.Bottom = dH
            End If
        End If
            'SpellDesc1
        dX = SpellDesc1X
        dY = SpellDesc1Y
        dw = SpellDesc1Width
        dH = SpellDesc1Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc1Bounds.Left = dX
                SpellDesc1Bounds.Right = dw
                SpellDesc1Bounds.Top = dY
                SpellDesc1Bounds.Bottom = dH
            End If
        End If
            'SpellDesc2
        dX = SpellDesc2X
        dY = SpellDesc2Y
        dw = SpellDesc2Width
        dH = SpellDesc2Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc2Bounds.Left = dX
                SpellDesc2Bounds.Right = dw
                SpellDesc2Bounds.Top = dY
                SpellDesc2Bounds.Bottom = dH
            End If
        End If
            'SpellDesc3
        dX = SpellDesc3X
        dY = SpellDesc3Y
        dw = SpellDesc3Width
        dH = SpellDesc3Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc3Bounds.Left = dX
                SpellDesc3Bounds.Right = dw
                SpellDesc3Bounds.Top = dY
                SpellDesc3Bounds.Bottom = dH
            End If
        End If
            'SpellDesc4
        dX = SpellDesc4X
        dY = SpellDesc4Y
        dw = SpellDesc4Width
        dH = SpellDesc4Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc4Bounds.Left = dX
                SpellDesc4Bounds.Right = dw
                SpellDesc4Bounds.Top = dY
                SpellDesc4Bounds.Bottom = dH
            End If
        End If
            'SpellDesc5
        dX = SpellDesc5X
        dY = SpellDesc5Y
        dw = SpellDesc5Width
        dH = SpellDesc5Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc5Bounds.Left = dX
                SpellDesc5Bounds.Right = dw
                SpellDesc5Bounds.Top = dY
                SpellDesc5Bounds.Bottom = dH
            End If
        End If
            'SpellDesc6
        dX = SpellDesc6X
        dY = SpellDesc6Y
        dw = SpellDesc6Width
        dH = SpellDesc6Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc6Bounds.Left = dX
                SpellDesc6Bounds.Right = dw
                SpellDesc6Bounds.Top = dY
                SpellDesc6Bounds.Bottom = dH
            End If
        End If
            'SpellDesc7
        dX = SpellDesc7X
        dY = SpellDesc7Y
        dw = SpellDesc7Width
        dH = SpellDesc7Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc7Bounds.Left = dX
                SpellDesc7Bounds.Right = dw
                SpellDesc7Bounds.Top = dY
                SpellDesc7Bounds.Bottom = dH
            End If
        End If
    
        'SpellDesc8
        dX = SpellDesc8X
        dY = SpellDesc8Y
        dw = SpellDesc8Width
        dH = SpellDesc8Height
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SpellDescPnlBounds.Right And dY < SpellDescPnlBounds.Bottom Then
                If dX + dw > SpellDescPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SpellDescPnlBounds.Right)
                End If
                If dY + dH > SpellDescPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SpellDescPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SpellDescPnlBounds.Left
                dY = dY + SpellDescPnlBounds.Top
                SpellDesc8Bounds.Left = dX
                SpellDesc8Bounds.Right = dw
                SpellDesc8Bounds.Top = dY
                SpellDesc8Bounds.Bottom = dH
            End If
        End If
    
    
        dX = CharacterPnlX
        dY = CharacterPnlY
        dw = CharacterPnlWidth
        dH = CharacterPnlHeight
        If CharacterPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    CharacterPnlBounds.Left = dX
                    CharacterPnlBounds.Right = dw
                    CharacterPnlBounds.Top = dY
                    CharacterPnlBounds.Bottom = dH
                    CharacterPnlSrcBounds.Left = sx
                    CharacterPnlSrcBounds.Right = sW
                    CharacterPnlSrcBounds.Top = sy
                    CharacterPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    CharacterPnlBounds.Left = dX
                    CharacterPnlBounds.Right = dw
                    CharacterPnlBounds.Top = dY
                    CharacterPnlBounds.Bottom = dH
                    CharacterPnlSrcBounds.Left = sx
                    CharacterPnlSrcBounds.Right = sW
                    CharacterPnlSrcBounds.Top = sy
                    CharacterPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'PlayerNameLbl
        dX = PlayerNameLblX
        dY = PlayerNameLblY
        dw = PlayerNameLblWidth
        dH = PlayerNameLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PlayerNameLblBounds.Left = dX
                PlayerNameLblBounds.Right = dw
                PlayerNameLblBounds.Top = dY
                PlayerNameLblBounds.Bottom = dH
            End If
        End If
            'CharacterFace
        dX = CharacterFaceX
        dY = CharacterFaceY
        dw = CharacterFaceWidth
        dH = CharacterFaceHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                CharacterFaceBounds.Left = dX
                CharacterFaceBounds.Right = dw
                CharacterFaceBounds.Top = dY
                CharacterFaceBounds.Bottom = dH
            End If
        End If
            'StrengthLbl
        dX = StrengthLblX
        dY = StrengthLblY
        dw = StrengthLblWidth
        dH = StrengthLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                StrengthLblBounds.Left = dX
                StrengthLblBounds.Right = dw
                StrengthLblBounds.Top = dY
                StrengthLblBounds.Bottom = dH
            End If
        End If
            'EnduranceLbl
        dX = EnduranceLblX
        dY = EnduranceLblY
        dw = EnduranceLblWidth
        dH = EnduranceLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                EnduranceLblBounds.Left = dX
                EnduranceLblBounds.Right = dw
                EnduranceLblBounds.Top = dY
                EnduranceLblBounds.Bottom = dH
            End If
        End If
            'IntelligenceLbl
        dX = IntelligenceLblX
        dY = IntelligenceLblY
        dw = IntelligenceLblWidth
        dH = IntelligenceLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                IntelligenceLblBounds.Left = dX
                IntelligenceLblBounds.Right = dw
                IntelligenceLblBounds.Top = dY
                IntelligenceLblBounds.Bottom = dH
            End If
        End If
            'AgilityLbl
        dX = AgilityLblX
        dY = AgilityLblY
        dw = AgilityLblWidth
        dH = AgilityLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                AgilityLblBounds.Left = dX
                AgilityLblBounds.Right = dw
                AgilityLblBounds.Top = dY
                AgilityLblBounds.Bottom = dH
            End If
        End If
                'WillpowerLbl
        dX = WillpowerLblX
        dY = WillpowerLblY
        dw = WillpowerLblWidth
        dH = WillpowerLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                WillpowerLblBounds.Left = dX
                WillpowerLblBounds.Right = dw
                WillpowerLblBounds.Top = dY
                WillpowerLblBounds.Bottom = dH
            End If
        End If
            'PointsLbl
        dX = PointsLblX
        dY = PointsLblY
        dw = PointsLblWidth
        dH = PointsLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PointsLblBounds.Left = dX
                PointsLblBounds.Right = dw
                PointsLblBounds.Top = dY
                PointsLblBounds.Bottom = dH
            End If
        End If
            'AddStrengthBtn Button
        dX = AddStrengthBtnX
        dY = AddStrengthBtnY
        dw = AddStrengthBtnWidth
        dH = AddStrengthBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If AddStrengthBtnNormImage.Texture > 0 Then
                    If dw > AddStrengthBtnNormImage.Width Then sW = dw - sx
                    If dH > AddStrengthBtnNormImage.Height Then sH = dH - sy
                ElseIf AddStrengthBtnHoverImage.Texture > 0 Then
                    If dw > AddStrengthBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddStrengthBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddStrengthBtnClickImage.Texture > 0 Then
                    If dw > AddStrengthBtnClickImage.Width Then sW = dw - sx
                    If dH > AddStrengthBtnClickImage.Height Then sH = dH - sy
                End If
                AddStrengthBtnBounds.Left = dX
                AddStrengthBtnBounds.Right = dw
                AddStrengthBtnBounds.Top = dY
                AddStrengthBtnBounds.Bottom = dH
                AddStrengthBtnSrcBounds.Left = sx
                AddStrengthBtnSrcBounds.Right = sW
                AddStrengthBtnSrcBounds.Top = sy
                AddStrengthBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'AddEnduranceBtn Button
        dX = AddEnduranceBtnX
        dY = AddEnduranceBtnY
        dw = AddEnduranceBtnWidth
        dH = AddEnduranceBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If AddEnduranceBtnNormImage.Texture > 0 Then
                    If dw > AddEnduranceBtnNormImage.Width Then sW = dw - sx
                    If dH > AddEnduranceBtnNormImage.Height Then sH = dH - sy
                ElseIf AddEnduranceBtnHoverImage.Texture > 0 Then
                    If dw > AddEnduranceBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddEnduranceBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddEnduranceBtnClickImage.Texture > 0 Then
                    If dw > AddEnduranceBtnClickImage.Width Then sW = dw - sx
                    If dH > AddEnduranceBtnClickImage.Height Then sH = dH - sy
                End If
                AddEnduranceBtnBounds.Left = dX
                AddEnduranceBtnBounds.Right = dw
                AddEnduranceBtnBounds.Top = dY
                AddEnduranceBtnBounds.Bottom = dH
                AddEnduranceBtnSrcBounds.Left = sx
                AddEnduranceBtnSrcBounds.Right = sW
                AddEnduranceBtnSrcBounds.Top = sy
                AddEnduranceBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'AddIntelligenceBtn Button
        dX = AddIntelligenceBtnX
        dY = AddIntelligenceBtnY
        dw = AddIntelligenceBtnWidth
        dH = AddIntelligenceBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If AddIntelligenceBtnNormImage.Texture > 0 Then
                    If dw > AddIntelligenceBtnNormImage.Width Then sW = dw - sx
                    If dH > AddIntelligenceBtnNormImage.Height Then sH = dH - sy
                ElseIf AddIntelligenceBtnHoverImage.Texture > 0 Then
                    If dw > AddIntelligenceBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddIntelligenceBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddIntelligenceBtnClickImage.Texture > 0 Then
                    If dw > AddIntelligenceBtnClickImage.Width Then sW = dw - sx
                    If dH > AddIntelligenceBtnClickImage.Height Then sH = dH - sy
                End If
                AddIntelligenceBtnBounds.Left = dX
                AddIntelligenceBtnBounds.Right = dw
                AddIntelligenceBtnBounds.Top = dY
                AddIntelligenceBtnBounds.Bottom = dH
                AddIntelligenceBtnSrcBounds.Left = sx
                AddIntelligenceBtnSrcBounds.Right = sW
                AddIntelligenceBtnSrcBounds.Top = sy
                AddIntelligenceBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'AddAgilityBtn Button
        dX = AddAgilityBtnX
        dY = AddAgilityBtnY
        dw = AddAgilityBtnWidth
        dH = AddAgilityBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If AddAgilityBtnNormImage.Texture > 0 Then
                    If dw > AddAgilityBtnNormImage.Width Then sW = dw - sx
                    If dH > AddAgilityBtnNormImage.Height Then sH = dH - sy
                ElseIf AddAgilityBtnHoverImage.Texture > 0 Then
                    If dw > AddAgilityBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddAgilityBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddAgilityBtnClickImage.Texture > 0 Then
                    If dw > AddAgilityBtnClickImage.Width Then sW = dw - sx
                    If dH > AddAgilityBtnClickImage.Height Then sH = dH - sy
                End If
                AddAgilityBtnBounds.Left = dX
                AddAgilityBtnBounds.Right = dw
                AddAgilityBtnBounds.Top = dY
                AddAgilityBtnBounds.Bottom = dH
                AddAgilityBtnSrcBounds.Left = sx
                AddAgilityBtnSrcBounds.Right = sW
                AddAgilityBtnSrcBounds.Top = sy
                AddAgilityBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'AddWillpowerBtn Button
        dX = AddWillpowerBtnX
        dY = AddWillpowerBtnY
        dw = AddWillpowerBtnWidth
        dH = AddWillpowerBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If AddWillpowerBtnNormImage.Texture > 0 Then
                    If dw > AddWillpowerBtnNormImage.Width Then sW = dw - sx
                    If dH > AddWillpowerBtnNormImage.Height Then sH = dH - sy
                ElseIf AddWillpowerBtnHoverImage.Texture > 0 Then
                    If dw > AddWillpowerBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddWillpowerBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddWillpowerBtnClickImage.Texture > 0 Then
                    If dw > AddWillpowerBtnClickImage.Width Then sW = dw - sx
                    If dH > AddWillpowerBtnClickImage.Height Then sH = dH - sy
                End If
                AddWillpowerBtnBounds.Left = dX
                AddWillpowerBtnBounds.Right = dw
                AddWillpowerBtnBounds.Top = dY
                AddWillpowerBtnBounds.Bottom = dH
                AddWillpowerBtnSrcBounds.Left = sx
                AddWillpowerBtnSrcBounds.Right = sW
                AddWillpowerBtnSrcBounds.Top = sy
                AddWillpowerBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PlayerWeaponSlot
        dX = PlayerWeaponSlotX
        dY = PlayerWeaponSlotY
        dw = PlayerWeaponSlotWidth
        dH = PlayerWeaponSlotHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PlayerWeaponSlotBounds.Left = dX
                PlayerWeaponSlotBounds.Right = dw
                PlayerWeaponSlotBounds.Top = dY
                PlayerWeaponSlotBounds.Bottom = dH
            End If
        End If
            'PlayerArmorSlot
        dX = PlayerArmorSlotX
        dY = PlayerArmorSlotY
        dw = PlayerArmorSlotWidth
        dH = PlayerArmorSlotHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PlayerArmorSlotBounds.Left = dX
                PlayerArmorSlotBounds.Right = dw
                PlayerArmorSlotBounds.Top = dY
                PlayerArmorSlotBounds.Bottom = dH
            End If
        End If
            'PlayerShieldSlot
        dX = PlayerShieldSlotX
        dY = PlayerShieldSlotY
        dw = PlayerShieldSlotWidth
        dH = PlayerShieldSlotHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PlayerShieldSlotBounds.Left = dX
                PlayerShieldSlotBounds.Right = dw
                PlayerShieldSlotBounds.Top = dY
                PlayerShieldSlotBounds.Bottom = dH
            End If
        End If
            'PlayerHelmetSlot
        dX = PlayerHelmetSlotX
        dY = PlayerHelmetSlotY
        dw = PlayerHelmetSlotWidth
        dH = PlayerHelmetSlotHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                PlayerHelmetSlotBounds.Left = dX
                PlayerHelmetSlotBounds.Right = dw
                PlayerHelmetSlotBounds.Top = dY
                PlayerHelmetSlotBounds.Bottom = dH
            End If
        End If
            'CloseCharacterBtn Button
        dX = CloseCharacterBtnX
        dY = CloseCharacterBtnY
        dw = CloseCharacterBtnWidth
        dH = CloseCharacterBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CharacterPnlBounds.Right And dY < CharacterPnlBounds.Bottom Then
                If dX + dw > CharacterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - CharacterPnlBounds.Right)
                End If
                If dY + dH > CharacterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - CharacterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CharacterPnlBounds.Left
                dY = dY + CharacterPnlBounds.Top
                sW = dw
                sH = dH
                If CloseCharacterBtnNormImage.Texture > 0 Then
                    If dw > CloseCharacterBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseCharacterBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseCharacterBtnHoverImage.Texture > 0 Then
                    If dw > CloseCharacterBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseCharacterBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseCharacterBtnClickImage.Texture > 0 Then
                    If dw > CloseCharacterBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseCharacterBtnClickImage.Height Then sH = dH - sy
                End If
                CloseCharacterBtnBounds.Left = dX
                CloseCharacterBtnBounds.Right = dw
                CloseCharacterBtnBounds.Top = dY
                CloseCharacterBtnBounds.Bottom = dH
                CloseCharacterBtnSrcBounds.Left = sx
                CloseCharacterBtnSrcBounds.Right = sW
                CloseCharacterBtnSrcBounds.Top = sy
                CloseCharacterBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                    'OptionsPnl Panel
        dX = OptionsPnlX
        dY = OptionsPnlY
        dw = OptionsPnlWidth
        dH = OptionsPnlHeight
        If OptionsPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    OptionsPnlBounds.Left = dX
                    OptionsPnlBounds.Right = dw
                    OptionsPnlBounds.Top = dY
                    OptionsPnlBounds.Bottom = dH
                    OptionsPnlSrcBounds.Left = sx
                    OptionsPnlSrcBounds.Right = sW
                    OptionsPnlSrcBounds.Top = sy
                    OptionsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    OptionsPnlBounds.Left = dX
                    OptionsPnlBounds.Right = dw
                    OptionsPnlBounds.Top = dY
                    OptionsPnlBounds.Bottom = dH
                    OptionsPnlSrcBounds.Left = sx
                    OptionsPnlSrcBounds.Right = sW
                    OptionsPnlSrcBounds.Top = sy
                    OptionsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'MusicOnBtn Button
        dX = MusicOnBtnX
        dY = MusicOnBtnY
        dw = MusicOnBtnWidth
        dH = MusicOnBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If MusicOnBtnNormImage.Texture > 0 Then
                    If dw > MusicOnBtnNormImage.Width Then sW = dw - sx
                    If dH > MusicOnBtnNormImage.Height Then sH = dH - sy
                ElseIf MusicOnBtnHoverImage.Texture > 0 Then
                    If dw > MusicOnBtnHoverImage.Width Then sW = dw - sx
                    If dH > MusicOnBtnHoverImage.Height Then sH = dH - sy
                ElseIf MusicOnBtnClickImage.Texture > 0 Then
                    If dw > MusicOnBtnClickImage.Width Then sW = dw - sx
                    If dH > MusicOnBtnClickImage.Height Then sH = dH - sy
                End If
                MusicOnBtnBounds.Left = dX
                MusicOnBtnBounds.Right = dw
                MusicOnBtnBounds.Top = dY
                MusicOnBtnBounds.Bottom = dH
                MusicOnBtnSrcBounds.Left = sx
                MusicOnBtnSrcBounds.Right = sW
                MusicOnBtnSrcBounds.Top = sy
                MusicOnBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'MusicOffBtn Button
        dX = MusicOffBtnX
        dY = MusicOffBtnY
        dw = MusicOffBtnWidth
        dH = MusicOffBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If MusicOffBtnNormImage.Texture > 0 Then
                    If dw > MusicOffBtnNormImage.Width Then sW = dw - sx
                    If dH > MusicOffBtnNormImage.Height Then sH = dH - sy
                ElseIf MusicOffBtnHoverImage.Texture > 0 Then
                    If dw > MusicOffBtnHoverImage.Width Then sW = dw - sx
                    If dH > MusicOffBtnHoverImage.Height Then sH = dH - sy
                ElseIf MusicOffBtnClickImage.Texture > 0 Then
                    If dw > MusicOffBtnClickImage.Width Then sW = dw - sx
                    If dH > MusicOffBtnClickImage.Height Then sH = dH - sy
                End If
                MusicOffBtnBounds.Left = dX
                MusicOffBtnBounds.Right = dw
                MusicOffBtnBounds.Top = dY
                MusicOffBtnBounds.Bottom = dH
                MusicOffBtnSrcBounds.Left = sx
                MusicOffBtnSrcBounds.Right = sW
                MusicOffBtnSrcBounds.Top = sy
                MusicOffBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'SoundOnBtn Button
        dX = SoundOnBtnX
        dY = SoundOnBtnY
        dw = SoundOnBtnWidth
        dH = SoundOnBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If SoundOnBtnNormImage.Texture > 0 Then
                    If dw > SoundOnBtnNormImage.Width Then sW = dw - sx
                    If dH > SoundOnBtnNormImage.Height Then sH = dH - sy
                ElseIf SoundOnBtnHoverImage.Texture > 0 Then
                    If dw > SoundOnBtnHoverImage.Width Then sW = dw - sx
                    If dH > SoundOnBtnHoverImage.Height Then sH = dH - sy
                ElseIf SoundOnBtnClickImage.Texture > 0 Then
                    If dw > SoundOnBtnClickImage.Width Then sW = dw - sx
                    If dH > SoundOnBtnClickImage.Height Then sH = dH - sy
                End If
                SoundOnBtnBounds.Left = dX
                SoundOnBtnBounds.Right = dw
                SoundOnBtnBounds.Top = dY
                SoundOnBtnBounds.Bottom = dH
                SoundOnBtnSrcBounds.Left = sx
                SoundOnBtnSrcBounds.Right = sW
                SoundOnBtnSrcBounds.Top = sy
                SoundOnBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'SoundOffBtn Button
        dX = SoundOffBtnX
        dY = SoundOffBtnY
        dw = SoundOffBtnWidth
        dH = SoundOffBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If SoundOffBtnNormImage.Texture > 0 Then
                    If dw > SoundOffBtnNormImage.Width Then sW = dw - sx
                    If dH > SoundOffBtnNormImage.Height Then sH = dH - sy
                ElseIf SoundOffBtnHoverImage.Texture > 0 Then
                    If dw > SoundOffBtnHoverImage.Width Then sW = dw - sx
                    If dH > SoundOffBtnHoverImage.Height Then sH = dH - sy
                ElseIf SoundOffBtnClickImage.Texture > 0 Then
                    If dw > SoundOffBtnClickImage.Width Then sW = dw - sx
                    If dH > SoundOffBtnClickImage.Height Then sH = dH - sy
                End If
                SoundOffBtnBounds.Left = dX
                SoundOffBtnBounds.Right = dw
                SoundOffBtnBounds.Top = dY
                SoundOffBtnBounds.Bottom = dH
                SoundOffBtnSrcBounds.Left = sx
                SoundOffBtnSrcBounds.Right = sW
                SoundOffBtnSrcBounds.Top = sy
                SoundOffBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'FullScreenOnBtn Button
        dX = FullScreenOnBtnX
        dY = FullScreenOnBtnY
        dw = FullScreenOnBtnWidth
        dH = FullScreenOnBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If FullScreenOnBtnNormImage.Texture > 0 Then
                    If dw > FullScreenOnBtnNormImage.Width Then sW = dw - sx
                    If dH > FullScreenOnBtnNormImage.Height Then sH = dH - sy
                ElseIf FullScreenOnBtnHoverImage.Texture > 0 Then
                    If dw > FullScreenOnBtnHoverImage.Width Then sW = dw - sx
                    If dH > FullScreenOnBtnHoverImage.Height Then sH = dH - sy
                ElseIf FullScreenOnBtnClickImage.Texture > 0 Then
                    If dw > FullScreenOnBtnClickImage.Width Then sW = dw - sx
                    If dH > FullScreenOnBtnClickImage.Height Then sH = dH - sy
                End If
                FullScreenOnBtnBounds.Left = dX
                FullScreenOnBtnBounds.Right = dw
                FullScreenOnBtnBounds.Top = dY
                FullScreenOnBtnBounds.Bottom = dH
                FullscreenOnBtnSrcBounds.Left = sx
                FullscreenOnBtnSrcBounds.Right = sW
                FullscreenOnBtnSrcBounds.Top = sy
                FullscreenOnBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'FullScreenOffBtn Button
        dX = FullScreenOffBtnX
        dY = FullScreenOffBtnY
        dw = FullScreenOffBtnWidth
        dH = FullScreenOffBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If FullScreenOffBtnNormImage.Texture > 0 Then
                    If dw > FullScreenOffBtnNormImage.Width Then sW = dw - sx
                    If dH > FullScreenOffBtnNormImage.Height Then sH = dH - sy
                ElseIf FullScreenOffBtnHoverImage.Texture > 0 Then
                    If dw > FullScreenOffBtnHoverImage.Width Then sW = dw - sx
                    If dH > FullScreenOffBtnHoverImage.Height Then sH = dH - sy
                ElseIf FullScreenOffBtnClickImage.Texture > 0 Then
                    If dw > FullScreenOffBtnClickImage.Width Then sW = dw - sx
                    If dH > FullScreenOffBtnClickImage.Height Then sH = dH - sy
                End If
                FullScreenOffBtnBounds.Left = dX
                FullScreenOffBtnBounds.Right = dw
                FullScreenOffBtnBounds.Top = dY
                FullScreenOffBtnBounds.Bottom = dH
                FullscreenOffBtnSrcBounds.Left = sx
                FullscreenOffBtnSrcBounds.Right = sW
                FullscreenOffBtnSrcBounds.Top = sy
                FullscreenOffBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CloseOptionsBtn Button
        dX = CloseOptionsBtnX
        dY = CloseOptionsBtnY
        dw = CloseOptionsBtnWidth
        dH = CloseOptionsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < OptionsPnlBounds.Right And dY < OptionsPnlBounds.Bottom Then
                If dX + dw > OptionsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - OptionsPnlBounds.Right)
                End If
                If dY + dH > OptionsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - OptionsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + OptionsPnlBounds.Left
                dY = dY + OptionsPnlBounds.Top
                sW = dw
                sH = dH
                If CloseOptionsBtnNormImage.Texture > 0 Then
                    If dw > CloseOptionsBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseOptionsBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseOptionsBtnHoverImage.Texture > 0 Then
                    If dw > CloseOptionsBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseOptionsBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseOptionsBtnClickImage.Texture > 0 Then
                    If dw > CloseOptionsBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseOptionsBtnClickImage.Height Then sH = dH - sy
                End If
                CloseOptionsBtnBounds.Left = dX
                CloseOptionsBtnBounds.Right = dw
                CloseOptionsBtnBounds.Top = dY
                CloseOptionsBtnBounds.Bottom = dH
                CloseOptionsBtnSrcBounds.Left = sx
                CloseOptionsBtnSrcBounds.Right = sW
                CloseOptionsBtnSrcBounds.Top = sy
                CloseOptionsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyPnl Panel
        dX = PartyPnlX
        dY = PartyPnlY
        dw = PartyPnlWidth
        dH = PartyPnlHeight
        If PartyPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    PartyPnlBounds.Left = dX
                    PartyPnlBounds.Right = dw
                    PartyPnlBounds.Top = dY
                    PartyPnlBounds.Bottom = dH
                    PartyPnlSrcBounds.Left = sx
                    PartyPnlSrcBounds.Right = sW
                    PartyPnlSrcBounds.Top = sy
                    PartyPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    PartyPnlBounds.Left = dX
                    PartyPnlBounds.Right = dw
                    PartyPnlBounds.Top = dY
                    PartyPnlBounds.Bottom = dH
                    PartyPnlSrcBounds.Left = sx
                    PartyPnlSrcBounds.Right = sW
                    PartyPnlSrcBounds.Top = sy
                    PartyPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'PartyLeaderName
        dX = PartyLeaderNameX
        dY = PartyLeaderNameY
        dw = PartyLeaderNameWidth
        dH = PartyLeaderNameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                PartyLeaderNameBounds.Left = dX
                PartyLeaderNameBounds.Right = dw
                PartyLeaderNameBounds.Top = dY
                PartyLeaderNameBounds.Bottom = dH
            End If
        End If
            'PartyLeaderHPBar
        dX = PartyLeaderHPBarX
        dY = PartyLeaderHPBarY
        dw = PartyLeaderHPBarWidth
        dH = PartyLeaderHPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyLeaderHPBarImage.Texture > 0 Then
                End If
                PartyLeaderHPBarBounds.Left = dX
                PartyLeaderHPBarBounds.Right = dw
                PartyLeaderHPBarBounds.Top = dY
                PartyLeaderHPBarBounds.Bottom = dH
                PartyLeaderHPBarSrcBounds.Left = sx
                PartyLeaderHPBarSrcBounds.Right = sW
                PartyLeaderHPBarSrcBounds.Top = sy
                PartyLeaderHPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyLeaderMPBar
        dX = PartyLeaderMPBarX
        dY = PartyLeaderMPBarY
        dw = PartyLeaderMPBarWidth
        dH = PartyLeaderMPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyLeaderMPBarImage.Texture > 0 Then
                End If
                PartyLeaderMPBarBounds.Left = dX
                PartyLeaderMPBarBounds.Right = dw
                PartyLeaderMPBarBounds.Top = dY
                PartyLeaderMPBarBounds.Bottom = dH
                PartyLeaderMPBarSrcBounds.Left = sx
                PartyLeaderMPBarSrcBounds.Right = sW
                PartyLeaderMPBarSrcBounds.Top = sy
                PartyLeaderMPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember1Name
        dX = PartyMember1NameX
        dY = PartyMember1NameY
        dw = PartyMember1NameWidth
        dH = PartyMember1NameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                PartyMember1NameBounds.Left = dX
                PartyMember1NameBounds.Right = dw
                PartyMember1NameBounds.Top = dY
                PartyMember1NameBounds.Bottom = dH
            End If
        End If
            'PartyMember1HPBar
        dX = PartyMember1HPBarX
        dY = PartyMember1HPBarY
        dw = PartyMember1HPBarWidth
        dH = PartyMember1HPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember1HPBarImage.Texture > 0 Then
                End If
                PartyMember1HPBarBounds.Left = dX
                PartyMember1HPBarBounds.Right = dw
                PartyMember1HPBarBounds.Top = dY
                PartyMember1HPBarBounds.Bottom = dH
                PartyMember1HPBarSrcBounds.Left = sx
                PartyMember1HPBarSrcBounds.Right = sW
                PartyMember1HPBarSrcBounds.Top = sy
                PartyMember1HPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember1MPBar
        dX = PartyMember1MPBarX
        dY = PartyMember1MPBarY
        dw = PartyMember1MPBarWidth
        dH = PartyMember1MPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember1MPBarImage.Texture > 0 Then
                End If
                PartyMember1MPBarBounds.Left = dX
                PartyMember1MPBarBounds.Right = dw
                PartyMember1MPBarBounds.Top = dY
                PartyMember1MPBarBounds.Bottom = dH
                PartyMember1MPBarSrcBounds.Left = sx
                PartyMember1MPBarSrcBounds.Right = sW
                PartyMember1MPBarSrcBounds.Top = sy
                PartyMember1MPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember2Name
        dX = PartyMember2NameX
        dY = PartyMember2NameY
        dw = PartyMember2NameWidth
        dH = PartyMember2NameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                PartyMember2NameBounds.Left = dX
                PartyMember2NameBounds.Right = dw
                PartyMember2NameBounds.Top = dY
                PartyMember2NameBounds.Bottom = dH
            End If
        End If
            'PartyMember2HPBar
        dX = PartyMember2HPBarX
        dY = PartyMember2HPBarY
        dw = PartyMember2HPBarWidth
        dH = PartyMember2HPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember2HPBarImage.Texture > 0 Then
                End If
                PartyMember2HPBarBounds.Left = dX
                PartyMember2HPBarBounds.Right = dw
                PartyMember2HPBarBounds.Top = dY
                PartyMember2HPBarBounds.Bottom = dH
                PartyMember2HPBarSrcBounds.Left = sx
                PartyMember2HPBarSrcBounds.Right = sW
                PartyMember2HPBarSrcBounds.Top = sy
                PartyMember2HPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember2MPBar
        dX = PartyMember2MPBarX
        dY = PartyMember2MPBarY
        dw = PartyMember2MPBarWidth
        dH = PartyMember2MPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember2MPBarImage.Texture > 0 Then
                End If
                PartyMember2MPBarBounds.Left = dX
                PartyMember2MPBarBounds.Right = dw
                PartyMember2MPBarBounds.Top = dY
                PartyMember2MPBarBounds.Bottom = dH
                PartyMember2MPBarSrcBounds.Left = sx
                PartyMember2MPBarSrcBounds.Right = sW
                PartyMember2MPBarSrcBounds.Top = sy
                PartyMember2MPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember3Name
        dX = PartyMember3NameX
        dY = PartyMember3NameY
        dw = PartyMember3NameWidth
        dH = PartyMember3NameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                PartyMember3NameBounds.Left = dX
                PartyMember3NameBounds.Right = dw
                PartyMember3NameBounds.Top = dY
                PartyMember3NameBounds.Bottom = dH
            End If
        End If
            'PartyMember3HPBar
        dX = PartyMember3HPBarX
        dY = PartyMember3HPBarY
        dw = PartyMember3HPBarWidth
        dH = PartyMember3HPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember3HPBarImage.Texture > 0 Then
                End If
                PartyMember3HPBarBounds.Left = dX
                PartyMember3HPBarBounds.Right = dw
                PartyMember3HPBarBounds.Top = dY
                PartyMember3HPBarBounds.Bottom = dH
                PartyMember3HPBarSrcBounds.Left = sx
                PartyMember3HPBarSrcBounds.Right = sW
                PartyMember3HPBarSrcBounds.Top = sy
                PartyMember3HPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyMember3MPBar
        dX = PartyMember3MPBarX
        dY = PartyMember3MPBarY
        dw = PartyMember3MPBarWidth
        dH = PartyMember3MPBarHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyMember3MPBarImage.Texture > 0 Then
                End If
                PartyMember3MPBarBounds.Left = dX
                PartyMember3MPBarBounds.Right = dw
                PartyMember3MPBarBounds.Top = dY
                PartyMember3MPBarBounds.Bottom = dH
                PartyMember3MPBarSrcBounds.Left = sx
                PartyMember3MPBarSrcBounds.Right = sW
                PartyMember3MPBarSrcBounds.Top = sy
                PartyMember3MPBarSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyInviteBtn Button
        dX = PartyInviteBtnX
        dY = PartyInviteBtnY
        dw = PartyInviteBtnWidth
        dH = PartyInviteBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyInviteBtnNormImage.Texture > 0 Then
                    If dw > PartyInviteBtnNormImage.Width Then sW = dw - sx
                    If dH > PartyInviteBtnNormImage.Height Then sH = dH - sy
                ElseIf PartyInviteBtnHoverImage.Texture > 0 Then
                    If dw > PartyInviteBtnHoverImage.Width Then sW = dw - sx
                    If dH > PartyInviteBtnHoverImage.Height Then sH = dH - sy
                ElseIf PartyInviteBtnClickImage.Texture > 0 Then
                    If dw > PartyInviteBtnClickImage.Width Then sW = dw - sx
                    If dH > PartyInviteBtnClickImage.Height Then sH = dH - sy
                End If
                PartyInviteBtnBounds.Left = dX
                PartyInviteBtnBounds.Right = dw
                PartyInviteBtnBounds.Top = dY
                PartyInviteBtnBounds.Bottom = dH
                PartyInviteBtnSrcBounds.Left = sx
                PartyInviteBtnSrcBounds.Right = sW
                PartyInviteBtnSrcBounds.Top = sy
                PartyInviteBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'PartyLeaveBtn Button
        dX = PartyLeaveBtnX
        dY = PartyLeaveBtnY
        dw = PartyLeaveBtnWidth
        dH = PartyLeaveBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If PartyLeaveBtnNormImage.Texture > 0 Then
                    If dw > PartyLeaveBtnNormImage.Width Then sW = dw - sx
                    If dH > PartyLeaveBtnNormImage.Height Then sH = dH - sy
                ElseIf PartyLeaveBtnHoverImage.Texture > 0 Then
                    If dw > PartyLeaveBtnHoverImage.Width Then sW = dw - sx
                    If dH > PartyLeaveBtnHoverImage.Height Then sH = dH - sy
                ElseIf PartyLeaveBtnClickImage.Texture > 0 Then
                    If dw > PartyLeaveBtnClickImage.Width Then sW = dw - sx
                    If dH > PartyLeaveBtnClickImage.Height Then sH = dH - sy
                End If
                PartyLeaveBtnBounds.Left = dX
                PartyLeaveBtnBounds.Right = dw
                PartyLeaveBtnBounds.Top = dY
                PartyLeaveBtnBounds.Bottom = dH
                PartyLeaveBtnSrcBounds.Left = sx
                PartyLeaveBtnSrcBounds.Right = sW
                PartyLeaveBtnSrcBounds.Top = sy
                PartyLeaveBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ClosePartyBtn Button
        dX = ClosePartyBtnX
        dY = ClosePartyBtnY
        dw = ClosePartyBtnWidth
        dH = ClosePartyBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PartyPnlBounds.Right And dY < PartyPnlBounds.Bottom Then
                If dX + dw > PartyPnlBounds.Right Then
                    dw = dw - ((dX + dw) - PartyPnlBounds.Right)
                End If
                If dY + dH > PartyPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - PartyPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PartyPnlBounds.Left
                dY = dY + PartyPnlBounds.Top
                sW = dw
                sH = dH
                If ClosePartyBtnNormImage.Texture > 0 Then
                    If dw > ClosePartyBtnNormImage.Width Then sW = dw - sx
                    If dH > ClosePartyBtnNormImage.Height Then sH = dH - sy
                ElseIf ClosePartyBtnHoverImage.Texture > 0 Then
                    If dw > ClosePartyBtnHoverImage.Width Then sW = dw - sx
                    If dH > ClosePartyBtnHoverImage.Height Then sH = dH - sy
                ElseIf ClosePartyBtnClickImage.Texture > 0 Then
                    If dw > ClosePartyBtnClickImage.Width Then sW = dw - sx
                    If dH > ClosePartyBtnClickImage.Height Then sH = dH - sy
                End If
                ClosePartyBtnBounds.Left = dX
                ClosePartyBtnBounds.Right = dw
                ClosePartyBtnBounds.Top = dY
                ClosePartyBtnBounds.Bottom = dH
                ClosePartyBtnSrcBounds.Left = sx
                ClosePartyBtnSrcBounds.Right = sW
                ClosePartyBtnSrcBounds.Top = sy
                ClosePartyBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
            

        CacheInterfaceBounds3
   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "CacheInterfaceBounds2", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub
Sub CacheInterfaceBounds3()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long

        'DialoguePanel Panel

   On Error GoTo errorhandler
        
        'FriendsPnl Panel
        dX = FriendsPnlX
        dY = FriendsPnlY
        dw = FriendsPnlWidth
        dH = FriendsPnlHeight
        If FriendsPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    FriendsPnlBounds.Left = dX
                    FriendsPnlBounds.Right = dw
                    FriendsPnlBounds.Top = dY
                    FriendsPnlBounds.Bottom = dH
                    FriendsPnlSrcBounds.Left = sx
                    FriendsPnlSrcBounds.Right = sW
                    FriendsPnlSrcBounds.Top = sy
                    FriendsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    FriendsPnlBounds.Left = dX
                    FriendsPnlBounds.Right = dw
                    FriendsPnlBounds.Top = dY
                    FriendsPnlBounds.Bottom = dH
                    FriendsPnlSrcBounds.Left = sx
                    FriendsPnlSrcBounds.Right = sW
                    FriendsPnlSrcBounds.Top = sy
                    FriendsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
        
        'FriendsList
        dX = FriendsListX
        dY = FriendsListY
        dw = FriendsListWidth
        dH = FriendsListHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                FriendsListBounds.Left = dX
                FriendsListBounds.Right = dw
                FriendsListBounds.Top = dY
                FriendsListBounds.Bottom = dH
            End If
        End If
            'FriendsUpBtn Button
        dX = FriendsUpBtnX
        dY = FriendsUpBtnY
        dw = FriendsUpBtnWidth
        dH = FriendsUpBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                sW = dw
                sH = dH
                If FriendsUpBtnNormImage.Texture > 0 Then
                    If dw > FriendsUpBtnNormImage.Width Then sW = dw - sx
                    If dH > FriendsUpBtnNormImage.Height Then sH = dH - sy
                ElseIf FriendsUpBtnHoverImage.Texture > 0 Then
                    If dw > FriendsUpBtnHoverImage.Width Then sW = dw - sx
                    If dH > FriendsUpBtnHoverImage.Height Then sH = dH - sy
                ElseIf FriendsUpBtnClickImage.Texture > 0 Then
                    If dw > FriendsUpBtnClickImage.Width Then sW = dw - sx
                    If dH > FriendsUpBtnClickImage.Height Then sH = dH - sy
                End If
                FriendsUpBtnBounds.Left = dX
                FriendsUpBtnBounds.Right = dw
                FriendsUpBtnBounds.Top = dY
                FriendsUpBtnBounds.Bottom = dH
                FriendsUpBtnSrcBounds.Left = sx
                FriendsUpBtnSrcBounds.Right = sW
                FriendsUpBtnSrcBounds.Top = sy
                FriendsUpBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'FriendsdownBtn Button
        dX = FriendsDownBtnX
        dY = FriendsDownBtnY
        dw = FriendsDownBtnWidth
        dH = FriendsDownBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                sW = dw
                sH = dH
                If FriendsDownBtnNormImage.Texture > 0 Then
                    If dw > FriendsDownBtnNormImage.Width Then sW = dw - sx
                    If dH > FriendsDownBtnNormImage.Height Then sH = dH - sy
                ElseIf FriendsDownBtnHoverImage.Texture > 0 Then
                    If dw > FriendsDownBtnHoverImage.Width Then sW = dw - sx
                    If dH > FriendsDownBtnHoverImage.Height Then sH = dH - sy
                ElseIf FriendsDownBtnClickImage.Texture > 0 Then
                    If dw > FriendsDownBtnClickImage.Width Then sW = dw - sx
                    If dH > FriendsDownBtnClickImage.Height Then sH = dH - sy
                End If
                FriendsDownBtnBounds.Left = dX
                FriendsDownBtnBounds.Right = dw
                FriendsDownBtnBounds.Top = dY
                FriendsDownBtnBounds.Bottom = dH
                FriendsDownBtnSrcBounds.Left = sx
                FriendsDownBtnSrcBounds.Right = sW
                FriendsDownBtnSrcBounds.Top = sy
                FriendsDownBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'AddfriendBtn Button
        dX = AddFriendBtnX
        dY = AddFriendBtnY
        dw = AddFriendBtnWidth
        dH = AddFriendBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                sW = dw
                sH = dH
                If AddFriendBtnNormImage.Texture > 0 Then
                    If dw > AddFriendBtnNormImage.Width Then sW = dw - sx
                    If dH > AddFriendBtnNormImage.Height Then sH = dH - sy
                ElseIf AddFriendBtnHoverImage.Texture > 0 Then
                    If dw > AddFriendBtnHoverImage.Width Then sW = dw - sx
                    If dH > AddFriendBtnHoverImage.Height Then sH = dH - sy
                ElseIf AddFriendBtnClickImage.Texture > 0 Then
                    If dw > AddFriendBtnClickImage.Width Then sW = dw - sx
                    If dH > AddFriendBtnClickImage.Height Then sH = dH - sy
                End If
                AddFriendBtnBounds.Left = dX
                AddFriendBtnBounds.Right = dw
                AddFriendBtnBounds.Top = dY
                AddFriendBtnBounds.Bottom = dH
                AddFriendBtnSrcBounds.Left = sx
                AddFriendBtnSrcBounds.Right = sW
                AddFriendBtnSrcBounds.Top = sy
                AddFriendBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'delfriendBtn Button
        dX = DelFriendBtnX
        dY = DelFriendBtnY
        dw = DelFriendBtnWidth
        dH = DelFriendBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                sW = dw
                sH = dH
                If DelFriendBtnNormImage.Texture > 0 Then
                    If dw > DelFriendBtnNormImage.Width Then sW = dw - sx
                    If dH > DelFriendBtnNormImage.Height Then sH = dH - sy
                ElseIf DelFriendBtnHoverImage.Texture > 0 Then
                    If dw > DelFriendBtnHoverImage.Width Then sW = dw - sx
                    If dH > DelFriendBtnHoverImage.Height Then sH = dH - sy
                ElseIf DelFriendBtnClickImage.Texture > 0 Then
                    If dw > DelFriendBtnClickImage.Width Then sW = dw - sx
                    If dH > DelFriendBtnClickImage.Height Then sH = dH - sy
                End If
                DelFriendBtnBounds.Left = dX
                DelFriendBtnBounds.Right = dw
                DelFriendBtnBounds.Top = dY
                DelFriendBtnBounds.Bottom = dH
                DelFriendBtnSrcBounds.Left = sx
                DelFriendBtnSrcBounds.Right = sW
                DelFriendBtnSrcBounds.Top = sy
                DelFriendBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CloseFriendsBtn Button
        dX = CloseFriendsBtnX
        dY = CloseFriendsBtnY
        dw = CloseFriendsBtnWidth
        dH = CloseFriendsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < FriendsPnlBounds.Right And dY < FriendsPnlBounds.Bottom Then
                If dX + dw > FriendsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - FriendsPnlBounds.Right)
                End If
                If dY + dH > FriendsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - FriendsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + FriendsPnlBounds.Left
                dY = dY + FriendsPnlBounds.Top
                sW = dw
                sH = dH
                If CloseFriendsBtnNormImage.Texture > 0 Then
                    If dw > CloseFriendsBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseFriendsBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseFriendsBtnHoverImage.Texture > 0 Then
                    If dw > CloseFriendsBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseFriendsBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseFriendsBtnClickImage.Texture > 0 Then
                    If dw > CloseFriendsBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseFriendsBtnClickImage.Height Then sH = dH - sy
                End If
                CloseFriendsBtnBounds.Left = dX
                CloseFriendsBtnBounds.Right = dw
                CloseFriendsBtnBounds.Top = dY
                CloseFriendsBtnBounds.Bottom = dH
                CloseFriendsBtnSrcBounds.Left = sx
                CloseFriendsBtnSrcBounds.Right = sW
                CloseFriendsBtnSrcBounds.Top = sy
                CloseFriendsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'QuestsPnl Panel
        dX = QuestsPnlX
        dY = QuestsPnlY
        dw = QuestsPnlWidth
        dH = QuestsPnlHeight
        If QuestsPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    QuestsPnlBounds.Left = dX
                    QuestsPnlBounds.Right = dw
                    QuestsPnlBounds.Top = dY
                    QuestsPnlBounds.Bottom = dH
                    QuestsPnlSrcBounds.Left = sx
                    QuestsPnlSrcBounds.Right = sW
                    QuestsPnlSrcBounds.Top = sy
                    QuestsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    QuestsPnlBounds.Left = dX
                    QuestsPnlBounds.Right = dw
                    QuestsPnlBounds.Top = dY
                    QuestsPnlBounds.Bottom = dH
                    QuestsPnlSrcBounds.Left = sx
                    QuestsPnlSrcBounds.Right = sW
                    QuestsPnlSrcBounds.Top = sy
                    QuestsPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'QuestList
        dX = QuestListX
        dY = QuestListY
        dw = QuestListWidth
        dH = QuestListHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestsPnlBounds.Right And dY < QuestsPnlBounds.Bottom Then
                If dX + dw > QuestsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - QuestsPnlBounds.Right)
                End If
                If dY + dH > QuestsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestsPnlBounds.Left
                dY = dY + QuestsPnlBounds.Top
                QuestListBounds.Left = dX
                QuestListBounds.Right = dw
                QuestListBounds.Top = dY
                QuestListBounds.Bottom = dH
            End If
        End If
            'QuestUpBtn Button
        dX = QuestUpBtnX
        dY = QuestUpBtnY
        dw = QuestUpBtnWidth
        dH = QuestUpBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestsPnlBounds.Right And dY < QuestsPnlBounds.Bottom Then
                If dX + dw > QuestsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - QuestsPnlBounds.Right)
                End If
                If dY + dH > QuestsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestsPnlBounds.Left
                dY = dY + QuestsPnlBounds.Top
                sW = dw
                sH = dH
                If QuestUpBtnNormImage.Texture > 0 Then
                    If dw > QuestUpBtnNormImage.Width Then sW = dw - sx
                    If dH > QuestUpBtnNormImage.Height Then sH = dH - sy
                ElseIf QuestUpBtnHoverImage.Texture > 0 Then
                    If dw > QuestUpBtnHoverImage.Width Then sW = dw - sx
                    If dH > QuestUpBtnHoverImage.Height Then sH = dH - sy
                ElseIf QuestUpBtnClickImage.Texture > 0 Then
                    If dw > QuestUpBtnClickImage.Width Then sW = dw - sx
                    If dH > QuestUpBtnClickImage.Height Then sH = dH - sy
                End If
                QuestUpBtnBounds.Left = dX
                QuestUpBtnBounds.Right = dw
                QuestUpBtnBounds.Top = dY
                QuestUpBtnBounds.Bottom = dH
                QuestUpBtnSrcBounds.Left = sx
                QuestUpBtnSrcBounds.Right = sW
                QuestUpBtnSrcBounds.Top = sy
                QuestUpBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'QuestDownBtn Button
        dX = QuestDownBtnX
        dY = QuestDownBtnY
        dw = QuestDownBtnWidth
        dH = QuestDownBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestsPnlBounds.Right And dY < QuestsPnlBounds.Bottom Then
                If dX + dw > QuestsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - QuestsPnlBounds.Right)
                End If
                If dY + dH > QuestsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestsPnlBounds.Left
                dY = dY + QuestsPnlBounds.Top
                sW = dw
                sH = dH
                If QuestDownBtnNormImage.Texture > 0 Then
                    If dw > QuestDownBtnNormImage.Width Then sW = dw - sx
                    If dH > QuestDownBtnNormImage.Height Then sH = dH - sy
                ElseIf QuestDownBtnHoverImage.Texture > 0 Then
                    If dw > QuestDownBtnHoverImage.Width Then sW = dw - sx
                    If dH > QuestDownBtnHoverImage.Height Then sH = dH - sy
                ElseIf QuestDownBtnClickImage.Texture > 0 Then
                    If dw > QuestDownBtnClickImage.Width Then sW = dw - sx
                    If dH > QuestDownBtnClickImage.Height Then sH = dH - sy
                End If
                QuestDownBtnBounds.Left = dX
                QuestDownBtnBounds.Right = dw
                QuestDownBtnBounds.Top = dY
                QuestDownBtnBounds.Bottom = dH
                QuestDownBtnSrcBounds.Left = sx
                QuestDownBtnSrcBounds.Right = sW
                QuestDownBtnSrcBounds.Top = sy
                QuestDownBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'QuestInfoBtn Button
        dX = QuestInfoBtnX
        dY = QuestInfoBtnY
        dw = QuestInfoBtnWidth
        dH = QuestInfoBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestsPnlBounds.Right And dY < QuestsPnlBounds.Bottom Then
                If dX + dw > QuestsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - QuestsPnlBounds.Right)
                End If
                If dY + dH > QuestsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestsPnlBounds.Left
                dY = dY + QuestsPnlBounds.Top
                sW = dw
                sH = dH
                If QuestInfoBtnNormImage.Texture > 0 Then
                    If dw > QuestInfoBtnNormImage.Width Then sW = dw - sx
                    If dH > QuestInfoBtnNormImage.Height Then sH = dH - sy
                ElseIf QuestInfoBtnHoverImage.Texture > 0 Then
                    If dw > QuestInfoBtnHoverImage.Width Then sW = dw - sx
                    If dH > QuestInfoBtnHoverImage.Height Then sH = dH - sy
                ElseIf QuestInfoBtnClickImage.Texture > 0 Then
                    If dw > QuestInfoBtnClickImage.Width Then sW = dw - sx
                    If dH > QuestInfoBtnClickImage.Height Then sH = dH - sy
                End If
                QuestInfoBtnBounds.Left = dX
                QuestInfoBtnBounds.Right = dw
                QuestInfoBtnBounds.Top = dY
                QuestInfoBtnBounds.Bottom = dH
                QuestInfoBtnSrcBounds.Left = sx
                QuestInfoBtnSrcBounds.Right = sW
                QuestInfoBtnSrcBounds.Top = sy
                QuestInfoBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CloseQuestsBtn Button
        dX = CloseQuestsBtnX
        dY = CloseQuestsBtnY
        dw = CloseQuestsBtnWidth
        dH = CloseQuestsBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestsPnlBounds.Right And dY < QuestsPnlBounds.Bottom Then
                If dX + dw > QuestsPnlBounds.Right Then
                    dw = dw - ((dX + dw) - QuestsPnlBounds.Right)
                End If
                If dY + dH > QuestsPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestsPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestsPnlBounds.Left
                dY = dY + QuestsPnlBounds.Top
                sW = dw
                sH = dH
                If CloseQuestsBtnNormImage.Texture > 0 Then
                    If dw > CloseQuestsBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseQuestsBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseQuestsBtnHoverImage.Texture > 0 Then
                    If dw > CloseQuestsBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseQuestsBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseQuestsBtnClickImage.Texture > 0 Then
                    If dw > CloseQuestsBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseQuestsBtnClickImage.Height Then sH = dH - sy
                End If
                CloseQuestsBtnBounds.Left = dX
                CloseQuestsBtnBounds.Right = dw
                CloseQuestsBtnBounds.Top = dY
                CloseQuestsBtnBounds.Bottom = dH
                CloseQuestsBtnSrcBounds.Left = sx
                CloseQuestsBtnSrcBounds.Right = sW
                CloseQuestsBtnSrcBounds.Top = sy
                CloseQuestsBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'BankPnl Panel
        dX = BankPnlX
        dY = BankPnlY
        dw = BankPnlWidth
        dH = BankPnlHeight
        If BankPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    BankPnlBounds.Left = dX
                    BankPnlBounds.Right = dw
                    BankPnlBounds.Top = dY
                    BankPnlBounds.Bottom = dH
                    BankPnlSrcBounds.Left = sx
                    BankPnlSrcBounds.Right = sW
                    BankPnlSrcBounds.Top = sy
                    BankPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    BankPnlBounds.Left = dX
                    BankPnlBounds.Right = dw
                    BankPnlBounds.Top = dY
                    BankPnlBounds.Bottom = dH
                    BankPnlSrcBounds.Left = sx
                    BankPnlSrcBounds.Right = sW
                    BankPnlSrcBounds.Top = sy
                    BankPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
             'BankItems
        dX = BankItemsX
        dY = BankItemsY
        dw = BankItemsWidth
        dH = BankItemsHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < BankPnlBounds.Right And dY < BankPnlBounds.Bottom Then
                If dX + dw > BankPnlBounds.Right Then
                    dw = dw - ((dX + dw) - BankPnlBounds.Right)
                End If
                If dY + dH > BankPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - BankPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + BankPnlBounds.Left
                dY = dY + BankPnlBounds.Top
                BankItemsBounds.Left = dX
                BankItemsBounds.Right = dw
                BankItemsBounds.Top = dY
                BankItemsBounds.Bottom = dH
            End If
        End If
            'CloseBankBtn Button
        dX = CloseBankBtnX
        dY = CloseBankBtnY
        dw = CloseBankBtnWidth
        dH = CloseBankBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < BankPnlBounds.Right And dY < BankPnlBounds.Bottom Then
                If dX + dw > BankPnlBounds.Right Then
                    dw = dw - ((dX + dw) - BankPnlBounds.Right)
                End If
                If dY + dH > BankPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - BankPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + BankPnlBounds.Left
                dY = dY + BankPnlBounds.Top
                sW = dw
                sH = dH
                If CloseBankBtnNormImage.Texture > 0 Then
                    If dw > CloseBankBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseBankBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseBankBtnHoverImage.Texture > 0 Then
                    If dw > CloseBankBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseBankBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseBankBtnClickImage.Texture > 0 Then
                    If dw > CloseBankBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseBankBtnClickImage.Height Then sH = dH - sy
                End If
                CloseBankBtnBounds.Left = dX
                CloseBankBtnBounds.Right = dw
                CloseBankBtnBounds.Top = dY
                CloseBankBtnBounds.Bottom = dH
                CloseBankBtnSrcBounds.Left = sx
                CloseBankBtnSrcBounds.Right = sW
                CloseBankBtnSrcBounds.Top = sy
                CloseBankBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ShopPnl Panel
        dX = ShopPnlX
        dY = ShopPnlY
        dw = ShopPnlWidth
        dH = ShopPnlHeight
        If ShopPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    ShopPnlBounds.Left = dX
                    ShopPnlBounds.Right = dw
                    ShopPnlBounds.Top = dY
                    ShopPnlBounds.Bottom = dH
                    ShopPnlSrcBounds.Left = sx
                    ShopPnlSrcBounds.Right = sW
                    ShopPnlSrcBounds.Top = sy
                    ShopPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    ShopPnlBounds.Left = dX
                    ShopPnlBounds.Right = dw
                    ShopPnlBounds.Top = dY
                    ShopPnlBounds.Bottom = dH
                    ShopPnlSrcBounds.Left = sx
                    ShopPnlSrcBounds.Right = sW
                    ShopPnlSrcBounds.Top = sy
                    ShopPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
             'ShopItems
        dX = ShopItemsX
        dY = ShopItemsY
        dw = ShopItemsWidth
        dH = ShopItemsHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ShopPnlBounds.Right And dY < ShopPnlBounds.Bottom Then
                If dX + dw > ShopPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ShopPnlBounds.Right)
                End If
                If dY + dH > ShopPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ShopPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ShopPnlBounds.Left
                dY = dY + ShopPnlBounds.Top
                ShopItemsBounds.Left = dX
                ShopItemsBounds.Right = dw
                ShopItemsBounds.Top = dY
                ShopItemsBounds.Bottom = dH
            End If
        End If
            'CloseShopBtn Button
        dX = CloseShopBtnX
        dY = CloseShopBtnY
        dw = CloseShopBtnWidth
        dH = CloseShopBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ShopPnlBounds.Right And dY < ShopPnlBounds.Bottom Then
                If dX + dw > ShopPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ShopPnlBounds.Right)
                End If
                If dY + dH > ShopPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ShopPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ShopPnlBounds.Left
                dY = dY + ShopPnlBounds.Top
                sW = dw
                sH = dH
                If CloseShopBtnNormImage.Texture > 0 Then
                    If dw > CloseShopBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseShopBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseShopBtnHoverImage.Texture > 0 Then
                    If dw > CloseShopBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseShopBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseShopBtnClickImage.Texture > 0 Then
                    If dw > CloseShopBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseShopBtnClickImage.Height Then sH = dH - sy
                End If
                CloseShopBtnBounds.Left = dX
                CloseShopBtnBounds.Right = dw
                CloseShopBtnBounds.Top = dY
                CloseShopBtnBounds.Bottom = dH
                CloseShopBtnSrcBounds.Left = sx
                CloseShopBtnSrcBounds.Right = sW
                CloseShopBtnSrcBounds.Top = sy
                CloseShopBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'TradePnl Panel
        dX = TradePnlX
        dY = TradePnlY
        dw = TradePnlWidth
        dH = TradePnlHeight
        If TradePnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    TradePnlBounds.Left = dX
                    TradePnlBounds.Right = dw
                    TradePnlBounds.Top = dY
                    TradePnlBounds.Bottom = dH
                    TradePnlSrcBounds.Left = sx
                    TradePnlSrcBounds.Right = sW
                    TradePnlSrcBounds.Top = sy
                    TradePnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    TradePnlBounds.Left = dX
                    TradePnlBounds.Right = dw
                    TradePnlBounds.Top = dY
                    TradePnlBounds.Bottom = dH
                    TradePnlSrcBounds.Left = sx
                    TradePnlSrcBounds.Right = sW
                    TradePnlSrcBounds.Top = sy
                    TradePnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'YourTradePnl
        dX = YourTradePnlX
        dY = YourTradePnlY
        dw = YourTradePnlWidth
        dH = YourTradePnlHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                YourTradePnlBounds.Left = dX
                YourTradePnlBounds.Right = dw
                YourTradePnlBounds.Top = dY
                YourTradePnlBounds.Bottom = dH
            End If
        End If
            'TheirTradePnl
        dX = TheirTradePnlX
        dY = TheirTradePnlY
        dw = TheirTradePnlWidth
        dH = TheirTradePnlHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                TheirTradePnlBounds.Left = dX
                TheirTradePnlBounds.Right = dw
                TheirTradePnlBounds.Top = dY
                TheirTradePnlBounds.Bottom = dH
            End If
        End If
            'TradeStatusLbl
        dX = TradeStatusLblX
        dY = TradeStatusLblY
        dw = TradeStatusLblWidth
        dH = TradeStatusLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                TradeStatusLblBounds.Left = dX
                TradeStatusLblBounds.Right = dw
                TradeStatusLblBounds.Top = dY
                TradeStatusLblBounds.Bottom = dH
            End If
        End If
            'YourWorthLbl
        dX = YourWorthLblX
        dY = YourWorthLblY
        dw = YourWorthLblWidth
        dH = YourWorthLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                YourWorthLblBounds.Left = dX
                YourWorthLblBounds.Right = dw
                YourWorthLblBounds.Top = dY
                YourWorthLblBounds.Bottom = dH
            End If
        End If
            'TheirWorthLbl
        dX = TheirWorthLblX
        dY = TheirWorthLblY
        dw = TheirWorthLblWidth
        dH = TheirWorthLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                TheirWorthLblBounds.Left = dX
                TheirWorthLblBounds.Right = dw
                TheirWorthLblBounds.Top = dY
                TheirWorthLblBounds.Bottom = dH
            End If
        End If
            'AcceptTradeBtn Button
        dX = AcceptTradeBtnX
        dY = AcceptTradeBtnY
        dw = AcceptTradeBtnWidth
        dH = AcceptTradeBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                sW = dw
                sH = dH
                If AcceptTradeBtnNormImage.Texture > 0 Then
                    If dw > AcceptTradeBtnNormImage.Width Then sW = dw - sx
                    If dH > AcceptTradeBtnNormImage.Height Then sH = dH - sy
                ElseIf AcceptTradeBtnHoverImage.Texture > 0 Then
                    If dw > AcceptTradeBtnHoverImage.Width Then sW = dw - sx
                    If dH > AcceptTradeBtnHoverImage.Height Then sH = dH - sy
                ElseIf AcceptTradeBtnClickImage.Texture > 0 Then
                    If dw > AcceptTradeBtnClickImage.Width Then sW = dw - sx
                    If dH > AcceptTradeBtnClickImage.Height Then sH = dH - sy
                End If
                AcceptTradeBtnBounds.Left = dX
                AcceptTradeBtnBounds.Right = dw
                AcceptTradeBtnBounds.Top = dY
                AcceptTradeBtnBounds.Bottom = dH
                AcceptTradeBtnSrcBounds.Left = sx
                AcceptTradeBtnSrcBounds.Right = sW
                AcceptTradeBtnSrcBounds.Top = sy
                AcceptTradeBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'DeclineTradeBtn Button
        dX = DeclineTradeBtnX
        dY = DeclineTradeBtnY
        dw = DeclineTradeBtnWidth
        dH = DeclineTradeBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < TradePnlBounds.Right And dY < TradePnlBounds.Bottom Then
                If dX + dw > TradePnlBounds.Right Then
                    dw = dw - ((dX + dw) - TradePnlBounds.Right)
                End If
                If dY + dH > TradePnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - TradePnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + TradePnlBounds.Left
                dY = dY + TradePnlBounds.Top
                sW = dw
                sH = dH
                If DeclineTradeBtnNormImage.Texture > 0 Then
                    If dw > DeclineTradeBtnNormImage.Width Then sW = dw - sx
                    If dH > DeclineTradeBtnNormImage.Height Then sH = dH - sy
                ElseIf DeclineTradeBtnHoverImage.Texture > 0 Then
                    If dw > DeclineTradeBtnHoverImage.Width Then sW = dw - sx
                    If dH > DeclineTradeBtnHoverImage.Height Then sH = dH - sy
                ElseIf DeclineTradeBtnClickImage.Texture > 0 Then
                    If dw > DeclineTradeBtnClickImage.Width Then sW = dw - sx
                    If dH > DeclineTradeBtnClickImage.Height Then sH = dH - sy
                End If
                DeclineTradeBtnBounds.Left = dX
                DeclineTradeBtnBounds.Right = dw
                DeclineTradeBtnBounds.Top = dY
                DeclineTradeBtnBounds.Bottom = dH
                DeclineTradeBtnSrcBounds.Left = sx
                DeclineTradeBtnSrcBounds.Right = sW
                DeclineTradeBtnSrcBounds.Top = sy
                DeclineTradeBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'MailboxPnl Panel
        dX = MailboxPnlX
        dY = MailboxPnlY
        dw = MailboxPnlWidth
        dH = MailboxPnlHeight
        If MailboxPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    MailboxPnlBounds.Left = dX
                    MailboxPnlBounds.Right = dw
                    MailboxPnlBounds.Top = dY
                    MailboxPnlBounds.Bottom = dH
                    MailboxPnlSrcBounds.Left = sx
                    MailboxPnlSrcBounds.Right = sW
                    MailboxPnlSrcBounds.Top = sy
                    MailboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    MailboxPnlBounds.Left = dX
                    MailboxPnlBounds.Right = dw
                    MailboxPnlBounds.Top = dY
                    MailboxPnlBounds.Bottom = dH
                    MailboxPnlSrcBounds.Left = sx
                    MailboxPnlSrcBounds.Right = sW
                    MailboxPnlSrcBounds.Top = sy
                    MailboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'CheckMailBtn Button
        dX = CheckMailBtnX
        dY = CheckMailBtnY
        dw = CheckMailBtnWidth
        dH = CheckMailBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < MailboxPnlBounds.Right And dY < MailboxPnlBounds.Bottom Then
                If dX + dw > MailboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - MailboxPnlBounds.Right)
                End If
                If dY + dH > MailboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - MailboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + MailboxPnlBounds.Left
                dY = dY + MailboxPnlBounds.Top
                sW = dw
                sH = dH
                If CheckMailBtnNormImage.Texture > 0 Then
                    If dw > CheckMailBtnNormImage.Width Then sW = dw - sx
                    If dH > CheckMailBtnNormImage.Height Then sH = dH - sy
                ElseIf CheckMailBtnHoverImage.Texture > 0 Then
                    If dw > CheckMailBtnHoverImage.Width Then sW = dw - sx
                    If dH > CheckMailBtnHoverImage.Height Then sH = dH - sy
                ElseIf CheckMailBtnClickImage.Texture > 0 Then
                    If dw > CheckMailBtnClickImage.Width Then sW = dw - sx
                    If dH > CheckMailBtnClickImage.Height Then sH = dH - sy
                End If
                CheckMailBtnBounds.Left = dX
                CheckMailBtnBounds.Right = dw
                CheckMailBtnBounds.Top = dY
                CheckMailBtnBounds.Bottom = dH
                CheckMailBtnSrcBounds.Left = sx
                CheckMailBtnSrcBounds.Right = sW
                CheckMailBtnSrcBounds.Top = sy
                CheckMailBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
             'SendMailBtn Button
        dX = SendMailBtnX
        dY = SendMailBtnY
        dw = SendMailBtnWidth
        dH = SendMailBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < MailboxPnlBounds.Right And dY < MailboxPnlBounds.Bottom Then
                If dX + dw > MailboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - MailboxPnlBounds.Right)
                End If
                If dY + dH > MailboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - MailboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + MailboxPnlBounds.Left
                dY = dY + MailboxPnlBounds.Top
                sW = dw
                sH = dH
                If SendMailBtnNormImage.Texture > 0 Then
                    If dw > SendMailBtnNormImage.Width Then sW = dw - sx
                    If dH > SendMailBtnNormImage.Height Then sH = dH - sy
                ElseIf SendMailBtnHoverImage.Texture > 0 Then
                    If dw > SendMailBtnHoverImage.Width Then sW = dw - sx
                    If dH > SendMailBtnHoverImage.Height Then sH = dH - sy
                ElseIf SendMailBtnClickImage.Texture > 0 Then
                    If dw > SendMailBtnClickImage.Width Then sW = dw - sx
                    If dH > SendMailBtnClickImage.Height Then sH = dH - sy
                End If
                SendMailBtnBounds.Left = dX
                SendMailBtnBounds.Right = dw
                SendMailBtnBounds.Top = dY
                SendMailBtnBounds.Bottom = dH
                SendMailBtnSrcBounds.Left = sx
                SendMailBtnSrcBounds.Right = sW
                SendMailBtnSrcBounds.Top = sy
                SendMailBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
             'CloseMailboxBtn Button
        dX = CloseMailboxBtnX
        dY = CloseMailboxBtnY
        dw = CloseMailboxBtnWidth
        dH = CloseMailboxBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < MailboxPnlBounds.Right And dY < MailboxPnlBounds.Bottom Then
                If dX + dw > MailboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - MailboxPnlBounds.Right)
                End If
                If dY + dH > MailboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - MailboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + MailboxPnlBounds.Left
                dY = dY + MailboxPnlBounds.Top
                sW = dw
                sH = dH
                If CloseMailboxBtnNormImage.Texture > 0 Then
                    If dw > CloseMailboxBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseMailboxBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseMailboxBtnHoverImage.Texture > 0 Then
                    If dw > CloseMailboxBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseMailboxBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseMailboxBtnClickImage.Texture > 0 Then
                    If dw > CloseMailboxBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseMailboxBtnClickImage.Height Then sH = dH - sy
                End If
                CloseMailboxBtnBounds.Left = dX
                CloseMailboxBtnBounds.Right = dw
                CloseMailboxBtnBounds.Top = dY
                CloseMailboxBtnBounds.Bottom = dH
                CloseMailboxBtnSrcBounds.Left = sx
                CloseMailboxBtnSrcBounds.Right = sW
                CloseMailboxBtnSrcBounds.Top = sy
                CloseMailboxBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'InboxPnl Panel
        dX = InboxPnlX
        dY = InboxPnlY
        dw = InboxPnlWidth
        dH = InboxPnlHeight
        If InboxPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    InboxPnlBounds.Left = dX
                    InboxPnlBounds.Right = dw
                    InboxPnlBounds.Top = dY
                    InboxPnlBounds.Bottom = dH
                    InboxPnlSrcBounds.Left = sx
                    InboxPnlSrcBounds.Right = sW
                    InboxPnlSrcBounds.Top = sy
                    InboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    InboxPnlBounds.Left = dX
                    InboxPnlBounds.Right = dw
                    InboxPnlBounds.Top = dY
                    InboxPnlBounds.Bottom = dH
                    InboxPnlSrcBounds.Left = sx
                    InboxPnlSrcBounds.Right = sW
                    InboxPnlSrcBounds.Top = sy
                    InboxPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'InboxList
        dX = InboxListX
        dY = InboxListY
        dw = InboxListWidth
        dH = InboxListHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InboxPnlBounds.Right And dY < InboxPnlBounds.Bottom Then
                If dX + dw > InboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InboxPnlBounds.Right)
                End If
                If dY + dH > InboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InboxPnlBounds.Left
                dY = dY + InboxPnlBounds.Top
                InboxListBounds.Left = dX
                InboxListBounds.Right = dw
                InboxListBounds.Top = dY
                InboxListBounds.Bottom = dH
            End If
        End If
            'ScrlInboxUpBtn Button
        dX = ScrlInboxUpBtnX
        dY = ScrlInboxUpBtnY
        dw = ScrlInboxUpBtnWidth
        dH = ScrlInboxUpBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InboxPnlBounds.Right And dY < InboxPnlBounds.Bottom Then
                If dX + dw > InboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InboxPnlBounds.Right)
                End If
                If dY + dH > InboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InboxPnlBounds.Left
                dY = dY + InboxPnlBounds.Top
                sW = dw
                sH = dH
                If ScrlInboxUpBtnNormImage.Texture > 0 Then
                    If dw > ScrlInboxUpBtnNormImage.Width Then sW = dw - sx
                    If dH > ScrlInboxUpBtnNormImage.Height Then sH = dH - sy
                ElseIf ScrlInboxUpBtnHoverImage.Texture > 0 Then
                    If dw > ScrlInboxUpBtnHoverImage.Width Then sW = dw - sx
                    If dH > ScrlInboxUpBtnHoverImage.Height Then sH = dH - sy
                ElseIf ScrlInboxUpBtnClickImage.Texture > 0 Then
                    If dw > ScrlInboxUpBtnClickImage.Width Then sW = dw - sx
                    If dH > ScrlInboxUpBtnClickImage.Height Then sH = dH - sy
                End If
                ScrlInboxUpBtnBounds.Left = dX
                ScrlInboxUpBtnBounds.Right = dw
                ScrlInboxUpBtnBounds.Top = dY
                ScrlInboxUpBtnBounds.Bottom = dH
                ScrlInboxUpBtnSrcBounds.Left = sx
                ScrlInboxUpBtnSrcBounds.Right = sW
                ScrlInboxUpBtnSrcBounds.Top = sy
                ScrlInboxUpBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'ScrlInboxDownBtn Button
        dX = ScrlInboxDownBtnX
        dY = ScrlInboxDownBtnY
        dw = ScrlInboxDownBtnWidth
        dH = ScrlInboxDownBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InboxPnlBounds.Right And dY < InboxPnlBounds.Bottom Then
                If dX + dw > InboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InboxPnlBounds.Right)
                End If
                If dY + dH > InboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InboxPnlBounds.Left
                dY = dY + InboxPnlBounds.Top
                sW = dw
                sH = dH
                If ScrlInboxDownBtnNormImage.Texture > 0 Then
                    If dw > ScrlInboxDownBtnNormImage.Width Then sW = dw - sx
                    If dH > ScrlInboxDownBtnNormImage.Height Then sH = dH - sy
                ElseIf ScrlInboxDownBtnHoverImage.Texture > 0 Then
                    If dw > ScrlInboxDownBtnHoverImage.Width Then sW = dw - sx
                    If dH > ScrlInboxDownBtnHoverImage.Height Then sH = dH - sy
                ElseIf ScrlInboxDownBtnClickImage.Texture > 0 Then
                    If dw > ScrlInboxDownBtnClickImage.Width Then sW = dw - sx
                    If dH > ScrlInboxDownBtnClickImage.Height Then sH = dH - sy
                End If
                ScrlInboxDownBtnBounds.Left = dX
                ScrlInboxDownBtnBounds.Right = dw
                ScrlInboxDownBtnBounds.Top = dY
                ScrlInboxDownBtnBounds.Bottom = dH
                ScrlInboxDownBtnSrcBounds.Left = sx
                ScrlInboxDownBtnSrcBounds.Right = sW
                ScrlInboxDownBtnSrcBounds.Top = sy
                ScrlInboxDownBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CloseInboxBtn Button
        dX = CloseInboxBtnX
        dY = CloseInboxBtnY
        dw = CloseInboxBtnWidth
        dH = CloseInboxBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < InboxPnlBounds.Right And dY < InboxPnlBounds.Bottom Then
                If dX + dw > InboxPnlBounds.Right Then
                    dw = dw - ((dX + dw) - InboxPnlBounds.Right)
                End If
                If dY + dH > InboxPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - InboxPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + InboxPnlBounds.Left
                dY = dY + InboxPnlBounds.Top
                sW = dw
                sH = dH
                If CloseInboxBtnNormImage.Texture > 0 Then
                    If dw > CloseInboxBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseInboxBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseInboxBtnHoverImage.Texture > 0 Then
                    If dw > CloseInboxBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseInboxBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseInboxBtnClickImage.Texture > 0 Then
                    If dw > CloseInboxBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseInboxBtnClickImage.Height Then sH = dH - sy
                End If
                CloseInboxBtnBounds.Left = dX
                CloseInboxBtnBounds.Right = dw
                CloseInboxBtnBounds.Top = dY
                CloseInboxBtnBounds.Bottom = dH
                CloseInboxBtnSrcBounds.Left = sx
                CloseInboxBtnSrcBounds.Right = sW
                CloseInboxBtnSrcBounds.Top = sy
                CloseInboxBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'ReadLetterPnl Panel
        dX = ReadLetterPnlX
        dY = ReadLetterPnlY
        dw = ReadLetterPnlWidth
        dH = ReadLetterPnlHeight
        If ReadLetterPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    ReadLetterPnlBounds.Left = dX
                    ReadLetterPnlBounds.Right = dw
                    ReadLetterPnlBounds.Top = dY
                    ReadLetterPnlBounds.Bottom = dH
                    ReadLetterPnlSrcBounds.Left = sx
                    ReadLetterPnlSrcBounds.Right = sW
                    ReadLetterPnlSrcBounds.Top = sy
                    ReadLetterPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    ReadLetterPnlBounds.Left = dX
                    ReadLetterPnlBounds.Right = dw
                    ReadLetterPnlBounds.Top = dY
                    ReadLetterPnlBounds.Bottom = dH
                    ReadLetterPnlSrcBounds.Left = sx
                    ReadLetterPnlSrcBounds.Right = sW
                    ReadLetterPnlSrcBounds.Top = sy
                    ReadLetterPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'MessageFrom
        dX = MessageFromX
        dY = MessageFromY
        dw = MessageFromWidth
        dH = MessageFromHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                MessageFromBounds.Left = dX
                MessageFromBounds.Right = dw
                MessageFromBounds.Top = dY
                MessageFromBounds.Bottom = dH
            End If
        End If
            'MessageFromContent
        dX = MessageFromContentX
        dY = MessageFromContentY
        dw = MessageFromContentWidth
        dH = MessageFromContentHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                MessageFromContentBounds.Left = dX
                MessageFromContentBounds.Right = dw
                MessageFromContentBounds.Top = dY
                MessageFromContentBounds.Bottom = dH
            End If
        End If
            'ItemReceived
        dX = ItemReceivedX
        dY = ItemReceivedY
        dw = ItemReceivedWidth
        dH = ItemReceivedHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                ItemReceivedBounds.Left = dX
                ItemReceivedBounds.Right = dw
                ItemReceivedBounds.Top = dY
                ItemReceivedBounds.Bottom = dH
            End If
        End If
            'ReplyLetterBtn Button
        dX = ReplyLetterBtnX
        dY = ReplyLetterBtnY
        dw = ReplyLetterBtnWidth
        dH = ReplyLetterBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                sW = dw
                sH = dH
                If ReplyLetterBtnNormImage.Texture > 0 Then
                    If dw > ReplyLetterBtnNormImage.Width Then sW = dw - sx
                    If dH > ReplyLetterBtnNormImage.Height Then sH = dH - sy
                ElseIf ReplyLetterBtnHoverImage.Texture > 0 Then
                    If dw > ReplyLetterBtnHoverImage.Width Then sW = dw - sx
                    If dH > ReplyLetterBtnHoverImage.Height Then sH = dH - sy
                ElseIf ReplyLetterBtnClickImage.Texture > 0 Then
                    If dw > ReplyLetterBtnClickImage.Width Then sW = dw - sx
                    If dH > ReplyLetterBtnClickImage.Height Then sH = dH - sy
                End If
                ReplyLetterBtnBounds.Left = dX
                ReplyLetterBtnBounds.Right = dw
                ReplyLetterBtnBounds.Top = dY
                ReplyLetterBtnBounds.Bottom = dH
                ReplyLetterBtnSrcBounds.Left = sx
                ReplyLetterBtnSrcBounds.Right = sW
                ReplyLetterBtnSrcBounds.Top = sy
                ReplyLetterBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'TrashLetterBtn Button
        dX = TrashLetterBtnX
        dY = TrashLetterBtnY
        dw = TrashLetterBtnWidth
        dH = TrashLetterBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                sW = dw
                sH = dH
                If TrashLetterBtnNormImage.Texture > 0 Then
                    If dw > TrashLetterBtnNormImage.Width Then sW = dw - sx
                    If dH > TrashLetterBtnNormImage.Height Then sH = dH - sy
                ElseIf TrashLetterBtnHoverImage.Texture > 0 Then
                    If dw > TrashLetterBtnHoverImage.Width Then sW = dw - sx
                    If dH > TrashLetterBtnHoverImage.Height Then sH = dH - sy
                ElseIf TrashLetterBtnClickImage.Texture > 0 Then
                    If dw > TrashLetterBtnClickImage.Width Then sW = dw - sx
                    If dH > TrashLetterBtnClickImage.Height Then sH = dH - sy
                End If
                TrashLetterBtnBounds.Left = dX
                TrashLetterBtnBounds.Right = dw
                TrashLetterBtnBounds.Top = dY
                TrashLetterBtnBounds.Bottom = dH
                TrashLetterBtnSrcBounds.Left = sx
                TrashLetterBtnSrcBounds.Right = sW
                TrashLetterBtnSrcBounds.Top = sy
                TrashLetterBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'StopReadingBtn Button
        dX = StopReadingBtnX
        dY = StopReadingBtnY
        dw = StopReadingBtnWidth
        dH = StopReadingBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < ReadLetterPnlBounds.Right And dY < ReadLetterPnlBounds.Bottom Then
                If dX + dw > ReadLetterPnlBounds.Right Then
                    dw = dw - ((dX + dw) - ReadLetterPnlBounds.Right)
                End If
                If dY + dH > ReadLetterPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - ReadLetterPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + ReadLetterPnlBounds.Left
                dY = dY + ReadLetterPnlBounds.Top
                sW = dw
                sH = dH
                If StopReadingBtnNormImage.Texture > 0 Then
                    If dw > StopReadingBtnNormImage.Width Then sW = dw - sx
                    If dH > StopReadingBtnNormImage.Height Then sH = dH - sy
                ElseIf StopReadingBtnHoverImage.Texture > 0 Then
                    If dw > StopReadingBtnHoverImage.Width Then sW = dw - sx
                    If dH > StopReadingBtnHoverImage.Height Then sH = dH - sy
                ElseIf StopReadingBtnClickImage.Texture > 0 Then
                    If dw > StopReadingBtnClickImage.Width Then sW = dw - sx
                    If dH > StopReadingBtnClickImage.Height Then sH = dH - sy
                End If
                StopReadingBtnBounds.Left = dX
                StopReadingBtnBounds.Right = dw
                StopReadingBtnBounds.Top = dY
                StopReadingBtnBounds.Bottom = dH
                StopReadingBtnSrcBounds.Left = sx
                StopReadingBtnSrcBounds.Right = sW
                StopReadingBtnSrcBounds.Top = sy
                StopReadingBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                'SendMailPnl Panel
        dX = SendMailPnlX
        dY = SendMailPnlY
        dw = SendMailPnlWidth
        dH = SendMailPnlHeight
        If SendMailPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    SendMailPnlBounds.Left = dX
                    SendMailPnlBounds.Right = dw
                    SendMailPnlBounds.Top = dY
                    SendMailPnlBounds.Bottom = dH
                    SendMailPnlSrcBounds.Left = sx
                    SendMailPnlSrcBounds.Right = sW
                    SendMailPnlSrcBounds.Top = sy
                    SendMailPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    SendMailPnlBounds.Left = dX
                    SendMailPnlBounds.Right = dw
                    SendMailPnlBounds.Top = dY
                    SendMailPnlBounds.Bottom = dH
                    SendMailPnlSrcBounds.Left = sx
                    SendMailPnlSrcBounds.Right = sW
                    SendMailPnlSrcBounds.Top = sy
                    SendMailPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'SendMessageTo
        dX = SendMessageToX
        dY = SendMessageToY
        dw = SendMessageToWidth
        dH = SendMessageToHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SendMailPnlBounds.Right And dY < SendMailPnlBounds.Bottom Then
                If dX + dw > SendMailPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SendMailPnlBounds.Right)
                End If
                If dY + dH > SendMailPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SendMailPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SendMailPnlBounds.Left
                dY = dY + SendMailPnlBounds.Top
                SendMessageToBounds.Left = dX
                SendMessageToBounds.Right = dw
                SendMessageToBounds.Top = dY
                SendMessageToBounds.Bottom = dH
            End If
        End If
            'SendMessageText
        dX = SendMessageTextX
        dY = SendMessageTextY
        dw = SendMessageTextWidth
        dH = SendMessageTextHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SendMailPnlBounds.Right And dY < SendMailPnlBounds.Bottom Then
                If dX + dw > SendMailPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SendMailPnlBounds.Right)
                End If
                If dY + dH > SendMailPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SendMailPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SendMailPnlBounds.Left
                dY = dY + SendMailPnlBounds.Top
                SendMessageTextBounds.Left = dX
                SendMessageTextBounds.Right = dw
                SendMessageTextBounds.Top = dY
                SendMessageTextBounds.Bottom = dH
            End If
        End If
            'SendMessageItem
        dX = SendMessageItemX
        dY = SendMessageItemY
        dw = SendMessageItemWidth
        dH = SendMessageItemHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SendMailPnlBounds.Right And dY < SendMailPnlBounds.Bottom Then
                If dX + dw > SendMailPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SendMailPnlBounds.Right)
                End If
                If dY + dH > SendMailPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SendMailPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SendMailPnlBounds.Left
                dY = dY + SendMailPnlBounds.Top
                SendMessageItemBounds.Left = dX
                SendMessageItemBounds.Right = dw
                SendMessageItemBounds.Top = dY
                SendMessageItemBounds.Bottom = dH
            End If
        End If
            'SendMessageBtn Button
        dX = SendMessageBtnX
        dY = SendMessageBtnY
        dw = SendMessageBtnWidth
        dH = SendMessageBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SendMailPnlBounds.Right And dY < SendMailPnlBounds.Bottom Then
                If dX + dw > SendMailPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SendMailPnlBounds.Right)
                End If
                If dY + dH > SendMailPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SendMailPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SendMailPnlBounds.Left
                dY = dY + SendMailPnlBounds.Top
                sW = dw
                sH = dH
                If SendMessageBtnNormImage.Texture > 0 Then
                    If dw > SendMessageBtnNormImage.Width Then sW = dw - sx
                    If dH > SendMessageBtnNormImage.Height Then sH = dH - sy
                ElseIf SendMessageBtnHoverImage.Texture > 0 Then
                    If dw > SendMessageBtnHoverImage.Width Then sW = dw - sx
                    If dH > SendMessageBtnHoverImage.Height Then sH = dH - sy
                ElseIf SendMessageBtnClickImage.Texture > 0 Then
                    If dw > SendMessageBtnClickImage.Width Then sW = dw - sx
                    If dH > SendMessageBtnClickImage.Height Then sH = dH - sy
                End If
                SendMessageBtnBounds.Left = dX
                SendMessageBtnBounds.Right = dw
                SendMessageBtnBounds.Top = dY
                SendMessageBtnBounds.Bottom = dH
                SendMessageBtnSrcBounds.Left = sx
                SendMessageBtnSrcBounds.Right = sW
                SendMessageBtnSrcBounds.Top = sy
                SendMessageBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'DiscardMessageBtn Button
        dX = DiscardMessageBtnX
        dY = DiscardMessageBtnY
        dw = DiscardMessageBtnWidth
        dH = DiscardMessageBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < SendMailPnlBounds.Right And dY < SendMailPnlBounds.Bottom Then
                If dX + dw > SendMailPnlBounds.Right Then
                    dw = dw - ((dX + dw) - SendMailPnlBounds.Right)
                End If
                If dY + dH > SendMailPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - SendMailPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + SendMailPnlBounds.Left
                dY = dY + SendMailPnlBounds.Top
                sW = dw
                sH = dH
                If DiscardMessageBtnNormImage.Texture > 0 Then
                    If dw > DiscardMessageBtnNormImage.Width Then sW = dw - sx
                    If dH > DiscardMessageBtnNormImage.Height Then sH = dH - sy
                ElseIf DiscardMessageBtnHoverImage.Texture > 0 Then
                    If dw > DiscardMessageBtnHoverImage.Width Then sW = dw - sx
                    If dH > DiscardMessageBtnHoverImage.Height Then sH = dH - sy
                ElseIf DiscardMessageBtnClickImage.Texture > 0 Then
                    If dw > DiscardMessageBtnClickImage.Width Then sW = dw - sx
                    If dH > DiscardMessageBtnClickImage.Height Then sH = dH - sy
                End If
                DiscardMessageBtnBounds.Left = dX
                DiscardMessageBtnBounds.Right = dw
                DiscardMessageBtnBounds.Top = dY
                DiscardMessageBtnBounds.Bottom = dH
                DiscardMessageBtnSrcBounds.Left = sx
                DiscardMessageBtnSrcBounds.Right = sW
                DiscardMessageBtnSrcBounds.Top = sy
                DiscardMessageBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
                    'QuestLogPanel Panel
        dX = QuestLogPanelX
        dY = QuestLogPanelY
        dw = QuestLogPanelWidth
        dH = QuestLogPanelHeight
        If QuestLogPanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    QuestLogPanelBounds.Left = dX
                    QuestLogPanelBounds.Right = dw
                    QuestLogPanelBounds.Top = dY
                    QuestLogPanelBounds.Bottom = dH
                    QuestLogPanelSrcBounds.Left = sx
                    QuestLogPanelSrcBounds.Right = sW
                    QuestLogPanelSrcBounds.Top = sy
                    QuestLogPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    QuestLogPanelBounds.Left = dX
                    QuestLogPanelBounds.Right = dw
                    QuestLogPanelBounds.Top = dY
                    QuestLogPanelBounds.Bottom = dH
                    QuestLogPanelSrcBounds.Left = sx
                    QuestLogPanelSrcBounds.Right = sW
                    QuestLogPanelSrcBounds.Top = sy
                    QuestLogPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
                'QuestTitleLbl
        dX = QuestTitleLblX
        dY = QuestTitleLblY
        dw = QuestTitleLblWidth
        dH = QuestTitleLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                QuestTitleLblBounds.Left = dX
                QuestTitleLblBounds.Right = dw
                QuestTitleLblBounds.Top = dY
                QuestTitleLblBounds.Bottom = dH
            End If
        End If
            'QuestPageContent
        dX = QuestPageContentX
        dY = QuestPageContentY
        dw = QuestPageContentWidth
        dH = QuestPageContentHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                QuestPageContentBounds.Left = dX
                QuestPageContentBounds.Right = dw
                QuestPageContentBounds.Top = dY
                QuestPageContentBounds.Bottom = dH
            End If
        End If
            'QuestDeclineLbl
        dX = QuestDeclineLblX
        dY = QuestDeclineLblY
        dw = QuestDeclineLblWidth
        dH = QuestDeclineLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                QuestDeclineLblBounds.Left = dX
                QuestDeclineLblBounds.Right = dw
                QuestDeclineLblBounds.Top = dY
                QuestDeclineLblBounds.Bottom = dH
            End If
        End If
            'QuestAcceptLbl
        dX = QuestAcceptLblX
        dY = QuestAcceptLblY
        dw = QuestAcceptLblWidth
        dH = QuestAcceptLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                QuestAcceptLblBounds.Left = dX
                QuestAcceptLblBounds.Right = dw
                QuestAcceptLblBounds.Top = dY
                QuestAcceptLblBounds.Bottom = dH
            End If
        End If
            'QuitQuestLbl
        dX = QuitQuestLblX
        dY = QuitQuestLblY
        dw = QuitQuestLblWidth
        dH = QuitQuestLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                QuitQuestLblBounds.Left = dX
                QuitQuestLblBounds.Right = dw
                QuitQuestLblBounds.Top = dY
                QuitQuestLblBounds.Bottom = dH
            End If
        End If
            'CloseQuestLogBtn Button
        dX = CloseQuestLogBtnX
        dY = CloseQuestLogBtnY
        dw = CloseQuestLogBtnWidth
        dH = CloseQuestLogBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < QuestLogPanelBounds.Right And dY < QuestLogPanelBounds.Bottom Then
                If dX + dw > QuestLogPanelBounds.Right Then
                    dw = dw - ((dX + dw) - QuestLogPanelBounds.Right)
                End If
                If dY + dH > QuestLogPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - QuestLogPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + QuestLogPanelBounds.Left
                dY = dY + QuestLogPanelBounds.Top
                sW = dw
                sH = dH
                If CloseQuestLogBtnNormImage.Texture > 0 Then
                    If dw > CloseQuestLogBtnNormImage.Width Then sW = dw - sx
                    If dH > CloseQuestLogBtnNormImage.Height Then sH = dH - sy
                ElseIf CloseQuestLogBtnHoverImage.Texture > 0 Then
                    If dw > CloseQuestLogBtnHoverImage.Width Then sW = dw - sx
                    If dH > CloseQuestLogBtnHoverImage.Height Then sH = dH - sy
                ElseIf CloseQuestLogBtnClickImage.Texture > 0 Then
                    If dw > CloseQuestLogBtnClickImage.Width Then sW = dw - sx
                    If dH > CloseQuestLogBtnClickImage.Height Then sH = dH - sy
                End If
                CloseQuestLogBtnBounds.Left = dX
                CloseQuestLogBtnBounds.Right = dw
                CloseQuestLogBtnBounds.Top = dY
                CloseQuestLogBtnBounds.Bottom = dH
                CloseQuestLogBtnSrcBounds.Left = sx
                CloseQuestLogBtnSrcBounds.Right = sW
                CloseQuestLogBtnSrcBounds.Top = sy
                CloseQuestLogBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'CurrencyPanel Panel
        dX = CurrencyPanelX
        dY = CurrencyPanelY
        dw = CurrencyPanelWidth
        dH = CurrencyPanelHeight
        If CurrencyPanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    CurrencyPanelBounds.Left = dX
                    CurrencyPanelBounds.Right = dw
                    CurrencyPanelBounds.Top = dY
                    CurrencyPanelBounds.Bottom = dH
                    CurrencyPanelSrcBounds.Left = sx
                    CurrencyPanelSrcBounds.Right = sW
                    CurrencyPanelSrcBounds.Top = sy
                    CurrencyPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    CurrencyPanelBounds.Left = dX
                    CurrencyPanelBounds.Right = dw
                    CurrencyPanelBounds.Top = dY
                    CurrencyPanelBounds.Bottom = dH
                    CurrencyPanelSrcBounds.Left = sx
                    CurrencyPanelSrcBounds.Right = sW
                    CurrencyPanelSrcBounds.Top = sy
                    CurrencyPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'CurrencyPrompt
        dX = CurrencyPromptX
        dY = CurrencyPromptY
        dw = CurrencyPromptWidth
        dH = CurrencyPromptHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CurrencyPanelBounds.Right And dY < CurrencyPanelBounds.Bottom Then
                If dX + dw > CurrencyPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CurrencyPanelBounds.Right)
                End If
                If dY + dH > CurrencyPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CurrencyPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CurrencyPanelBounds.Left
                dY = dY + CurrencyPanelBounds.Top
                CurrencyPromptBounds.Left = dX
                CurrencyPromptBounds.Right = dw
                CurrencyPromptBounds.Top = dY
                CurrencyPromptBounds.Bottom = dH
            End If
        End If
                'CurrencyInput
        dX = CurrencyInputX
        dY = CurrencyInputY
        dw = CurrencyInputWidth
        dH = CurrencyInputHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CurrencyPanelBounds.Right And dY < CurrencyPanelBounds.Bottom Then
                If dX + dw > CurrencyPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CurrencyPanelBounds.Right)
                End If
                If dY + dH > CurrencyPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CurrencyPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CurrencyPanelBounds.Left
                dY = dY + CurrencyPanelBounds.Top
                CurrencyInputBounds.Left = dX
                CurrencyInputBounds.Right = dw
                CurrencyInputBounds.Top = dY
                CurrencyInputBounds.Bottom = dH
            End If
        End If
            'CurrencyOkBtn Button
        dX = CurrencyOkBtnX
        dY = CurrencyOkBtnY
        dw = CurrencyOkBtnWidth
        dH = CurrencyOkBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CurrencyPanelBounds.Right And dY < CurrencyPanelBounds.Bottom Then
                If dX + dw > CurrencyPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CurrencyPanelBounds.Right)
                End If
                If dY + dH > CurrencyPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CurrencyPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CurrencyPanelBounds.Left
                dY = dY + CurrencyPanelBounds.Top
                sW = dw
                sH = dH
                If CurrencyOkBtnNormImage.Texture > 0 Then
                    If dw > CurrencyOkBtnNormImage.Width Then sW = dw - sx
                    If dH > CurrencyOkBtnNormImage.Height Then sH = dH - sy
                ElseIf CurrencyOkBtnHoverImage.Texture > 0 Then
                    If dw > CurrencyOkBtnHoverImage.Width Then sW = dw - sx
                    If dH > CurrencyOkBtnHoverImage.Height Then sH = dH - sy
                ElseIf CurrencyOkBtnClickImage.Texture > 0 Then
                    If dw > CurrencyOkBtnClickImage.Width Then sW = dw - sx
                    If dH > CurrencyOkBtnClickImage.Height Then sH = dH - sy
                End If
                CurrencyOkBtnBounds.Left = dX
                CurrencyOkBtnBounds.Right = dw
                CurrencyOkBtnBounds.Top = dY
                CurrencyOkBtnBounds.Bottom = dH
                CurrencyOkBtnSrcBounds.Left = sx
                CurrencyOkBtnSrcBounds.Right = sW
                CurrencyOkBtnSrcBounds.Top = sy
                CurrencyOkBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'CurrencyCancelBtn Button
        dX = CurrencyCancelBtnX
        dY = CurrencyCancelBtnY
        dw = CurrencyCancelBtnWidth
        dH = CurrencyCancelBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < CurrencyPanelBounds.Right And dY < CurrencyPanelBounds.Bottom Then
                If dX + dw > CurrencyPanelBounds.Right Then
                    dw = dw - ((dX + dw) - CurrencyPanelBounds.Right)
                End If
                If dY + dH > CurrencyPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - CurrencyPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + CurrencyPanelBounds.Left
                dY = dY + CurrencyPanelBounds.Top
                sW = dw
                sH = dH
                If CurrencyCancelBtnNormImage.Texture > 0 Then
                    If dw > CurrencyCancelBtnNormImage.Width Then sW = dw - sx
                    If dH > CurrencyCancelBtnNormImage.Height Then sH = dH - sy
                ElseIf CurrencyCancelBtnHoverImage.Texture > 0 Then
                    If dw > CurrencyCancelBtnHoverImage.Width Then sW = dw - sx
                    If dH > CurrencyCancelBtnHoverImage.Height Then sH = dH - sy
                ElseIf CurrencyCancelBtnClickImage.Texture > 0 Then
                    If dw > CurrencyCancelBtnClickImage.Width Then sW = dw - sx
                    If dH > CurrencyCancelBtnClickImage.Height Then sH = dH - sy
                End If
                CurrencyCancelBtnBounds.Left = dX
                CurrencyCancelBtnBounds.Right = dw
                CurrencyCancelBtnBounds.Top = dY
                CurrencyCancelBtnBounds.Bottom = dH
                CurrencyCancelBtnSrcBounds.Left = sx
                CurrencyCancelBtnSrcBounds.Right = sW
                CurrencyCancelBtnSrcBounds.Top = sy
                CurrencyCancelBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If

        dX = DialoguePanelX
        dY = DialoguePanelY
        dw = DialoguePanelWidth
        dH = DialoguePanelHeight
        If DialoguePanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    DialoguePanelBounds.Left = dX
                    DialoguePanelBounds.Right = dw
                    DialoguePanelBounds.Top = dY
                    DialoguePanelBounds.Bottom = dH
                    DialoguePanelSrcBounds.Left = sx
                    DialoguePanelSrcBounds.Right = sW
                    DialoguePanelSrcBounds.Top = sy
                    DialoguePanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    DialoguePanelBounds.Left = dX
                    DialoguePanelBounds.Right = dw
                    DialoguePanelBounds.Top = dY
                    DialoguePanelBounds.Bottom = dH
                    DialoguePanelSrcBounds.Left = sx
                    DialoguePanelSrcBounds.Right = sW
                    DialoguePanelSrcBounds.Top = sy
                    DialoguePanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
                'DialogueTitle
        dX = DialogueTitleX
        dY = DialogueTitleY
        dw = DialogueTitleWidth
        dH = DialogueTitleHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < DialoguePanelBounds.Right And dY < DialoguePanelBounds.Bottom Then
                If dX + dw > DialoguePanelBounds.Right Then
                    dw = dw - ((dX + dw) - DialoguePanelBounds.Right)
                End If
                If dY + dH > DialoguePanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - DialoguePanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + DialoguePanelBounds.Left
                dY = dY + DialoguePanelBounds.Top
                DialogueTitleBounds.Left = dX
                DialogueTitleBounds.Right = dw
                DialogueTitleBounds.Top = dY
                DialogueTitleBounds.Bottom = dH
            End If
        End If
            'DialogueContent
        dX = DialogueContentX
        dY = DialogueContentY
        dw = DialogueContentWidth
        dH = DialogueContentHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < DialoguePanelBounds.Right And dY < DialoguePanelBounds.Bottom Then
                If dX + dw > DialoguePanelBounds.Right Then
                    dw = dw - ((dX + dw) - DialoguePanelBounds.Right)
                End If
                If dY + dH > DialoguePanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - DialoguePanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + DialoguePanelBounds.Left
                dY = dY + DialoguePanelBounds.Top
                DialogueContentBounds.Left = dX
                DialogueContentBounds.Right = dw
                DialogueContentBounds.Top = dY
                DialogueContentBounds.Bottom = dH
            End If
        End If
            'DialogueYesBtn Button
        dX = DialogueYesBtnX
        dY = DialogueYesBtnY
        dw = DialogueYesBtnWidth
        dH = DialogueYesBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < DialoguePanelBounds.Right And dY < DialoguePanelBounds.Bottom Then
                If dX + dw > DialoguePanelBounds.Right Then
                    dw = dw - ((dX + dw) - DialoguePanelBounds.Right)
                End If
                If dY + dH > DialoguePanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - DialoguePanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + DialoguePanelBounds.Left
                dY = dY + DialoguePanelBounds.Top
                sW = dw
                sH = dH
                If DialogueYesBtnNormImage.Texture > 0 Then
                    If dw > DialogueYesBtnNormImage.Width Then sW = dw - sx
                    If dH > DialogueYesBtnNormImage.Height Then sH = dH - sy
                ElseIf DialogueYesBtnHoverImage.Texture > 0 Then
                    If dw > DialogueYesBtnHoverImage.Width Then sW = dw - sx
                    If dH > DialogueYesBtnHoverImage.Height Then sH = dH - sy
                ElseIf DialogueYesBtnClickImage.Texture > 0 Then
                    If dw > DialogueYesBtnClickImage.Width Then sW = dw - sx
                    If dH > DialogueYesBtnClickImage.Height Then sH = dH - sy
                End If
                DialogueYesBtnBounds.Left = dX
                DialogueYesBtnBounds.Right = dw
                DialogueYesBtnBounds.Top = dY
                DialogueYesBtnBounds.Bottom = dH
                DialogueYesBtnSrcBounds.Left = sx
                DialogueYesBtnSrcBounds.Right = sW
                DialogueYesBtnSrcBounds.Top = sy
                DialogueYesBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'DialogueNoBtn Button
        dX = DialogueNoBtnX
        dY = DialogueNoBtnY
        dw = DialogueNoBtnWidth
        dH = DialogueNoBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < DialoguePanelBounds.Right And dY < DialoguePanelBounds.Bottom Then
                If dX + dw > DialoguePanelBounds.Right Then
                    dw = dw - ((dX + dw) - DialoguePanelBounds.Right)
                End If
                If dY + dH > DialoguePanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - DialoguePanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + DialoguePanelBounds.Left
                dY = dY + DialoguePanelBounds.Top
                sW = dw
                sH = dH
                If DialogueNoBtnNormImage.Texture > 0 Then
                    If dw > DialogueNoBtnNormImage.Width Then sW = dw - sx
                    If dH > DialogueNoBtnNormImage.Height Then sH = dH - sy
                ElseIf DialogueNoBtnHoverImage.Texture > 0 Then
                    If dw > DialogueNoBtnHoverImage.Width Then sW = dw - sx
                    If dH > DialogueNoBtnHoverImage.Height Then sH = dH - sy
                ElseIf DialogueNoBtnClickImage.Texture > 0 Then
                    If dw > DialogueNoBtnClickImage.Width Then sW = dw - sx
                    If dH > DialogueNoBtnClickImage.Height Then sH = dH - sy
                End If
                DialogueNoBtnBounds.Left = dX
                DialogueNoBtnBounds.Right = dw
                DialogueNoBtnBounds.Top = dY
                DialogueNoBtnBounds.Bottom = dH
                DialogueNoBtnSrcBounds.Left = sx
                DialogueNoBtnSrcBounds.Right = sW
                DialogueNoBtnSrcBounds.Top = sy
                DialogueNoBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'DialogueOkayBtn Button
        dX = DialogueOkayBtnX
        dY = DialogueOkayBtnY
        dw = DialogueOkayBtnWidth
        dH = DialogueOkayBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < DialoguePanelBounds.Right And dY < DialoguePanelBounds.Bottom Then
                If dX + dw > DialoguePanelBounds.Right Then
                    dw = dw - ((dX + dw) - DialoguePanelBounds.Right)
                End If
                If dY + dH > DialoguePanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - DialoguePanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + DialoguePanelBounds.Left
                dY = dY + DialoguePanelBounds.Top
                sW = dw
                sH = dH
                If DialogueOkayBtnNormImage.Texture > 0 Then
                    If dw > DialogueOkayBtnNormImage.Width Then sW = dw - sx
                    If dH > DialogueOkayBtnNormImage.Height Then sH = dH - sy
                ElseIf DialogueOkayBtnHoverImage.Texture > 0 Then
                    If dw > DialogueOkayBtnHoverImage.Width Then sW = dw - sx
                    If dH > DialogueOkayBtnHoverImage.Height Then sH = dH - sy
                ElseIf DialogueOkayBtnClickImage.Texture > 0 Then
                    If dw > DialogueOkayBtnClickImage.Width Then sW = dw - sx
                    If dH > DialogueOkayBtnClickImage.Height Then sH = dH - sy
                End If
                DialogueOkayBtnBounds.Left = dX
                DialogueOkayBtnBounds.Right = dw
                DialogueOkayBtnBounds.Top = dY
                DialogueOkayBtnBounds.Bottom = dH
                DialogueOkayBtnSrcBounds.Left = sx
                DialogueOkayBtnSrcBounds.Right = sW
                DialogueOkayBtnSrcBounds.Top = sy
                DialogueOkayBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
            'EventPnl Panel
        dX = EventPnlX
        dY = EventPnlY
        dw = EventPnlWidth
        dH = EventPnlHeight
        If EventPnlParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    EventPnlBounds.Left = dX
                    EventPnlBounds.Right = dw
                    EventPnlBounds.Top = dY
                    EventPnlBounds.Bottom = dH
                    EventPnlSrcBounds.Left = sx
                    EventPnlSrcBounds.Right = sW
                    EventPnlSrcBounds.Top = sy
                    EventPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    EventPnlBounds.Left = dX
                    EventPnlBounds.Right = dw
                    EventPnlBounds.Top = dY
                    EventPnlBounds.Bottom = dH
                    EventPnlSrcBounds.Left = sx
                    EventPnlSrcBounds.Right = sW
                    EventPnlSrcBounds.Top = sy
                    EventPnlSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
            'EventPrompt
        dX = EventPromptX
        dY = EventPromptY
        dw = EventPromptWidth
        dH = EventPromptHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                EventPromptBounds.Left = dX
                EventPromptBounds.Right = dw
                EventPromptBounds.Top = dY
                EventPromptBounds.Bottom = dH
            End If
        End If
            'Response1Lbl
        dX = Response1LblX
        dY = Response1LblY
        dw = Response1LblWidth
        dH = Response1LblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                Response1LblBounds.Left = dX
                Response1LblBounds.Right = dw
                Response1LblBounds.Top = dY
                Response1LblBounds.Bottom = dH
            End If
        End If
            'Response2Lbl
        dX = Response2LblX
        dY = Response2LblY
        dw = Response2LblWidth
        dH = Response2LblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                Response2LblBounds.Left = dX
                Response2LblBounds.Right = dw
                Response2LblBounds.Top = dY
                Response2LblBounds.Bottom = dH
            End If
        End If
            'Response3Lbl
        dX = Response3LblX
        dY = Response3LblY
        dw = Response3LblWidth
        dH = Response3LblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                Response3LblBounds.Left = dX
                Response3LblBounds.Right = dw
                Response3LblBounds.Top = dY
                Response3LblBounds.Bottom = dH
            End If
        End If
            'Response4Lbl
        dX = Response4LblX
        dY = Response4LblY
        dw = Response4LblWidth
        dH = Response4LblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                Response4LblBounds.Left = dX
                Response4LblBounds.Right = dw
                Response4LblBounds.Top = dY
                Response4LblBounds.Bottom = dH
            End If
        End If
            'EventContinueLbl
        dX = EventContinueLblX
        dY = EventContinueLblY
        dw = EventContinueLblWidth
        dH = EventContinueLblHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < EventPnlBounds.Right And dY < EventPnlBounds.Bottom Then
                If dX + dw > EventPnlBounds.Right Then
                    dw = dw - ((dX + dw) - EventPnlBounds.Right)
                End If
                If dY + dH > EventPnlBounds.Bottom Then
                    dH = dH - ((dY + dH) - EventPnlBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + EventPnlBounds.Left
                dY = dY + EventPnlBounds.Top
                EventContinueLblBounds.Left = dX
                EventContinueLblBounds.Right = dw
                EventContinueLblBounds.Top = dY
                EventContinueLblBounds.Bottom = dH
            End If
        End If
        
        'PetPanel Panel
        dX = PetPanelX
        dY = PetPanelY
        dw = PetPanelWidth
        dH = PetPanelHeight
        If PetsPanelParent = 0 Then
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameScreenBounds.Right And dY < GameScreenBounds.Bottom Then
                    If dX + dw > GameScreenBounds.Right Then
                        dw = dw - ((dX + dw) - GameScreenBounds.Right)
                    End If
                    If dY + dH > GameScreenBounds.Bottom Then
                        dH = dH - ((dY + dH) - GameScreenBounds.Bottom)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX + GameScreenX
                    dY = dY + GameScreenY
                    sW = dw
                    sH = dH
                    PetPanelBounds.Left = dX
                    PetPanelBounds.Right = dw
                    PetPanelBounds.Top = dY
                    PetPanelBounds.Bottom = dH
                    PetPanelSrcBounds.Left = sx
                    PetPanelSrcBounds.Right = sW
                    PetPanelSrcBounds.Top = sy
                    PetPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        Else
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dX < GameWindowWidth And dY < GameWindowHeight Then
                    If dX + dw > GameWindowWidth Then
                        dw = dw - ((dX + dw) - GameWindowWidth)
                    End If
                    If dY + dH > GameWindowHeight Then
                        dH = dH - ((dY + dH) - GameWindowHeight)
                    End If
                    If dX < 0 Then
                        sx = dX * -1
                        dw = dw + dX
                        dX = dX + sx
                    End If
                    If dY < 0 Then
                        sy = dY * -1
                        dH = dH + dY
                        dY = dY + sy
                    End If
                    dX = dX
                    dY = dY
                    sW = dw
                    sH = dH
                    PetPanelBounds.Left = dX
                    PetPanelBounds.Right = dw
                    PetPanelBounds.Top = dY
                    PetPanelBounds.Bottom = dH
                    PetPanelSrcBounds.Left = sx
                    PetPanelSrcBounds.Right = sW
                    PetPanelSrcBounds.Top = sy
                    PetPanelSrcBounds.Bottom = sH
                End If
                sx = 0
                sy = 0
            End If
        End If
        
        'PetName
        dX = PetNameX
        dY = PetNameY
        dw = PetNameWidth
        dH = PetNameHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetNameBounds.Left = dX
                PetNameBounds.Right = dw
                PetNameBounds.Top = dY
                PetNameBounds.Bottom = dH
            End If
        End If
        
        'PetIconPanel
        dX = PetIconPanelX
        dY = PetIconPanelY
        dw = PetIconPanelWidth
        dH = PetIconPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetIconPanelBounds.Left = dX
                PetIconPanelBounds.Right = dw
                PetIconPanelBounds.Top = dY
                PetIconPanelBounds.Bottom = dH
            End If
        End If
        
        'PetHPText
        dX = PetHPTextX
        dY = PetHPTextY
        dw = PetHPTextWidth
        dH = PetHPTextHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetHPTextBounds.Left = dX
                PetHPTextBounds.Right = dw
                PetHPTextBounds.Top = dY
                PetHPTextBounds.Bottom = dH
            End If
        End If
        
        'PetMPText
        dX = PetMPTextX
        dY = PetMPTextY
        dw = PetMPTextWidth
        dH = PetMPTextHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetMPTextBounds.Left = dX
                PetMPTextBounds.Right = dw
                PetMPTextBounds.Top = dY
                PetMPTextBounds.Bottom = dH
            End If
        End If
        
        'PetHpPanel
        dX = PetHPPanelX
        dY = PetHPPanelY
        dw = PetHPPanelWidth
        dH = PetHPPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetHPPanelImage.Texture > 0 Then
                End If
                PetHPPanelBounds.Left = dX
                PetHPPanelBounds.Right = dw
                PetHPPanelBounds.Top = dY
                PetHPPanelBounds.Bottom = dH
                PetHPPanelSrcBounds.Left = sx
                PetHPPanelSrcBounds.Right = sW
                PetHPPanelSrcBounds.Top = sy
                PetHPPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetmpPanel
        dX = PetMPPanelX
        dY = PetMPPanelY
        dw = PetMPPanelWidth
        dH = PetMPPanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetMPPanelImage.Texture > 0 Then
                End If
                PetMPPanelBounds.Left = dX
                PetMPPanelBounds.Right = dw
                PetMPPanelBounds.Top = dY
                PetMPPanelBounds.Bottom = dH
                PetMPPanelSrcBounds.Left = sx
                PetMPPanelSrcBounds.Right = sW
                PetMPPanelSrcBounds.Top = sy
                PetMPPanelSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetStrLabel
        dX = PetStrLabelX
        dY = PetStrLabelY
        dw = PetStrLabelWidth
        dH = PetStrLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetStrLabelBounds.Left = dX
                PetStrLabelBounds.Right = dw
                PetStrLabelBounds.Top = dY
                PetStrLabelBounds.Bottom = dH
            End If
        End If
        
        'PetendLabel
        dX = PetEndLabelX
        dY = PetEndLabelY
        dw = PetEndLabelWidth
        dH = PetEndLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetEndLabelBounds.Left = dX
                PetEndLabelBounds.Right = dw
                PetEndLabelBounds.Top = dY
                PetEndLabelBounds.Bottom = dH
            End If
        End If
        
        'PetintLabel
        dX = PetIntLabelX
        dY = PetIntLabelY
        dw = PetIntLabelWidth
        dH = PetIntLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetIntLabelBounds.Left = dX
                PetIntLabelBounds.Right = dw
                PetIntLabelBounds.Top = dY
                PetIntLabelBounds.Bottom = dH
            End If
        End If
        
        'PetagiLabel
        dX = PetAgiLabelX
        dY = PetAgiLabelY
        dw = PetAgiLabelWidth
        dH = PetAgiLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetAgiLabelBounds.Left = dX
                PetAgiLabelBounds.Right = dw
                PetAgiLabelBounds.Top = dY
                PetAgiLabelBounds.Bottom = dH
            End If
        End If
        
        'PetwillLabel
        dX = PetWillLabelX
        dY = PetWillLabelY
        dw = PetWillLabelWidth
        dH = PetWillLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetWillLabelBounds.Left = dX
                PetWillLabelBounds.Right = dw
                PetWillLabelBounds.Top = dY
                PetWillLabelBounds.Bottom = dH
            End If
        End If
        
        'PetpntsLabel
        dX = PetPntsLabelX
        dY = PetPntsLabelY
        dw = PetPntsLabelWidth
        dH = PetPntsLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetPntsLabelBounds.Left = dX
                PetPntsLabelBounds.Right = dw
                PetPntsLabelBounds.Top = dY
                PetPntsLabelBounds.Bottom = dH
            End If
        End If
        
        'PetAddStrBtn Button
        dX = PetAddStrBtnX
        dY = PetAddStrBtnY
        dw = PetAddStrBtnWidth
        dH = PetAddStrBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetAddStrBtnNormImage.Texture > 0 Then
                    If dw > PetAddStrBtnNormImage.Width Then sW = dw - sx
                    If dH > PetAddStrBtnNormImage.Height Then sH = dH - sy
                ElseIf PetAddStrBtnHoverImage.Texture > 0 Then
                    If dw > PetAddStrBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetAddStrBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetAddStrBtnClickImage.Texture > 0 Then
                    If dw > PetAddStrBtnClickImage.Width Then sW = dw - sx
                    If dH > PetAddStrBtnClickImage.Height Then sH = dH - sy
                End If
                PetAddStrBtnBounds.Left = dX
                PetAddStrBtnBounds.Right = dw
                PetAddStrBtnBounds.Top = dY
                PetAddStrBtnBounds.Bottom = dH
                PetAddStrBtnSrcBounds.Left = sx
                PetAddStrBtnSrcBounds.Right = sW
                PetAddStrBtnSrcBounds.Top = sy
                PetAddStrBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetAddEndBtn Button
        dX = PetAddEndBtnX
        dY = PetAddEndBtnY
        dw = PetAddEndBtnWidth
        dH = PetAddEndBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetAddEndBtnNormImage.Texture > 0 Then
                    If dw > PetAddEndBtnNormImage.Width Then sW = dw - sx
                    If dH > PetAddEndBtnNormImage.Height Then sH = dH - sy
                ElseIf PetAddEndBtnHoverImage.Texture > 0 Then
                    If dw > PetAddEndBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetAddEndBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetAddEndBtnClickImage.Texture > 0 Then
                    If dw > PetAddEndBtnClickImage.Width Then sW = dw - sx
                    If dH > PetAddEndBtnClickImage.Height Then sH = dH - sy
                End If
                PetAddEndBtnBounds.Left = dX
                PetAddEndBtnBounds.Right = dw
                PetAddEndBtnBounds.Top = dY
                PetAddEndBtnBounds.Bottom = dH
                PetAddEndBtnSrcBounds.Left = sx
                PetAddEndBtnSrcBounds.Right = sW
                PetAddEndBtnSrcBounds.Top = sy
                PetAddEndBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetAddIntBtn Button
        dX = PetAddIntBtnX
        dY = PetAddIntBtnY
        dw = PetAddIntBtnWidth
        dH = PetAddIntBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetAddIntBtnNormImage.Texture > 0 Then
                    If dw > PetAddIntBtnNormImage.Width Then sW = dw - sx
                    If dH > PetAddIntBtnNormImage.Height Then sH = dH - sy
                ElseIf PetAddIntBtnHoverImage.Texture > 0 Then
                    If dw > PetAddIntBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetAddIntBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetAddIntBtnClickImage.Texture > 0 Then
                    If dw > PetAddIntBtnClickImage.Width Then sW = dw - sx
                    If dH > PetAddIntBtnClickImage.Height Then sH = dH - sy
                End If
                PetAddIntBtnBounds.Left = dX
                PetAddIntBtnBounds.Right = dw
                PetAddIntBtnBounds.Top = dY
                PetAddIntBtnBounds.Bottom = dH
                PetAddIntBtnSrcBounds.Left = sx
                PetAddIntBtnSrcBounds.Right = sW
                PetAddIntBtnSrcBounds.Top = sy
                PetAddIntBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetAddagiBtn Button
        dX = PetAddAgiBtnX
        dY = PetAddAgiBtnY
        dw = PetAddAgiBtnWidth
        dH = PetAddAgiBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetAddAgiBtnNormImage.Texture > 0 Then
                    If dw > PetAddAgiBtnNormImage.Width Then sW = dw - sx
                    If dH > PetAddAgiBtnNormImage.Height Then sH = dH - sy
                ElseIf PetAddAgiBtnHoverImage.Texture > 0 Then
                    If dw > PetAddAgiBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetAddAgiBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetAddAgiBtnClickImage.Texture > 0 Then
                    If dw > PetAddAgiBtnClickImage.Width Then sW = dw - sx
                    If dH > PetAddAgiBtnClickImage.Height Then sH = dH - sy
                End If
                PetAddAgiBtnBounds.Left = dX
                PetAddAgiBtnBounds.Right = dw
                PetAddAgiBtnBounds.Top = dY
                PetAddAgiBtnBounds.Bottom = dH
                PetAddAgiBtnSrcBounds.Left = sx
                PetAddAgiBtnSrcBounds.Right = sW
                PetAddAgiBtnSrcBounds.Top = sy
                PetAddAgiBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetAddWillBtn Button
        dX = PetAddWillBtnX
        dY = PetAddWillBtnY
        dw = PetAddWillBtnWidth
        dH = PetAddWillBtnHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                sW = dw
                sH = dH
                If PetAddWillBtnNormImage.Texture > 0 Then
                    If dw > PetAddWillBtnNormImage.Width Then sW = dw - sx
                    If dH > PetAddWillBtnNormImage.Height Then sH = dH - sy
                ElseIf PetAddWillBtnHoverImage.Texture > 0 Then
                    If dw > PetAddWillBtnHoverImage.Width Then sW = dw - sx
                    If dH > PetAddWillBtnHoverImage.Height Then sH = dH - sy
                ElseIf PetAddWillBtnClickImage.Texture > 0 Then
                    If dw > PetAddWillBtnClickImage.Width Then sW = dw - sx
                    If dH > PetAddWillBtnClickImage.Height Then sH = dH - sy
                End If
                PetAddWillBtnBounds.Left = dX
                PetAddWillBtnBounds.Right = dw
                PetAddWillBtnBounds.Top = dY
                PetAddWillBtnBounds.Bottom = dH
                PetAddWillBtnSrcBounds.Left = sx
                PetAddWillBtnSrcBounds.Right = sW
                PetAddWillBtnSrcBounds.Top = sy
                PetAddWillBtnSrcBounds.Bottom = sH
            End If
            sx = 0
            sy = 0
        End If
        
        'PetSpell1Panel
        dX = PetSpell1PanelX
        dY = PetSpell1PanelY
        dw = PetSpell1PanelWidth
        dH = PetSpell1PanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell1PanelBounds.Left = dX
                PetSpell1PanelBounds.Right = dw
                PetSpell1PanelBounds.Top = dY
                PetSpell1PanelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell2Panel
        dX = PetSpell2PanelX
        dY = PetSpell2PanelY
        dw = PetSpell2PanelWidth
        dH = PetSpell2PanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell2PanelBounds.Left = dX
                PetSpell2PanelBounds.Right = dw
                PetSpell2PanelBounds.Top = dY
                PetSpell2PanelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell3Panel
        dX = PetSpell3PanelX
        dY = PetSpell3PanelY
        dw = PetSpell3PanelWidth
        dH = PetSpell3PanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell3PanelBounds.Left = dX
                PetSpell3PanelBounds.Right = dw
                PetSpell3PanelBounds.Top = dY
                PetSpell3PanelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell4Panel
        dX = PetSpell4PanelX
        dY = PetSpell4PanelY
        dw = PetSpell4PanelWidth
        dH = PetSpell4PanelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell4PanelBounds.Left = dX
                PetSpell4PanelBounds.Right = dw
                PetSpell4PanelBounds.Top = dY
                PetSpell4PanelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell1Label
        dX = PetSpell1LabelX
        dY = PetSpell1LabelY
        dw = PetSpell1LabelWidth
        dH = PetSpell1LabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell1LabelBounds.Left = dX
                PetSpell1LabelBounds.Right = dw
                PetSpell1LabelBounds.Top = dY
                PetSpell1LabelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell2Label
        dX = PetSpell2LabelX
        dY = PetSpell2LabelY
        dw = PetSpell2LabelWidth
        dH = PetSpell2LabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell2LabelBounds.Left = dX
                PetSpell2LabelBounds.Right = dw
                PetSpell2LabelBounds.Top = dY
                PetSpell2LabelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell3Label
        dX = PetSpell3LabelX
        dY = PetSpell3LabelY
        dw = PetSpell3LabelWidth
        dH = PetSpell3LabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell3LabelBounds.Left = dX
                PetSpell3LabelBounds.Right = dw
                PetSpell3LabelBounds.Top = dY
                PetSpell3LabelBounds.Bottom = dH
            End If
        End If
        
        'PetSpell4Label
        dX = PetSpell4LabelX
        dY = PetSpell4LabelY
        dw = PetSpell4LabelWidth
        dH = PetSpell4LabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetSpell4LabelBounds.Left = dX
                PetSpell4LabelBounds.Right = dw
                PetSpell4LabelBounds.Top = dY
                PetSpell4LabelBounds.Bottom = dH
            End If
        End If
        
        'PetReleaseLabel
        dX = PetReleaseLabelX
        dY = PetReleaseLabelY
        dw = PetReleaseLabelWidth
        dH = PetReleaseLabelHeight
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dX < PetPanelBounds.Right And dY < PetPanelBounds.Bottom Then
                If dX + dw > PetPanelBounds.Right Then
                    dw = dw - ((dX + dw) - PetPanelBounds.Right)
                End If
                If dY + dH > PetPanelBounds.Bottom Then
                    dH = dH - ((dY + dH) - PetPanelBounds.Bottom)
                End If
                If dX < 0 Then
                    sx = dX * -1
                    dw = dw + dX
                    dX = dX + sx
                End If
                If dY < 0 Then
                    sy = dY * -1
                    dH = dH + dY
                    dY = dY + sy
                End If
                dX = dX + PetPanelBounds.Left
                dY = dY + PetPanelBounds.Top
                PetReleaseLabelBounds.Left = dX
                PetReleaseLabelBounds.Right = dw
                PetReleaseLabelBounds.Top = dY
                PetReleaseLabelBounds.Bottom = dH
            End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "CacheInterfaceBounds3", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Sub DrawMenu()

   On Error GoTo errorhandler

    If MenuImage.Texture > 0 Then
        RenderTexture MenuImage, 0, 0, 0, 0, MenuWidth, MenuHeight, MenuImage.Width, MenuImage.Height
    End If
    DrawGUIContainer


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawMenu", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawGUIContainer()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long

   On Error GoTo errorhandler

    If GUIContainerWidth > 0 And GUIContainerHeight > 0 Then
        If GUIContainerImage.Texture > 0 Then
            RenderTexture GUIContainerImage, GUIContainerX, GUIContainerY, 0, 0, GUIContainerImage.Width, GUIContainerImage.Height, GUIContainerImage.Width, GUIContainerImage.Height
        End If
            'Open Login
        dX = OpenLoginBounds.Left
        dY = OpenLoginBounds.Top
        dw = OpenLoginBounds.Right
        dH = OpenLoginBounds.Bottom
        sx = OpenLoginSrcBounds.Left
        sy = OpenLoginSrcBounds.Top
        sW = OpenLoginSrcBounds.Right
        sH = OpenLoginSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If OpenLoginState <> 2 Then
                        If OpenLoginHoverImage.Texture > 0 Then
                            RenderTexture OpenLoginHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenLoginClickImage.Texture > 0 Then
                            RenderTexture OpenLoginClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If OpenLoginState = 2 Then
                        If OpenLoginClickImage.Texture > 0 Then
                            RenderTexture OpenLoginClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenLoginNormImage.Texture > 0 Then
                            RenderTexture OpenLoginNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If OpenLoginState = 2 Then
                    If OpenLoginClickImage.Texture > 0 Then
                        RenderTexture OpenLoginClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If OpenLoginNormImage.Texture > 0 Then
                        RenderTexture OpenLoginNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'Open Register
        dX = OpenRegisterBounds.Left
        dY = OpenRegisterBounds.Top
        dw = OpenRegisterBounds.Right
        dH = OpenRegisterBounds.Bottom
        sx = OpenRegisterSrcBounds.Left
        sy = OpenRegisterSrcBounds.Top
        sW = OpenRegisterSrcBounds.Right
        sH = OpenRegisterSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If OpenRegisterState <> 2 Then
                        If OpenRegisterHoverImage.Texture > 0 Then
                            RenderTexture OpenRegisterHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenRegisterClickImage.Texture > 0 Then
                            RenderTexture OpenRegisterClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If OpenRegisterState = 2 Then
                        If OpenRegisterClickImage.Texture > 0 Then
                            RenderTexture OpenRegisterClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenRegisterNormImage.Texture > 0 Then
                            RenderTexture OpenRegisterNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If OpenRegisterState = 2 Then
                    If OpenRegisterClickImage.Texture > 0 Then
                        RenderTexture OpenRegisterClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If OpenRegisterNormImage.Texture > 0 Then
                        RenderTexture OpenRegisterNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'Open Credits
        dX = OpenCreditsBounds.Left
        dY = OpenCreditsBounds.Top
        dw = OpenCreditsBounds.Right
        dH = OpenCreditsBounds.Bottom
        sx = OpenCreditsSrcBounds.Left
        sy = OpenCreditsSrcBounds.Top
        sW = OpenCreditsSrcBounds.Right
        sH = OpenCreditsSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If OpenCreditsState <> 2 Then
                        If OpenCreditsHoverImage.Texture > 0 Then
                            RenderTexture OpenCreditsHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenCreditsClickImage.Texture > 0 Then
                            RenderTexture OpenCreditsClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If OpenCreditsState = 2 Then
                        If OpenCreditsClickImage.Texture > 0 Then
                            RenderTexture OpenCreditsClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OpenCreditsNormImage.Texture > 0 Then
                            RenderTexture OpenCreditsNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If OpenCreditsState = 2 Then
                    If OpenCreditsClickImage.Texture > 0 Then
                        RenderTexture OpenCreditsClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If OpenCreditsNormImage.Texture > 0 Then
                        RenderTexture OpenCreditsNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'Exit Game
        dX = ExitGameBounds.Left
        dY = ExitGameBounds.Top
        dw = ExitGameBounds.Right
        dH = ExitGameBounds.Bottom
        sx = ExitGameSrcBounds.Left
        sy = ExitGameSrcBounds.Top
        sW = ExitGameSrcBounds.Right
        sH = ExitGameSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If ExitGameState <> 2 Then
                        If ExitGameHoverImage.Texture > 0 Then
                            RenderTexture ExitGameHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ExitGameClickImage.Texture > 0 Then
                            RenderTexture ExitGameClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If ExitGameState = 2 Then
                        If ExitGameClickImage.Texture > 0 Then
                            RenderTexture ExitGameClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ExitGameNormImage.Texture > 0 Then
                            RenderTexture ExitGameNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If ExitGameState = 2 Then
                    If ExitGameClickImage.Texture > 0 Then
                        RenderTexture ExitGameClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If ExitGameNormImage.Texture > 0 Then
                        RenderTexture ExitGameNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
                                Select Case MenuStage
            Case 0 'News
                DrawNewsPanel GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
            Case 1
                DrawLogin GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
            Case 2
                DrawRegister GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
            Case 3
                DrawCreditsPanel GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
            Case 4
                DrawSelChar GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
            Case 5
                DrawNewCharPanel GUIContainerX, GUIContainerY, GUIContainerWidth, GUIContainerHeight
        End Select
                                End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawGUIContainer", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
    End Sub

Sub DrawNewsPanel(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim NewsText As String, a() As String, i As Long
    'News Panel

   On Error GoTo errorhandler

    dX = NewsPanelBounds.Left
    dY = NewsPanelBounds.Top
    dw = NewsPanelBounds.Right
    dH = NewsPanelBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        NewsText = WordWrap(News, dw - 4)
        NewsText = LimitTextLines(NewsText, Fix(dH / 14), 0)
        a = Split(NewsText, vbNewLine)
        If UBound(a) > 0 Then
            For i = 0 To UBound(a)
                RenderText Font_Georgia, a(i), dX + (dw / 2) - (EngineGetTextWidth(Font_Georgia, a(i)) / 2), dY + i * 12, FontColor
            Next
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawNewsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawCreditsPanel(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim CreditsText As String, a() As String, i As Long
    'Credits Panel

   On Error GoTo errorhandler

    dX = CreditsPanelBounds.Left
    dY = CreditsPanelBounds.Top
    dw = CreditsPanelBounds.Right
    dH = CreditsPanelBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        CreditsText = WordWrap(Credits, dw - 4)
        CreditsText = LimitTextLines(CreditsText, Fix(dH / 14), 0)
        a = Split(CreditsText, vbNewLine)
        If UBound(a) > 0 Then
            For i = 0 To UBound(a)
                RenderText Font_Georgia, a(i), dX + (dw / 2) - (EngineGetTextWidth(Font_Georgia, a(i)) / 2), dY + i * 12, FontColor
            Next
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawCreditsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawLogin(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    'Login Panel

   On Error GoTo errorhandler

    dX = LoginPanelBounds.Left
    dY = LoginPanelBounds.Top
    dw = LoginPanelBounds.Right
    dH = LoginPanelBounds.Bottom
    sx = LoginPanelSrcBounds.Left
    sy = LoginPanelSrcBounds.Top
    sW = LoginPanelSrcBounds.Right
    sH = LoginPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If LoginPanelImage.Texture > 0 Then
            RenderTexture LoginPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Need to draw 2 text boxes and the login button :/
        dX = LUsernameBounds.Left
        dY = LUsernameBounds.Top
        dw = LUsernameBounds.Right
        dH = LUsernameBounds.Bottom
        sx = LUsernameSrcBounds.Left
        sy = LUsernameSrcBounds.Top
        sW = LUsernameSrcBounds.Right
        sH = LUsernameSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If LUsernameImage.Texture > 0 Then
                RenderTexture LUsernameImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
            'Do Text Stuff Here
            If SelTextbox = 1 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername, dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
            dX = LPasswordBounds.Left
        dY = LPasswordBounds.Top
        dw = LPasswordBounds.Right
        dH = LPasswordBounds.Bottom
        sx = LPasswordSrcBounds.Left
        sy = LPasswordSrcBounds.Top
        sW = LPasswordSrcBounds.Right
        sH = LPasswordSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If LPasswordImage.Texture > 0 Then
                RenderTexture LPasswordImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
                    'Do Text Stuff Here
            If SelTextbox = 2 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(txtPassword)) & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(txtPassword)), dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
        'SaveInfoCheck Button
        dX = SaveInfoCheckBounds.Left
        dY = SaveInfoCheckBounds.Top
        dw = SaveInfoCheckBounds.Right
        dH = SaveInfoCheckBounds.Bottom
        sx = SaveInfoCheckSrcBounds.Left
        sy = SaveInfoCheckSrcBounds.Top
        sW = SaveInfoCheckSrcBounds.Right
        sH = SaveInfoCheckSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If Servers(ServerIndex).SavePass = 1 Then
                If SaveInfoCheckClickImage.Texture > 0 Then
                    RenderTexture SaveInfoCheckClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            Else
                If SaveInfoCheckNormImage.Texture > 0 Then
                    RenderTexture SaveInfoCheckNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            End If
        End If
            'Login Button
        dX = LoginButtonBounds.Left
        dY = LoginButtonBounds.Top
        dw = LoginButtonBounds.Right
        dH = LoginButtonBounds.Bottom
        sx = LoginButtonSrcBounds.Left
        sy = LoginButtonSrcBounds.Top
        sW = LoginButtonSrcBounds.Right
        sH = LoginButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If LoginButtonState <> 2 Then
                        If LoginButtonHoverImage.Texture > 0 Then
                            RenderTexture LoginButtonHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If LoginButtonClickImage.Texture > 0 Then
                            RenderTexture LoginButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If LoginButtonState = 2 Then
                        If LoginButtonClickImage.Texture > 0 Then
                            RenderTexture LoginButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If LoginButtonNormImage.Texture > 0 Then
                            RenderTexture LoginButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If LoginButtonState = 2 Then
                    If LoginButtonClickImage.Texture > 0 Then
                        RenderTexture LoginButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If LoginButtonNormImage.Texture > 0 Then
                        RenderTexture LoginButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawLogin", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawRegister(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    'Register Panel

   On Error GoTo errorhandler

    dX = RegisterPanelBounds.Left
    dY = RegisterPanelBounds.Top
    dw = RegisterPanelBounds.Right
    dH = RegisterPanelBounds.Bottom
    sx = RegisterPanelSrcBounds.Left
    sy = RegisterPanelSrcBounds.Top
    sW = RegisterPanelSrcBounds.Right
    sH = RegisterPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If RegisterPanelImage.Texture > 0 Then
            RenderTexture RegisterPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Need to draw 2 text boxes and the Register button :/
        dX = RUsernameBounds.Left
        dY = RUsernameBounds.Top
        dw = RUsernameBounds.Right
        dH = RUsernameBounds.Bottom
        sx = RUsernameSrcBounds.Left
        sy = RUsernameSrcBounds.Top
        sW = RUsernameSrcBounds.Right
        sH = RUsernameSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If RUsernameImage.Texture > 0 Then
                RenderTexture RUsernameImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
            'Do Text Stuff Here
            If SelTextbox = 1 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername, dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
            dX = RPasswordBounds.Left
        dY = RPasswordBounds.Top
        dw = RPasswordBounds.Right
        dH = RPasswordBounds.Bottom
        sx = RPasswordSrcBounds.Left
        sy = RPasswordSrcBounds.Top
        sW = RPasswordSrcBounds.Right
        sH = RPasswordSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If RPasswordImage.Texture > 0 Then
                RenderTexture RPasswordImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
                    'Do Text Stuff Here
            If SelTextbox = 2 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(txtPassword)) & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(txtPassword)), dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
            dX = RPassword2Bounds.Left
        dY = RPassword2Bounds.Top
        dw = RPassword2Bounds.Right
        dH = RPassword2Bounds.Bottom
        sx = RPassword2SrcBounds.Left
        sy = RPassword2SrcBounds.Top
        sW = RPassword2SrcBounds.Right
        sH = RPassword2SrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If RPassword2Image.Texture > 0 Then
                RenderTexture RPassword2Image, dX, dY, sx, sy, dw, sH, sW, sH
            End If
                    'Do Text Stuff Here
            If SelTextbox = 3 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(TxtPassword2)) & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, Starz(Len(TxtPassword2)), dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
            'Register Button
        dX = RegisterButtonBounds.Left
        dY = RegisterButtonBounds.Top
        dw = RegisterButtonBounds.Right
        dH = RegisterButtonBounds.Bottom
        sx = RegisterButtonSrcBounds.Left
        sy = RegisterButtonSrcBounds.Top
        sW = RegisterButtonSrcBounds.Right
        sH = RegisterButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If RegisterButtonState <> 2 Then
                        If RegisterButtonHoverImage.Texture > 0 Then
                            RenderTexture RegisterButtonHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If RegisterButtonClickImage.Texture > 0 Then
                            RenderTexture RegisterButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If RegisterButtonState = 2 Then
                        If RegisterButtonClickImage.Texture > 0 Then
                            RenderTexture RegisterButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If RegisterButtonNormImage.Texture > 0 Then
                            RenderTexture RegisterButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If RegisterButtonState = 2 Then
                    If RegisterButtonClickImage.Texture > 0 Then
                        RenderTexture RegisterButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If RegisterButtonNormImage.Texture > 0 Then
                        RenderTexture RegisterButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawRegister", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawNewCharPanel(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long, CName As String
    'NewChar Panel

   On Error GoTo errorhandler

    dX = NewCharPanelBounds.Left
    dY = NewCharPanelBounds.Top
    dw = NewCharPanelBounds.Right
    dH = NewCharPanelBounds.Bottom
    sx = NewCharPanelSrcBounds.Left
    sy = NewCharPanelSrcBounds.Top
    sW = NewCharPanelSrcBounds.Right
    sH = NewCharPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If NewCharPanelImage.Texture > 0 Then
            RenderTexture NewCharPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Need to draw char name textbox
        dX = NCTextboxBounds.Left
        dY = NCTextboxBounds.Top
        dw = NCTextboxBounds.Right
        dH = NCTextboxBounds.Bottom
        sx = NCTextboxSrcBounds.Left
        sy = NCTextboxSrcBounds.Top
        sW = NCTextboxSrcBounds.Right
        sH = NCTextboxSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If NCTextboxImage.Texture > 0 Then
                RenderTexture NCTextboxImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
            'Do Text Stuff Here
            If SelTextbox = 1 Then
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername & chatShowLine, dw - 8), dX + 4, dY + 2, FontColor
            Else
                RenderText Font_Georgia, LimitText(Font_Georgia, TxtUsername, dw - 8), dX + 4, dY + 2, FontColor
            End If
        End If
            If newCharClass > 0 And newCharClass <= Max_Classes Then
            'Class Name
            dX = NCClassNameBounds.Left
            dY = NCClassNameBounds.Top
            dw = NCClassNameBounds.Right
            dH = NCClassNameBounds.Bottom
            If dw > 0 And dH > 10 Then
                CName = Trim$(Class(newCharClass).Name)
                If EngineGetTextWidth(Font_Georgia, CName) > dw Then
                                Else
                    dw = (dw / 2) - (EngineGetTextWidth(Font_Georgia, CName) / 2)
                    dX = dX + dw
                    RenderText Font_Georgia, CName, dX, dY, FontColor
                End If
            End If
        End If
            'PrevClass Button
        dX = PrevClassBounds.Left
        dY = PrevClassBounds.Top
        dw = PrevClassBounds.Right
        dH = PrevClassBounds.Bottom
        sx = PrevClassSrcBounds.Left
        sy = PrevClassSrcBounds.Top
        sW = PrevClassSrcBounds.Right
        sH = PrevClassSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PrevClassState <> 2 Then
                        If PrevClassHoverImage.Texture > 0 Then
                            RenderTexture PrevClassHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevClassClickImage.Texture > 0 Then
                            RenderTexture PrevClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PrevClassState = 2 Then
                        If PrevClassClickImage.Texture > 0 Then
                            RenderTexture PrevClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevClassNormImage.Texture > 0 Then
                            RenderTexture PrevClassNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PrevClassState = 2 Then
                    If PrevClassClickImage.Texture > 0 Then
                        RenderTexture PrevClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PrevClassNormImage.Texture > 0 Then
                        RenderTexture PrevClassNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
                'NextClass Button
        dX = NextClassBounds.Left
        dY = NextClassBounds.Top
        dw = NextClassBounds.Right
        dH = NextClassBounds.Bottom
        sx = NextClassSrcBounds.Left
        sy = NextClassSrcBounds.Top
        sW = NextClassSrcBounds.Right
        sH = NextClassSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If NextClassState <> 2 Then
                        If NextClassHoverImage.Texture > 0 Then
                            RenderTexture NextClassHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextClassClickImage.Texture > 0 Then
                            RenderTexture NextClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If NextClassState = 2 Then
                        If NextClassClickImage.Texture > 0 Then
                            RenderTexture NextClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextClassNormImage.Texture > 0 Then
                            RenderTexture NextClassNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If NextClassState = 2 Then
                    If NextClassClickImage.Texture > 0 Then
                        RenderTexture NextClassClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If NextClassNormImage.Texture > 0 Then
                        RenderTexture NextClassNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'MaleButton Button
        dX = MaleButtonBounds.Left
        dY = MaleButtonBounds.Top
        dw = MaleButtonBounds.Right
        dH = MaleButtonBounds.Bottom
        sx = MaleButtonSrcBounds.Left
        sy = MaleButtonSrcBounds.Top
        sW = MaleButtonSrcBounds.Right
        sH = MaleButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If NewCharSex = SEX_MALE Then
                If MaleButtonClickImage.Texture > 0 Then
                    RenderTexture MaleButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            Else
                If MaleButtonNormImage.Texture > 0 Then
                    RenderTexture MaleButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            End If
        End If
            'FemaleButton Button
        dX = FemaleButtonBounds.Left
        dY = FemaleButtonBounds.Top
        dw = FemaleButtonBounds.Right
        dH = FemaleButtonBounds.Bottom
        sx = FemaleButtonSrcBounds.Left
        sy = FemaleButtonSrcBounds.Top
        sW = FemaleButtonSrcBounds.Right
        sH = FemaleButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If NewCharSex = SEX_FEMALE Then
                If FemaleButtonClickImage.Texture > 0 Then
                    RenderTexture FemaleButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            Else
                If FemaleButtonNormImage.Texture > 0 Then
                    RenderTexture FemaleButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                End If
            End If
        End If
                'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        NewCharacterDrawSprite
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        'CharPreview
        If CharMode = 1 Then
                'NextHair Button
            dX = NextHairBounds.Left
            dY = NextHairBounds.Top
            dw = NextHairBounds.Right
            dH = NextHairBounds.Bottom
            sx = NextHairSrcBounds.Left
            sy = NextHairSrcBounds.Top
            sW = NextHairSrcBounds.Right
            sH = NextHairSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextHairState <> 2 Then
                            If NextHairHoverImage.Texture > 0 Then
                                RenderTexture NextHairHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextHairClickImage.Texture > 0 Then
                                RenderTexture NextHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextHairState = 2 Then
                            If NextHairClickImage.Texture > 0 Then
                                RenderTexture NextHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextHairNormImage.Texture > 0 Then
                                RenderTexture NextHairNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextHairState = 2 Then
                        If NextHairClickImage.Texture > 0 Then
                            RenderTexture NextHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextHairNormImage.Texture > 0 Then
                            RenderTexture NextHairNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'NextHead Button
        dX = NextHeadBounds.Left
        dY = NextHeadBounds.Top
        dw = NextHeadBounds.Right
        dH = NextHeadBounds.Bottom
        sx = NextHeadSrcBounds.Left
        sy = NextHeadSrcBounds.Top
        sW = NextHeadSrcBounds.Right
        sH = NextHeadSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If NextHeadState <> 2 Then
                        If NextHeadHoverImage.Texture > 0 Then
                            RenderTexture NextHeadHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextHeadClickImage.Texture > 0 Then
                            RenderTexture NextHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If NextHeadState = 2 Then
                        If NextHeadClickImage.Texture > 0 Then
                            RenderTexture NextHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextHeadNormImage.Texture > 0 Then
                            RenderTexture NextHeadNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If NextHeadState = 2 Then
                    If NextHeadClickImage.Texture > 0 Then
                        RenderTexture NextHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If NextHeadNormImage.Texture > 0 Then
                        RenderTexture NextHeadNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        If CharMode = 1 Then
                'NextEye Button
            dX = NextEyeBounds.Left
            dY = NextEyeBounds.Top
            dw = NextEyeBounds.Right
            dH = NextEyeBounds.Bottom
            sx = NextEyeSrcBounds.Left
            sy = NextEyeSrcBounds.Top
            sW = NextEyeSrcBounds.Right
            sH = NextEyeSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextEyeState <> 2 Then
                            If NextEyeHoverImage.Texture > 0 Then
                                RenderTexture NextEyeHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEyeClickImage.Texture > 0 Then
                                RenderTexture NextEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextEyeState = 2 Then
                            If NextEyeClickImage.Texture > 0 Then
                                RenderTexture NextEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEyeNormImage.Texture > 0 Then
                                RenderTexture NextEyeNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextEyeState = 2 Then
                        If NextEyeClickImage.Texture > 0 Then
                            RenderTexture NextEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextEyeNormImage.Texture > 0 Then
                            RenderTexture NextEyeNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextEyebrow Button
            dX = NextEyebrowBounds.Left
            dY = NextEyebrowBounds.Top
            dw = NextEyebrowBounds.Right
            dH = NextEyebrowBounds.Bottom
            sx = NextEyebrowSrcBounds.Left
            sy = NextEyebrowSrcBounds.Top
            sW = NextEyebrowSrcBounds.Right
            sH = NextEyebrowSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextEyebrowState <> 2 Then
                            If NextEyebrowHoverImage.Texture > 0 Then
                                RenderTexture NextEyebrowHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEyebrowClickImage.Texture > 0 Then
                                RenderTexture NextEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextEyebrowState = 2 Then
                            If NextEyebrowClickImage.Texture > 0 Then
                                RenderTexture NextEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEyebrowNormImage.Texture > 0 Then
                                RenderTexture NextEyebrowNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextEyebrowState = 2 Then
                        If NextEyebrowClickImage.Texture > 0 Then
                            RenderTexture NextEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextEyebrowNormImage.Texture > 0 Then
                            RenderTexture NextEyebrowNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextEar Button
            dX = NextEarBounds.Left
            dY = NextEarBounds.Top
            dw = NextEarBounds.Right
            dH = NextEarBounds.Bottom
            sx = NextEarSrcBounds.Left
            sy = NextEarSrcBounds.Top
            sW = NextEarSrcBounds.Right
            sH = NextEarSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextEarState <> 2 Then
                            If NextEarHoverImage.Texture > 0 Then
                                RenderTexture NextEarHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEarClickImage.Texture > 0 Then
                                RenderTexture NextEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextEarState = 2 Then
                            If NextEarClickImage.Texture > 0 Then
                                RenderTexture NextEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextEarNormImage.Texture > 0 Then
                                RenderTexture NextEarNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextEarState = 2 Then
                        If NextEarClickImage.Texture > 0 Then
                            RenderTexture NextEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextEarNormImage.Texture > 0 Then
                            RenderTexture NextEarNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextMouth Button
            dX = NextMouthBounds.Left
            dY = NextMouthBounds.Top
            dw = NextMouthBounds.Right
            dH = NextMouthBounds.Bottom
            sx = NextMouthSrcBounds.Left
            sy = NextMouthSrcBounds.Top
            sW = NextMouthSrcBounds.Right
            sH = NextMouthSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextMouthState <> 2 Then
                            If NextMouthHoverImage.Texture > 0 Then
                                RenderTexture NextMouthHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextMouthClickImage.Texture > 0 Then
                                RenderTexture NextMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextMouthState = 2 Then
                            If NextMouthClickImage.Texture > 0 Then
                                RenderTexture NextMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextMouthNormImage.Texture > 0 Then
                                RenderTexture NextMouthNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextMouthState = 2 Then
                        If NextMouthClickImage.Texture > 0 Then
                            RenderTexture NextMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextMouthNormImage.Texture > 0 Then
                            RenderTexture NextMouthNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextNose Button
            dX = NextNoseBounds.Left
            dY = NextNoseBounds.Top
            dw = NextNoseBounds.Right
            dH = NextNoseBounds.Bottom
            sx = NextNoseSrcBounds.Left
            sy = NextNoseSrcBounds.Top
            sW = NextNoseSrcBounds.Right
            sH = NextNoseSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextNoseState <> 2 Then
                            If NextNoseHoverImage.Texture > 0 Then
                                RenderTexture NextNoseHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextNoseClickImage.Texture > 0 Then
                                RenderTexture NextNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextNoseState = 2 Then
                            If NextNoseClickImage.Texture > 0 Then
                                RenderTexture NextNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextNoseNormImage.Texture > 0 Then
                                RenderTexture NextNoseNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextNoseState = 2 Then
                        If NextNoseClickImage.Texture > 0 Then
                            RenderTexture NextNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextNoseNormImage.Texture > 0 Then
                            RenderTexture NextNoseNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextShirt Button
            dX = NextShirtBounds.Left
            dY = NextShirtBounds.Top
            dw = NextShirtBounds.Right
            dH = NextShirtBounds.Bottom
            sx = NextShirtSrcBounds.Left
            sy = NextShirtSrcBounds.Top
            sW = NextShirtSrcBounds.Right
            sH = NextShirtSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextShirtState <> 2 Then
                            If NextShirtHoverImage.Texture > 0 Then
                                RenderTexture NextShirtHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextShirtClickImage.Texture > 0 Then
                                RenderTexture NextShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextShirtState = 2 Then
                            If NextShirtClickImage.Texture > 0 Then
                                RenderTexture NextShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextShirtNormImage.Texture > 0 Then
                                RenderTexture NextShirtNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextShirtState = 2 Then
                        If NextShirtClickImage.Texture > 0 Then
                            RenderTexture NextShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextShirtNormImage.Texture > 0 Then
                            RenderTexture NextShirtNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'NextExtra Button
            dX = NextExtraBounds.Left
            dY = NextExtraBounds.Top
            dw = NextExtraBounds.Right
            dH = NextExtraBounds.Bottom
            sx = NextExtraSrcBounds.Left
            sy = NextExtraSrcBounds.Top
            sW = NextExtraSrcBounds.Right
            sH = NextExtraSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If NextExtraState <> 2 Then
                            If NextExtraHoverImage.Texture > 0 Then
                                RenderTexture NextExtraHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextExtraClickImage.Texture > 0 Then
                                RenderTexture NextExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If NextExtraState = 2 Then
                            If NextExtraClickImage.Texture > 0 Then
                                RenderTexture NextExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If NextExtraNormImage.Texture > 0 Then
                                RenderTexture NextExtraNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If NextExtraState = 2 Then
                        If NextExtraClickImage.Texture > 0 Then
                            RenderTexture NextExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextExtraNormImage.Texture > 0 Then
                            RenderTexture NextExtraNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevHair Button
            dX = PrevHairBounds.Left
            dY = PrevHairBounds.Top
            dw = PrevHairBounds.Right
            dH = PrevHairBounds.Bottom
            sx = PrevHairSrcBounds.Left
            sy = PrevHairSrcBounds.Top
            sW = PrevHairSrcBounds.Right
            sH = PrevHairSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevHairState <> 2 Then
                            If PrevHairHoverImage.Texture > 0 Then
                                RenderTexture PrevHairHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevHairClickImage.Texture > 0 Then
                                RenderTexture PrevHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevHairState = 2 Then
                            If PrevHairClickImage.Texture > 0 Then
                                RenderTexture PrevHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevHairNormImage.Texture > 0 Then
                                RenderTexture PrevHairNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevHairState = 2 Then
                        If PrevHairClickImage.Texture > 0 Then
                            RenderTexture PrevHairClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevHairNormImage.Texture > 0 Then
                            RenderTexture PrevHairNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
        
            'PrevHead Button
        dX = PrevHeadBounds.Left
        dY = PrevHeadBounds.Top
        dw = PrevHeadBounds.Right
        dH = PrevHeadBounds.Bottom
        sx = PrevHeadSrcBounds.Left
        sy = PrevHeadSrcBounds.Top
        sW = PrevHeadSrcBounds.Right
        sH = PrevHeadSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PrevHeadState <> 2 Then
                        If PrevHeadHoverImage.Texture > 0 Then
                            RenderTexture PrevHeadHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevHeadClickImage.Texture > 0 Then
                            RenderTexture PrevHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PrevHeadState = 2 Then
                        If PrevHeadClickImage.Texture > 0 Then
                            RenderTexture PrevHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevHeadNormImage.Texture > 0 Then
                            RenderTexture PrevHeadNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PrevHeadState = 2 Then
                    If PrevHeadClickImage.Texture > 0 Then
                        RenderTexture PrevHeadClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PrevHeadNormImage.Texture > 0 Then
                        RenderTexture PrevHeadNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        
        If CharMode = 1 Then
                'PrevEye Button
            dX = PrevEyeBounds.Left
            dY = PrevEyeBounds.Top
            dw = PrevEyeBounds.Right
            dH = PrevEyeBounds.Bottom
            sx = PrevEyeSrcBounds.Left
            sy = PrevEyeSrcBounds.Top
            sW = PrevEyeSrcBounds.Right
            sH = PrevEyeSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevEyeState <> 2 Then
                            If PrevEyeHoverImage.Texture > 0 Then
                                RenderTexture PrevEyeHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEyeClickImage.Texture > 0 Then
                                RenderTexture PrevEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevEyeState = 2 Then
                            If PrevEyeClickImage.Texture > 0 Then
                                RenderTexture PrevEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEyeNormImage.Texture > 0 Then
                                RenderTexture PrevEyeNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevEyeState = 2 Then
                        If PrevEyeClickImage.Texture > 0 Then
                            RenderTexture PrevEyeClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevEyeNormImage.Texture > 0 Then
                            RenderTexture PrevEyeNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevEyebrow Button
            dX = PrevEyebrowBounds.Left
            dY = PrevEyebrowBounds.Top
            dw = PrevEyebrowBounds.Right
            dH = PrevEyebrowBounds.Bottom
            sx = PrevEyebrowSrcBounds.Left
            sy = PrevEyebrowSrcBounds.Top
            sW = PrevEyebrowSrcBounds.Right
            sH = PrevEyebrowSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevEyebrowState <> 2 Then
                            If PrevEyebrowHoverImage.Texture > 0 Then
                                RenderTexture PrevEyebrowHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEyebrowClickImage.Texture > 0 Then
                                RenderTexture PrevEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevEyebrowState = 2 Then
                            If PrevEyebrowClickImage.Texture > 0 Then
                                RenderTexture PrevEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEyebrowNormImage.Texture > 0 Then
                                RenderTexture PrevEyebrowNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevEyebrowState = 2 Then
                        If PrevEyebrowClickImage.Texture > 0 Then
                            RenderTexture PrevEyebrowClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevEyebrowNormImage.Texture > 0 Then
                            RenderTexture PrevEyebrowNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevEar Button
            dX = PrevEarBounds.Left
            dY = PrevEarBounds.Top
            dw = PrevEarBounds.Right
            dH = PrevEarBounds.Bottom
            sx = PrevEarSrcBounds.Left
            sy = PrevEarSrcBounds.Top
            sW = PrevEarSrcBounds.Right
            sH = PrevEarSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevEarState <> 2 Then
                            If PrevEarHoverImage.Texture > 0 Then
                                RenderTexture PrevEarHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEarClickImage.Texture > 0 Then
                                RenderTexture PrevEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevEarState = 2 Then
                            If PrevEarClickImage.Texture > 0 Then
                                RenderTexture PrevEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevEarNormImage.Texture > 0 Then
                                RenderTexture PrevEarNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevEarState = 2 Then
                        If PrevEarClickImage.Texture > 0 Then
                            RenderTexture PrevEarClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevEarNormImage.Texture > 0 Then
                            RenderTexture PrevEarNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevMouth Button
            dX = PrevMouthBounds.Left
            dY = PrevMouthBounds.Top
            dw = PrevMouthBounds.Right
            dH = PrevMouthBounds.Bottom
            sx = PrevMouthSrcBounds.Left
            sy = PrevMouthSrcBounds.Top
            sW = PrevMouthSrcBounds.Right
            sH = PrevMouthSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevMouthState <> 2 Then
                            If PrevMouthHoverImage.Texture > 0 Then
                                RenderTexture PrevMouthHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevMouthClickImage.Texture > 0 Then
                                RenderTexture PrevMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevMouthState = 2 Then
                            If PrevMouthClickImage.Texture > 0 Then
                                RenderTexture PrevMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevMouthNormImage.Texture > 0 Then
                                RenderTexture PrevMouthNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevMouthState = 2 Then
                        If PrevMouthClickImage.Texture > 0 Then
                            RenderTexture PrevMouthClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevMouthNormImage.Texture > 0 Then
                            RenderTexture PrevMouthNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevNose Button
            dX = PrevNoseBounds.Left
            dY = PrevNoseBounds.Top
            dw = PrevNoseBounds.Right
            dH = PrevNoseBounds.Bottom
            sx = PrevNoseSrcBounds.Left
            sy = PrevNoseSrcBounds.Top
            sW = PrevNoseSrcBounds.Right
            sH = PrevNoseSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevNoseState <> 2 Then
                            If PrevNoseHoverImage.Texture > 0 Then
                                RenderTexture PrevNoseHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevNoseClickImage.Texture > 0 Then
                                RenderTexture PrevNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevNoseState = 2 Then
                            If PrevNoseClickImage.Texture > 0 Then
                                RenderTexture PrevNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevNoseNormImage.Texture > 0 Then
                                RenderTexture PrevNoseNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevNoseState = 2 Then
                        If PrevNoseClickImage.Texture > 0 Then
                            RenderTexture PrevNoseClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevNoseNormImage.Texture > 0 Then
                            RenderTexture PrevNoseNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevShirt Button
            dX = PrevShirtBounds.Left
            dY = PrevShirtBounds.Top
            dw = PrevShirtBounds.Right
            dH = PrevShirtBounds.Bottom
            sx = PrevShirtSrcBounds.Left
            sy = PrevShirtSrcBounds.Top
            sW = PrevShirtSrcBounds.Right
            sH = PrevShirtSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevShirtState <> 2 Then
                            If PrevShirtHoverImage.Texture > 0 Then
                                RenderTexture PrevShirtHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevShirtClickImage.Texture > 0 Then
                                RenderTexture PrevShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevShirtState = 2 Then
                            If PrevShirtClickImage.Texture > 0 Then
                                RenderTexture PrevShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevShirtNormImage.Texture > 0 Then
                                RenderTexture PrevShirtNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevShirtState = 2 Then
                        If PrevShirtClickImage.Texture > 0 Then
                            RenderTexture PrevShirtClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevShirtNormImage.Texture > 0 Then
                            RenderTexture PrevShirtNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                'PrevExtra Button
            dX = PrevExtraBounds.Left
            dY = PrevExtraBounds.Top
            dw = PrevExtraBounds.Right
            dH = PrevExtraBounds.Bottom
            sx = PrevExtraSrcBounds.Left
            sy = PrevExtraSrcBounds.Top
            sW = PrevExtraSrcBounds.Right
            sH = PrevExtraSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PrevExtraState <> 2 Then
                            If PrevExtraHoverImage.Texture > 0 Then
                                RenderTexture PrevExtraHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevExtraClickImage.Texture > 0 Then
                                RenderTexture PrevExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PrevExtraState = 2 Then
                            If PrevExtraClickImage.Texture > 0 Then
                                RenderTexture PrevExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PrevExtraNormImage.Texture > 0 Then
                                RenderTexture PrevExtraNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PrevExtraState = 2 Then
                        If PrevExtraClickImage.Texture > 0 Then
                            RenderTexture PrevExtraClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PrevExtraNormImage.Texture > 0 Then
                            RenderTexture PrevExtraNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
        
            'NCAccept Button
        dX = NCAcceptBounds.Left
        dY = NCAcceptBounds.Top
        dw = NCAcceptBounds.Right
        dH = NCAcceptBounds.Bottom
        sx = NCAcceptSrcBounds.Left
        sy = NCAcceptSrcBounds.Top
        sW = NCAcceptSrcBounds.Right
        sH = NCAcceptSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If NCAcceptState <> 2 Then
                        If NCAcceptHoverImage.Texture > 0 Then
                            RenderTexture NCAcceptHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NCAcceptClickImage.Texture > 0 Then
                            RenderTexture NCAcceptClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If NCAcceptState = 2 Then
                        If NCAcceptClickImage.Texture > 0 Then
                            RenderTexture NCAcceptClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NCAcceptNormImage.Texture > 0 Then
                            RenderTexture NCAcceptNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If NCAcceptState = 2 Then
                    If NCAcceptClickImage.Texture > 0 Then
                        RenderTexture NCAcceptClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If NCAcceptNormImage.Texture > 0 Then
                        RenderTexture NCAcceptNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        Exit Sub
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawNewCharPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub


Sub DrawSelChar(bx As Long, by As Long, bw As Long, bh As Long)
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long, CName As String
    'Char Panel

   On Error GoTo errorhandler

    dX = CharPanelBounds.Left
    dY = CharPanelBounds.Top
    dw = CharPanelBounds.Right
    dH = CharPanelBounds.Bottom
    sx = CharPanelSrcBounds.Left
    sy = CharPanelSrcBounds.Top
    sW = CharPanelSrcBounds.Right
    sH = CharPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If CharPanelImage.Texture > 0 Then
            RenderTexture CharPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Char Name
        dX = CharNameBounds.Left
        dY = CharNameBounds.Top
        dw = CharNameBounds.Right
        dH = CharNameBounds.Bottom
        If dw > 0 And dH > 10 Then
            CName = CharSelection(SelectedChar).Name
            If EngineGetTextWidth(Font_Georgia, CName) > dw Then
                        Else
                dw = (dw / 2) - (EngineGetTextWidth(Font_Georgia, CName) / 2)
                dX = dX + dw
                RenderText Font_Georgia, CName, dX, dY, FontColor
            End If
        End If
            'Char Name
        dX = CharClassBounds.Left
        dY = CharClassBounds.Top
        dw = CharClassBounds.Right
        dH = CharClassBounds.Bottom
        If dw > 0 And dH > 10 Then
            CName = CharSelection(SelectedChar).Class
            If EngineGetTextWidth(Font_Georgia, CName) > dw Then
                        Else
                dw = (dw / 2) - (EngineGetTextWidth(Font_Georgia, CName) / 2)
                dX = dX + dw
                RenderText Font_Georgia, CName, dX, dY, FontColor
            End If
        End If
            SelCharDrawSprite
            'UseChar Button
        dX = UseCharButtonBounds.Left
        dY = UseCharButtonBounds.Top
        dw = UseCharButtonBounds.Right
        dH = UseCharButtonBounds.Bottom
        sx = UseCharButtonSrcBounds.Left
        sy = UseCharButtonSrcBounds.Top
        sW = UseCharButtonSrcBounds.Right
        sH = UseCharButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If UseCharButtonState <> 2 Then
                        If UseCharButtonHoverImage.Texture > 0 Then
                            RenderTexture UseCharButtonHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If UseCharButtonClickImage.Texture > 0 Then
                            RenderTexture UseCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If UseCharButtonState = 2 Then
                        If UseCharButtonClickImage.Texture > 0 Then
                            RenderTexture UseCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If UseCharButtonNormImage.Texture > 0 Then
                            RenderTexture UseCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If UseCharButtonState = 2 Then
                    If UseCharButtonClickImage.Texture > 0 Then
                        RenderTexture UseCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If UseCharButtonNormImage.Texture > 0 Then
                        RenderTexture UseCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'NewChar Button
        dX = NewCharButtonBounds.Left
        dY = NewCharButtonBounds.Top
        dw = NewCharButtonBounds.Right
        dH = NewCharButtonBounds.Bottom
        sx = NewCharButtonSrcBounds.Left
        sy = NewCharButtonSrcBounds.Top
        sW = NewCharButtonSrcBounds.Right
        sH = NewCharButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If NewCharButtonState <> 2 Then
                        If NewCharButtonHoverImage.Texture > 0 Then
                            RenderTexture NewCharButtonHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NewCharButtonClickImage.Texture > 0 Then
                            RenderTexture NewCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If NewCharButtonState = 2 Then
                        If NewCharButtonClickImage.Texture > 0 Then
                            RenderTexture NewCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NewCharButtonNormImage.Texture > 0 Then
                            RenderTexture NewCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If NewCharButtonState = 2 Then
                    If NewCharButtonClickImage.Texture > 0 Then
                        RenderTexture NewCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If NewCharButtonNormImage.Texture > 0 Then
                        RenderTexture NewCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'DelChar Button
        dX = DelCharButtonBounds.Left
        dY = DelCharButtonBounds.Top
        dw = DelCharButtonBounds.Right
        dH = DelCharButtonBounds.Bottom
        sx = DelCharButtonSrcBounds.Left
        sy = DelCharButtonSrcBounds.Top
        sW = DelCharButtonSrcBounds.Right
        sH = DelCharButtonSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If DelCharButtonState <> 2 Then
                        If DelCharButtonHoverImage.Texture > 0 Then
                            RenderTexture DelCharButtonHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DelCharButtonClickImage.Texture > 0 Then
                            RenderTexture DelCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If DelCharButtonState = 2 Then
                        If DelCharButtonClickImage.Texture > 0 Then
                            RenderTexture DelCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DelCharButtonNormImage.Texture > 0 Then
                            RenderTexture DelCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If DelCharButtonState = 2 Then
                    If DelCharButtonClickImage.Texture > 0 Then
                        RenderTexture DelCharButtonClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If DelCharButtonNormImage.Texture > 0 Then
                        RenderTexture DelCharButtonNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'Prev Char Button
        dX = PrevCharBounds.Left
        dY = PrevCharBounds.Top
        dw = PrevCharBounds.Right
        dH = PrevCharBounds.Bottom
        sx = PrevCharSrcBounds.Left
        sy = PrevCharSrcBounds.Top
        sW = PrevCharSrcBounds.Right
        sH = PrevCharSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If prevCharState <> 2 Then
                        If prevCharHoverImage.Texture > 0 Then
                            RenderTexture prevCharHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If prevCharClickImage.Texture > 0 Then
                            RenderTexture prevCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If prevCharState = 2 Then
                        If prevCharClickImage.Texture > 0 Then
                            RenderTexture prevCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If prevCharNormImage.Texture > 0 Then
                            RenderTexture prevCharNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If prevCharState = 2 Then
                    If prevCharClickImage.Texture > 0 Then
                        RenderTexture prevCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If prevCharNormImage.Texture > 0 Then
                        RenderTexture prevCharNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'Next Char Button
        dX = NextCharBounds.Left
        dY = NextCharBounds.Top
        dw = NextCharBounds.Right
        dH = NextCharBounds.Bottom
        sx = NextCharSrcBounds.Left
        sy = NextCharSrcBounds.Top
        sW = NextCharSrcBounds.Right
        sH = NextCharSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If NextCharState <> 2 Then
                        If NextCharHoverImage.Texture > 0 Then
                            RenderTexture NextCharHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextCharClickImage.Texture > 0 Then
                            RenderTexture NextCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If NextCharState = 2 Then
                        If NextCharClickImage.Texture > 0 Then
                            RenderTexture NextCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If NextCharNormImage.Texture > 0 Then
                            RenderTexture NextCharNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If NextCharState = 2 Then
                    If NextCharClickImage.Texture > 0 Then
                        RenderTexture NextCharClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If NextCharNormImage.Texture > 0 Then
                        RenderTexture NextCharNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawSelChar", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub LoadInGameGUIPart1()
Dim i As Long, filename As String

   On Error GoTo errorhandler

    If FileExist(App.path & "\data files\" & ServerDir & "\GUI.dat", True) = True Then
        filename = App.path & "\data files\" & ServerDir & "\gui.dat"
            'GameWindow
        GameWindowWidth = Val(GetVar(filename, "InGame", "GameWindowWidth"))
        GameWindowHeight = Val(GetVar(filename, "InGame", "GameWindowHeight"))
        If Val(GetVar(filename, "InGame", "GameImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            GameWindowImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "GameImage")) & ".png"
            GameWindowImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure GameWindowImage
        End If
            'GameScreen
        GameScreenX = Val(GetVar(filename, "InGame", "GameScreenX"))
        GameScreenY = Val(GetVar(filename, "InGame", "GameScreenY"))
        GameScreenWidth = Val(GetVar(filename, "InGame", "GameScreenWidth"))
        GameScreenHeight = Val(GetVar(filename, "InGame", "GameScreenHeight"))
                'ChatboxPnl
        ChatboxPnlX = Val(GetVar(filename, "InGame", "ChatboxPnlX"))
        ChatboxPnlY = Val(GetVar(filename, "InGame", "ChatboxPnlY"))
        ChatboxPnlWidth = Val(GetVar(filename, "InGame", "ChatboxPnlWidth"))
        ChatboxPnlHeight = Val(GetVar(filename, "InGame", "ChatboxPnlHeight"))
        If Val(GetVar(filename, "InGame", "ChatboxPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatboxPnlImage")) & ".png"
            ChatboxPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatboxPnlImage
        End If
                'Chatbox
        ChatboxX = Val(GetVar(filename, "InGame", "ChatboxX"))
        ChatboxY = Val(GetVar(filename, "InGame", "ChatboxY"))
        ChatboxWidth = Val(GetVar(filename, "InGame", "ChatboxWidth"))
        ChatboxHeight = Val(GetVar(filename, "InGame", "ChatboxHeight"))
                'MyText
        MyTextX = Val(GetVar(filename, "InGame", "MyTextX"))
        MyTextY = Val(GetVar(filename, "InGame", "MyTextY"))
        MyTextWidth = Val(GetVar(filename, "InGame", "MyTextWidth"))
        MyTextHeight = Val(GetVar(filename, "InGame", "MyTextHeight"))
                'ChatUpBtn
        ChatUpBtnX = Val(GetVar(filename, "InGame", "ChatUpBtnX"))
        ChatUpBtnY = Val(GetVar(filename, "InGame", "ChatUpBtnY"))
        ChatUpBtnWidth = Val(GetVar(filename, "InGame", "ChatUpBtnWidth"))
        ChatUpBtnHeight = Val(GetVar(filename, "InGame", "ChatUpBtnHeight"))
        If Val(GetVar(filename, "InGame", "ChatUpBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatUpBtnNormImage")) & ".png"
            ChatUpBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatUpBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ChatUpBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatUpBtnclickimage")) & ".png"
            ChatUpBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatUpBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ChatUpBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatUpBtnhoverimage")) & ".png"
            ChatUpBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatUpBtnHoverImage
        End If
                'ChatDownBtn
        ChatDownBtnX = Val(GetVar(filename, "InGame", "ChatDownBtnX"))
        ChatDownBtnY = Val(GetVar(filename, "InGame", "ChatDownBtnY"))
        ChatDownBtnWidth = Val(GetVar(filename, "InGame", "ChatDownBtnWidth"))
        ChatDownBtnHeight = Val(GetVar(filename, "InGame", "ChatDownBtnHeight"))
        If Val(GetVar(filename, "InGame", "ChatDownBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatDownBtnNormImage")) & ".png"
            ChatDownBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatDownBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ChatDownBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatDownBtnclickimage")) & ".png"
            ChatDownBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatDownBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ChatDownBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ChatDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ChatDownBtnhoverimage")) & ".png"
            ChatDownBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ChatDownBtnHoverImage
        End If
                'GameMenuPanel
        GameMenuPanelX = Val(GetVar(filename, "InGame", "GameMenuPanelX"))
        GameMenuPanelY = Val(GetVar(filename, "InGame", "GameMenuPanelY"))
        GameMenuPanelWidth = Val(GetVar(filename, "InGame", "GameMenuPanelWidth"))
        GameMenuPanelHeight = Val(GetVar(filename, "InGame", "GameMenuPanelHeight"))
        If Val(GetVar(filename, "InGame", "GameMenuPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            GameMenuPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "GameMenuPanelImage")) & ".png"
            GameMenuPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure GameMenuPanelImage
        End If
                'InventoryBtn
        InventoryBtnX = Val(GetVar(filename, "InGame", "InventoryBtnX"))
        InventoryBtnY = Val(GetVar(filename, "InGame", "InventoryBtnY"))
        InventoryBtnWidth = Val(GetVar(filename, "InGame", "InventoryBtnWidth"))
        InventoryBtnHeight = Val(GetVar(filename, "InGame", "InventoryBtnHeight"))
        If Val(GetVar(filename, "InGame", "InventoryBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            InventoryBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "InventoryBtnNormImage")) & ".png"
            InventoryBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure InventoryBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "InventoryBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            InventoryBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "InventoryBtnclickimage")) & ".png"
            InventoryBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure InventoryBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "InventoryBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            InventoryBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "InventoryBtnhoverimage")) & ".png"
            InventoryBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure InventoryBtnHoverImage
        End If
                'SkillsBtn
        SkillsBtnX = Val(GetVar(filename, "InGame", "SkillsBtnX"))
        SkillsBtnY = Val(GetVar(filename, "InGame", "SkillsBtnY"))
        SkillsBtnWidth = Val(GetVar(filename, "InGame", "SkillsBtnWidth"))
        SkillsBtnHeight = Val(GetVar(filename, "InGame", "SkillsBtnHeight"))
        If Val(GetVar(filename, "InGame", "SkillsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SkillsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SkillsBtnNormImage")) & ".png"
            SkillsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SkillsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "SkillsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SkillsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SkillsBtnclickimage")) & ".png"
            SkillsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SkillsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "SkillsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SkillsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SkillsBtnhoverimage")) & ".png"
            SkillsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SkillsBtnHoverImage
        End If
                'CharacterBtn
        CharacterBtnX = Val(GetVar(filename, "InGame", "CharacterBtnX"))
        CharacterBtnY = Val(GetVar(filename, "InGame", "CharacterBtnY"))
        CharacterBtnWidth = Val(GetVar(filename, "InGame", "CharacterBtnWidth"))
        CharacterBtnHeight = Val(GetVar(filename, "InGame", "CharacterBtnHeight"))
        If Val(GetVar(filename, "InGame", "CharacterBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CharacterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CharacterBtnNormImage")) & ".png"
            CharacterBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CharacterBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CharacterBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CharacterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CharacterBtnclickimage")) & ".png"
            CharacterBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CharacterBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CharacterBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CharacterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CharacterBtnhoverimage")) & ".png"
            CharacterBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CharacterBtnHoverImage
        End If
                'OptionsBtn
        OptionsBtnX = Val(GetVar(filename, "InGame", "OptionsBtnX"))
        OptionsBtnY = Val(GetVar(filename, "InGame", "OptionsBtnY"))
        OptionsBtnWidth = Val(GetVar(filename, "InGame", "OptionsBtnWidth"))
        OptionsBtnHeight = Val(GetVar(filename, "InGame", "OptionsBtnHeight"))
        If Val(GetVar(filename, "InGame", "OptionsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OptionsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "OptionsBtnNormImage")) & ".png"
            OptionsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure OptionsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "OptionsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OptionsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "OptionsBtnclickimage")) & ".png"
            OptionsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure OptionsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "OptionsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OptionsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "OptionsBtnhoverimage")) & ".png"
            OptionsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure OptionsBtnHoverImage
        End If
                'TradeBtn
        TradeBtnX = Val(GetVar(filename, "InGame", "TradeBtnX"))
        TradeBtnY = Val(GetVar(filename, "InGame", "TradeBtnY"))
        TradeBtnWidth = Val(GetVar(filename, "InGame", "TradeBtnWidth"))
        TradeBtnHeight = Val(GetVar(filename, "InGame", "TradeBtnHeight"))
        If Val(GetVar(filename, "InGame", "TradeBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TradeBtnNormImage")) & ".png"
            TradeBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TradeBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "TradeBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TradeBtnclickimage")) & ".png"
            TradeBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TradeBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "TradeBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TradeBtnhoverimage")) & ".png"
            TradeBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TradeBtnHoverImage
        End If
                'PartyBtn
        PartyBtnX = Val(GetVar(filename, "InGame", "PartyBtnX"))
        PartyBtnY = Val(GetVar(filename, "InGame", "PartyBtnY"))
        PartyBtnWidth = Val(GetVar(filename, "InGame", "PartyBtnWidth"))
        PartyBtnHeight = Val(GetVar(filename, "InGame", "PartyBtnHeight"))
        If Val(GetVar(filename, "InGame", "PartyBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyBtnNormImage")) & ".png"
            PartyBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "PartyBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyBtnclickimage")) & ".png"
            PartyBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "PartyBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyBtnhoverimage")) & ".png"
            PartyBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyBtnHoverImage
        End If
                'FriendsBtn
        FriendsBtnX = Val(GetVar(filename, "InGame", "FriendsBtnX"))
        FriendsBtnY = Val(GetVar(filename, "InGame", "FriendsBtnY"))
        FriendsBtnWidth = Val(GetVar(filename, "InGame", "FriendsBtnWidth"))
        FriendsBtnHeight = Val(GetVar(filename, "InGame", "FriendsBtnHeight"))
        If Val(GetVar(filename, "InGame", "FriendsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsBtnNormImage")) & ".png"
            FriendsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsBtnclickimage")) & ".png"
            FriendsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsBtnhoverimage")) & ".png"
            FriendsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsBtnHoverImage
        End If
                'QuestsBtn
        QuestsBtnX = Val(GetVar(filename, "InGame", "QuestsBtnX"))
        QuestsBtnY = Val(GetVar(filename, "InGame", "QuestsBtnY"))
        QuestsBtnWidth = Val(GetVar(filename, "InGame", "QuestsBtnWidth"))
        QuestsBtnHeight = Val(GetVar(filename, "InGame", "QuestsBtnHeight"))
        If Val(GetVar(filename, "InGame", "QuestsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestsBtnNormImage")) & ".png"
            QuestsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "QuestsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestsBtnclickimage")) & ".png"
            QuestsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "QuestsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestsBtnhoverimage")) & ".png"
            QuestsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestsBtnHoverImage
        End If
        'PetsBtn
        PetsBtnX = Val(GetVar(filename, "InGame", "PetsBtnX"))
        PetsBtnY = Val(GetVar(filename, "InGame", "PetsBtnY"))
        PetsBtnWidth = Val(GetVar(filename, "InGame", "PetsBtnWidth"))
        PetsBtnHeight = Val(GetVar(filename, "InGame", "PetsBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetsBtnNormImage")) & ".png"
            PetsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PetsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "PetsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetsBtnclickimage")) & ".png"
            PetsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PetsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "PetsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetsBtnhoverimage")) & ".png"
            PetsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PetsBtnHoverImage
        End If
                'GUIBarsPanel
        GUIBarsPanelX = Val(GetVar(filename, "InGame", "GUIBarsPanelX"))
        GUIBarsPanelY = Val(GetVar(filename, "InGame", "GUIBarsPanelY"))
        GUIBarsPanelWidth = Val(GetVar(filename, "InGame", "GUIBarsPanelWidth"))
        GUIBarsPanelHeight = Val(GetVar(filename, "InGame", "GUIBarsPanelHeight"))
        If Val(GetVar(filename, "InGame", "GUIBarsPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            GUIBarsPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "GUIBarsPanelImage")) & ".png"
            GUIBarsPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure GUIBarsPanelImage
        End If
                'HealthBar
        HealthBarX = Val(GetVar(filename, "InGame", "HealthBarX"))
        HealthBarY = Val(GetVar(filename, "InGame", "HealthBarY"))
        HealthBarWidth = Val(GetVar(filename, "InGame", "HealthBarWidth"))
        HealthBarHeight = Val(GetVar(filename, "InGame", "HealthBarHeight"))
        If Val(GetVar(filename, "InGame", "HealthBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            HealthBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "HealthBarImage")) & ".png"
            HealthBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure HealthBarImage
        End If
                'ManaBar
        ManaBarX = Val(GetVar(filename, "InGame", "ManaBarX"))
        ManaBarY = Val(GetVar(filename, "InGame", "ManaBarY"))
        ManaBarWidth = Val(GetVar(filename, "InGame", "ManaBarWidth"))
        ManaBarHeight = Val(GetVar(filename, "InGame", "ManaBarHeight"))
        If Val(GetVar(filename, "InGame", "ManaBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ManaBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ManaBarImage")) & ".png"
            ManaBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ManaBarImage
        End If
                'ExpBar
        ExpBarX = Val(GetVar(filename, "InGame", "ExpBarX"))
        ExpBarY = Val(GetVar(filename, "InGame", "ExpBarY"))
        ExpBarWidth = Val(GetVar(filename, "InGame", "ExpBarWidth"))
        ExpBarHeight = Val(GetVar(filename, "InGame", "ExpBarHeight"))
        If Val(GetVar(filename, "InGame", "ExpBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ExpBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ExpBarImage")) & ".png"
            ExpBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ExpBarImage
        End If
                'HotbarPnl
        HotbarPnlX = Val(GetVar(filename, "InGame", "HotbarPnlX"))
        HotbarPnlY = Val(GetVar(filename, "InGame", "HotbarPnlY"))
        HotbarPnlWidth = Val(GetVar(filename, "InGame", "HotbarPnlWidth"))
        HotbarPnlHeight = Val(GetVar(filename, "InGame", "HotbarPnlHeight"))
        If Val(GetVar(filename, "InGame", "HotbarPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            HotbarPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "HotbarPnlImage")) & ".png"
            HotbarPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure HotbarPnlImage
        End If
                'HotbarIcon1
        HotbarIcon1X = Val(GetVar(filename, "InGame", "HotbarIcon1X"))
        HotbarIcon1Y = Val(GetVar(filename, "InGame", "HotbarIcon1Y"))
        HotbarIcon1Width = Val(GetVar(filename, "InGame", "HotbarIcon1Width"))
        HotbarIcon1Height = Val(GetVar(filename, "InGame", "HotbarIcon1Height"))
                'HotbarIcon2
        HotbarIcon2X = Val(GetVar(filename, "InGame", "HotbarIcon2X"))
        HotbarIcon2Y = Val(GetVar(filename, "InGame", "HotbarIcon2Y"))
        HotbarIcon2Width = Val(GetVar(filename, "InGame", "HotbarIcon2Width"))
        HotbarIcon2Height = Val(GetVar(filename, "InGame", "HotbarIcon2Height"))
                'HotbarIcon3
        HotbarIcon3X = Val(GetVar(filename, "InGame", "HotbarIcon3X"))
        HotbarIcon3Y = Val(GetVar(filename, "InGame", "HotbarIcon3Y"))
        HotbarIcon3Width = Val(GetVar(filename, "InGame", "HotbarIcon3Width"))
        HotbarIcon3Height = Val(GetVar(filename, "InGame", "HotbarIcon3Height"))
                'HotbarIcon4
        HotbarIcon4X = Val(GetVar(filename, "InGame", "HotbarIcon4X"))
        HotbarIcon4Y = Val(GetVar(filename, "InGame", "HotbarIcon4Y"))
        HotbarIcon4Width = Val(GetVar(filename, "InGame", "HotbarIcon4Width"))
        HotbarIcon4Height = Val(GetVar(filename, "InGame", "HotbarIcon4Height"))
                'HotbarIcon5
        HotbarIcon5X = Val(GetVar(filename, "InGame", "HotbarIcon5X"))
        HotbarIcon5Y = Val(GetVar(filename, "InGame", "HotbarIcon5Y"))
        HotbarIcon5Width = Val(GetVar(filename, "InGame", "HotbarIcon5Width"))
        HotbarIcon5Height = Val(GetVar(filename, "InGame", "HotbarIcon5Height"))
                'HotbarIcon6
        HotbarIcon6X = Val(GetVar(filename, "InGame", "HotbarIcon6X"))
        HotbarIcon6Y = Val(GetVar(filename, "InGame", "HotbarIcon6Y"))
        HotbarIcon6Width = Val(GetVar(filename, "InGame", "HotbarIcon6Width"))
        HotbarIcon6Height = Val(GetVar(filename, "InGame", "HotbarIcon6Height"))
                'HotbarIcon7
        HotbarIcon7X = Val(GetVar(filename, "InGame", "HotbarIcon7X"))
        HotbarIcon7Y = Val(GetVar(filename, "InGame", "HotbarIcon7Y"))
        HotbarIcon7Width = Val(GetVar(filename, "InGame", "HotbarIcon7Width"))
        HotbarIcon7Height = Val(GetVar(filename, "InGame", "HotbarIcon7Height"))
                'HotbarIcon8
        HotbarIcon8X = Val(GetVar(filename, "InGame", "HotbarIcon8X"))
        HotbarIcon8Y = Val(GetVar(filename, "InGame", "HotbarIcon8Y"))
        HotbarIcon8Width = Val(GetVar(filename, "InGame", "HotbarIcon8Width"))
        HotbarIcon8Height = Val(GetVar(filename, "InGame", "HotbarIcon8Height"))
                'HotbarIcon9
        HotbarIcon9X = Val(GetVar(filename, "InGame", "HotbarIcon9X"))
        HotbarIcon9Y = Val(GetVar(filename, "InGame", "HotbarIcon9Y"))
        HotbarIcon9Width = Val(GetVar(filename, "InGame", "HotbarIcon9Width"))
        HotbarIcon9Height = Val(GetVar(filename, "InGame", "HotbarIcon9Height"))
                'HotbarIcon10
        HotbarIcon10X = Val(GetVar(filename, "InGame", "HotbarIcon10X"))
        HotbarIcon10Y = Val(GetVar(filename, "InGame", "HotbarIcon10Y"))
        HotbarIcon10Width = Val(GetVar(filename, "InGame", "HotbarIcon10Width"))
        HotbarIcon10Height = Val(GetVar(filename, "InGame", "HotbarIcon10Height"))
                'HotbarIcon11
        HotbarIcon11X = Val(GetVar(filename, "InGame", "HotbarIcon11X"))
        HotbarIcon11Y = Val(GetVar(filename, "InGame", "HotbarIcon11Y"))
        HotbarIcon11Width = Val(GetVar(filename, "InGame", "HotbarIcon11Width"))
        HotbarIcon11Height = Val(GetVar(filename, "InGame", "HotbarIcon11Height"))
                'HotbarIcon12
        HotbarIcon12X = Val(GetVar(filename, "InGame", "HotbarIcon12X"))
        HotbarIcon12Y = Val(GetVar(filename, "InGame", "HotbarIcon12Y"))
        HotbarIcon12Width = Val(GetVar(filename, "InGame", "HotbarIcon12Width"))
        HotbarIcon12Height = Val(GetVar(filename, "InGame", "HotbarIcon12Height"))
                'InventoryPnl
        InventoryPnlX = Val(GetVar(filename, "InGame", "InventoryPnlX"))
        InventoryPnlY = Val(GetVar(filename, "InGame", "InventoryPnlY"))
        InventoryPnlWidth = Val(GetVar(filename, "InGame", "InventoryPnlWidth"))
        InventoryPnlHeight = Val(GetVar(filename, "InGame", "InventoryPnlHeight"))
        If Val(GetVar(filename, "InGame", "InventoryPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            InventoryPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "InventoryPnlImage")) & ".png"
            InventoryPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure InventoryPnlImage
        End If
                'InvItems
        InvItemsX = Val(GetVar(filename, "InGame", "InvItemsX"))
        InvItemsY = Val(GetVar(filename, "InGame", "InvItemsY"))
        InvItemsWidth = Val(GetVar(filename, "InGame", "InvItemsWidth"))
        InvItemsHeight = Val(GetVar(filename, "InGame", "InvItemsHeight"))
                'CloseInvBtn
        CloseInvBtnX = Val(GetVar(filename, "InGame", "CloseInvBtnX"))
        CloseInvBtnY = Val(GetVar(filename, "InGame", "CloseInvBtnY"))
        CloseInvBtnWidth = Val(GetVar(filename, "InGame", "CloseInvBtnWidth"))
        CloseInvBtnHeight = Val(GetVar(filename, "InGame", "CloseInvBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseInvBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInvBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInvBtnNormImage")) & ".png"
            CloseInvBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInvBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseInvBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInvBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInvBtnclickimage")) & ".png"
            CloseInvBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInvBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseInvBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInvBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInvBtnhoverimage")) & ".png"
            CloseInvBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInvBtnHoverImage
        End If
                'SpellsPnl
        SpellsPnlX = Val(GetVar(filename, "InGame", "SpellsPnlX"))
        SpellsPnlY = Val(GetVar(filename, "InGame", "SpellsPnlY"))
        SpellsPnlWidth = Val(GetVar(filename, "InGame", "SpellsPnlWidth"))
        SpellsPnlHeight = Val(GetVar(filename, "InGame", "SpellsPnlHeight"))
        If Val(GetVar(filename, "InGame", "SpellsPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SpellsPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SpellsPnlImage")) & ".png"
            SpellsPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SpellsPnlImage
        End If
                'SpellIcons
        SpellIconsX = Val(GetVar(filename, "InGame", "SpellIconsX"))
        SpellIconsY = Val(GetVar(filename, "InGame", "SpellIconsY"))
        SpellIconsWidth = Val(GetVar(filename, "InGame", "SpellIconsWidth"))
        SpellIconsHeight = Val(GetVar(filename, "InGame", "SpellIconsHeight"))
                'CloseSpellsBtn
        CloseSpellsBtnX = Val(GetVar(filename, "InGame", "CloseSpellsBtnX"))
        CloseSpellsBtnY = Val(GetVar(filename, "InGame", "CloseSpellsBtnY"))
        CloseSpellsBtnWidth = Val(GetVar(filename, "InGame", "CloseSpellsBtnWidth"))
        CloseSpellsBtnHeight = Val(GetVar(filename, "InGame", "CloseSpellsBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseSpellsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseSpellsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseSpellsBtnNormImage")) & ".png"
            CloseSpellsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseSpellsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseSpellsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseSpellsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseSpellsBtnclickimage")) & ".png"
            CloseSpellsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseSpellsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseSpellsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseSpellsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseSpellsBtnhoverimage")) & ".png"
            CloseSpellsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseSpellsBtnHoverImage
        End If
                'CharacterPnl
        CharacterPnlX = Val(GetVar(filename, "InGame", "CharacterPnlX"))
        CharacterPnlY = Val(GetVar(filename, "InGame", "CharacterPnlY"))
        CharacterPnlWidth = Val(GetVar(filename, "InGame", "CharacterPnlWidth"))
        CharacterPnlHeight = Val(GetVar(filename, "InGame", "CharacterPnlHeight"))
        If Val(GetVar(filename, "InGame", "CharacterPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CharacterPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CharacterPnlImage")) & ".png"
            CharacterPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CharacterPnlImage
        End If
                'PlayerNameLbl
        PlayerNameLblX = Val(GetVar(filename, "InGame", "PlayerNameLblX"))
        PlayerNameLblY = Val(GetVar(filename, "InGame", "PlayerNameLblY"))
        PlayerNameLblWidth = Val(GetVar(filename, "InGame", "PlayerNameLblWidth"))
        PlayerNameLblHeight = Val(GetVar(filename, "InGame", "PlayerNameLblHeight"))
                'CharacterFace
        CharacterFaceX = Val(GetVar(filename, "InGame", "CharacterFaceX"))
        CharacterFaceY = Val(GetVar(filename, "InGame", "CharacterFaceY"))
        CharacterFaceWidth = Val(GetVar(filename, "InGame", "CharacterFaceWidth"))
        CharacterFaceHeight = Val(GetVar(filename, "InGame", "CharacterFaceHeight"))
                'StrengthLbl
        StrengthLblX = Val(GetVar(filename, "InGame", "StrengthLblX"))
        StrengthLblY = Val(GetVar(filename, "InGame", "StrengthLblY"))
        StrengthLblWidth = Val(GetVar(filename, "InGame", "StrengthLblWidth"))
        StrengthLblHeight = Val(GetVar(filename, "InGame", "StrengthLblHeight"))
                'EnduranceLbl
        EnduranceLblX = Val(GetVar(filename, "InGame", "EnduranceLblX"))
        EnduranceLblY = Val(GetVar(filename, "InGame", "EnduranceLblY"))
        EnduranceLblWidth = Val(GetVar(filename, "InGame", "EnduranceLblWidth"))
        EnduranceLblHeight = Val(GetVar(filename, "InGame", "EnduranceLblHeight"))
                'IntelligenceLbl
        IntelligenceLblX = Val(GetVar(filename, "InGame", "IntelligenceLblX"))
        IntelligenceLblY = Val(GetVar(filename, "InGame", "IntelligenceLblY"))
        IntelligenceLblWidth = Val(GetVar(filename, "InGame", "IntelligenceLblWidth"))
        IntelligenceLblHeight = Val(GetVar(filename, "InGame", "IntelligenceLblHeight"))
                'AgilityLbl
        AgilityLblX = Val(GetVar(filename, "InGame", "AgilityLblX"))
        AgilityLblY = Val(GetVar(filename, "InGame", "AgilityLblY"))
        AgilityLblWidth = Val(GetVar(filename, "InGame", "AgilityLblWidth"))
        AgilityLblHeight = Val(GetVar(filename, "InGame", "AgilityLblHeight"))
                'WillpowerLbl
        WillpowerLblX = Val(GetVar(filename, "InGame", "WillpowerLblX"))
        WillpowerLblY = Val(GetVar(filename, "InGame", "WillpowerLblY"))
        WillpowerLblWidth = Val(GetVar(filename, "InGame", "WillpowerLblWidth"))
        WillpowerLblHeight = Val(GetVar(filename, "InGame", "WillpowerLblHeight"))
                'PointsLbl
        PointsLblX = Val(GetVar(filename, "InGame", "PointsLblX"))
        PointsLblY = Val(GetVar(filename, "InGame", "PointsLblY"))
        PointsLblWidth = Val(GetVar(filename, "InGame", "PointsLblWidth"))
        PointsLblHeight = Val(GetVar(filename, "InGame", "PointsLblHeight"))
                'AddStrengthBtn
        AddStrengthBtnX = Val(GetVar(filename, "InGame", "AddStrengthBtnX"))
        AddStrengthBtnY = Val(GetVar(filename, "InGame", "AddStrengthBtnY"))
        AddStrengthBtnWidth = Val(GetVar(filename, "InGame", "AddStrengthBtnWidth"))
        AddStrengthBtnHeight = Val(GetVar(filename, "InGame", "AddStrengthBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddStrengthBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddStrengthBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddStrengthBtnNormImage")) & ".png"
            AddStrengthBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddStrengthBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddStrengthBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddStrengthBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddStrengthBtnclickimage")) & ".png"
            AddStrengthBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddStrengthBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddStrengthBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddStrengthBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddStrengthBtnhoverimage")) & ".png"
            AddStrengthBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddStrengthBtnHoverImage
        End If
                'AddEnduranceBtn
        AddEnduranceBtnX = Val(GetVar(filename, "InGame", "AddEnduranceBtnX"))
        AddEnduranceBtnY = Val(GetVar(filename, "InGame", "AddEnduranceBtnY"))
        AddEnduranceBtnWidth = Val(GetVar(filename, "InGame", "AddEnduranceBtnWidth"))
        AddEnduranceBtnHeight = Val(GetVar(filename, "InGame", "AddEnduranceBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddEnduranceBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddEnduranceBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddEnduranceBtnNormImage")) & ".png"
            AddEnduranceBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddEnduranceBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddEnduranceBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddEnduranceBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddEnduranceBtnclickimage")) & ".png"
            AddEnduranceBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddEnduranceBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddEnduranceBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddEnduranceBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddEnduranceBtnhoverimage")) & ".png"
            AddEnduranceBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddEnduranceBtnHoverImage
        End If
                'AddIntelligenceBtn
        AddIntelligenceBtnX = Val(GetVar(filename, "InGame", "AddIntelligenceBtnX"))
        AddIntelligenceBtnY = Val(GetVar(filename, "InGame", "AddIntelligenceBtnY"))
        AddIntelligenceBtnWidth = Val(GetVar(filename, "InGame", "AddIntelligenceBtnWidth"))
        AddIntelligenceBtnHeight = Val(GetVar(filename, "InGame", "AddIntelligenceBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddIntelligenceBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddIntelligenceBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddIntelligenceBtnNormImage")) & ".png"
            AddIntelligenceBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddIntelligenceBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddIntelligenceBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddIntelligenceBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddIntelligenceBtnclickimage")) & ".png"
            AddIntelligenceBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddIntelligenceBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddIntelligenceBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddIntelligenceBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddIntelligenceBtnhoverimage")) & ".png"
            AddIntelligenceBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddIntelligenceBtnHoverImage
        End If
                'AddAgilityBtn
        AddAgilityBtnX = Val(GetVar(filename, "InGame", "AddAgilityBtnX"))
        AddAgilityBtnY = Val(GetVar(filename, "InGame", "AddAgilityBtnY"))
        AddAgilityBtnWidth = Val(GetVar(filename, "InGame", "AddAgilityBtnWidth"))
        AddAgilityBtnHeight = Val(GetVar(filename, "InGame", "AddAgilityBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddAgilityBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddAgilityBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddAgilityBtnNormImage")) & ".png"
            AddAgilityBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddAgilityBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddAgilityBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddAgilityBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddAgilityBtnclickimage")) & ".png"
            AddAgilityBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddAgilityBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddAgilityBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddAgilityBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddAgilityBtnhoverimage")) & ".png"
            AddAgilityBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddAgilityBtnHoverImage
        End If
                'AddWillpowerBtn
        AddWillpowerBtnX = Val(GetVar(filename, "InGame", "AddWillpowerBtnX"))
        AddWillpowerBtnY = Val(GetVar(filename, "InGame", "AddWillpowerBtnY"))
        AddWillpowerBtnWidth = Val(GetVar(filename, "InGame", "AddWillpowerBtnWidth"))
        AddWillpowerBtnHeight = Val(GetVar(filename, "InGame", "AddWillpowerBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddWillpowerBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddWillpowerBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddWillpowerBtnNormImage")) & ".png"
            AddWillpowerBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddWillpowerBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddWillpowerBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddWillpowerBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddWillpowerBtnclickimage")) & ".png"
            AddWillpowerBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddWillpowerBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddWillpowerBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddWillpowerBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddWillpowerBtnhoverimage")) & ".png"
            AddWillpowerBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddWillpowerBtnHoverImage
        End If
                'PlayerWeaponSlot
        PlayerWeaponSlotX = Val(GetVar(filename, "InGame", "PlayerWeaponSlotX"))
        PlayerWeaponSlotY = Val(GetVar(filename, "InGame", "PlayerWeaponSlotY"))
        PlayerWeaponSlotWidth = Val(GetVar(filename, "InGame", "PlayerWeaponSlotWidth"))
        PlayerWeaponSlotHeight = Val(GetVar(filename, "InGame", "PlayerWeaponSlotHeight"))
        If Val(GetVar(filename, "InGame", "PlayerWeaponSlotImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PlayerWeaponSlotImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PlayerWeaponSlotImage")) & ".png"
            PlayerWeaponSlotImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PlayerWeaponSlotImage
        End If
                'PlayerArmorSlot
        PlayerArmorSlotX = Val(GetVar(filename, "InGame", "PlayerArmorSlotX"))
        PlayerArmorSlotY = Val(GetVar(filename, "InGame", "PlayerArmorSlotY"))
        PlayerArmorSlotWidth = Val(GetVar(filename, "InGame", "PlayerArmorSlotWidth"))
        PlayerArmorSlotHeight = Val(GetVar(filename, "InGame", "PlayerArmorSlotHeight"))
        If Val(GetVar(filename, "InGame", "PlayerArmorSlotImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PlayerArmorSlotImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PlayerArmorSlotImage")) & ".png"
            PlayerArmorSlotImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PlayerArmorSlotImage
        End If
                'PlayerHelmetSlot
        PlayerHelmetSlotX = Val(GetVar(filename, "InGame", "PlayerHelmetSlotX"))
        PlayerHelmetSlotY = Val(GetVar(filename, "InGame", "PlayerHelmetSlotY"))
        PlayerHelmetSlotWidth = Val(GetVar(filename, "InGame", "PlayerHelmetSlotWidth"))
        PlayerHelmetSlotHeight = Val(GetVar(filename, "InGame", "PlayerHelmetSlotHeight"))
        If Val(GetVar(filename, "InGame", "PlayerHelmetSlotImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PlayerHelmetSlotImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PlayerHelmetSlotImage")) & ".png"
            PlayerHelmetSlotImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PlayerHelmetSlotImage
        End If
                'PlayerSheildSlot
        PlayerShieldSlotX = Val(GetVar(filename, "InGame", "PlayerSheildSlotX"))
        PlayerShieldSlotY = Val(GetVar(filename, "InGame", "PlayerSheildSlotY"))
        PlayerShieldSlotWidth = Val(GetVar(filename, "InGame", "PlayerSheildSlotWidth"))
        PlayerShieldSlotHeight = Val(GetVar(filename, "InGame", "PlayerSheildSlotHeight"))
        If Val(GetVar(filename, "InGame", "PlayerSheildSlotImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PlayerShieldSlotImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PlayerSheildSlotImage")) & ".png"
            PlayerShieldSlotImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PlayerShieldSlotImage
        End If
                'CloseCharacterBtn
        CloseCharacterBtnX = Val(GetVar(filename, "InGame", "CloseCharacterBtnX"))
        CloseCharacterBtnY = Val(GetVar(filename, "InGame", "CloseCharacterBtnY"))
        CloseCharacterBtnWidth = Val(GetVar(filename, "InGame", "CloseCharacterBtnWidth"))
        CloseCharacterBtnHeight = Val(GetVar(filename, "InGame", "CloseCharacterBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseCharacterBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseCharacterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseCharacterBtnNormImage")) & ".png"
            CloseCharacterBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseCharacterBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseCharacterBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseCharacterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseCharacterBtnclickimage")) & ".png"
            CloseCharacterBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseCharacterBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseCharacterBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseCharacterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseCharacterBtnhoverimage")) & ".png"
            CloseCharacterBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseCharacterBtnHoverImage
        End If
                'OptionsPnl
        OptionsPnlX = Val(GetVar(filename, "InGame", "OptionsPnlX"))
        OptionsPnlY = Val(GetVar(filename, "InGame", "OptionsPnlY"))
        OptionsPnlWidth = Val(GetVar(filename, "InGame", "OptionsPnlWidth"))
        OptionsPnlHeight = Val(GetVar(filename, "InGame", "OptionsPnlHeight"))
        If Val(GetVar(filename, "InGame", "OptionsPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            OptionsPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "OptionsPnlImage")) & ".png"
            OptionsPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure OptionsPnlImage
        End If
                'MusicOnBtn
        MusicOnBtnX = Val(GetVar(filename, "InGame", "MusicOnBtnX"))
        MusicOnBtnY = Val(GetVar(filename, "InGame", "MusicOnBtnY"))
        MusicOnBtnWidth = Val(GetVar(filename, "InGame", "MusicOnBtnWidth"))
        MusicOnBtnHeight = Val(GetVar(filename, "InGame", "MusicOnBtnHeight"))
        If Val(GetVar(filename, "InGame", "MusicOnBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOnBtnNormImage")) & ".png"
            MusicOnBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOnBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "MusicOnBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOnBtnclickimage")) & ".png"
            MusicOnBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOnBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "MusicOnBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOnBtnhoverimage")) & ".png"
            MusicOnBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOnBtnHoverImage
        End If
                'MusicOffBtn
        MusicOffBtnX = Val(GetVar(filename, "InGame", "MusicOffBtnX"))
        MusicOffBtnY = Val(GetVar(filename, "InGame", "MusicOffBtnY"))
        MusicOffBtnWidth = Val(GetVar(filename, "InGame", "MusicOffBtnWidth"))
        MusicOffBtnHeight = Val(GetVar(filename, "InGame", "MusicOffBtnHeight"))
        If Val(GetVar(filename, "InGame", "MusicOffBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOffBtnNormImage")) & ".png"
            MusicOffBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOffBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "MusicOffBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOffBtnclickimage")) & ".png"
            MusicOffBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOffBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "MusicOffBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MusicOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MusicOffBtnhoverimage")) & ".png"
            MusicOffBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MusicOffBtnHoverImage
        End If
                'SoundOnBtn
        SoundOnBtnX = Val(GetVar(filename, "InGame", "SoundOnBtnX"))
        SoundOnBtnY = Val(GetVar(filename, "InGame", "SoundOnBtnY"))
        SoundOnBtnWidth = Val(GetVar(filename, "InGame", "SoundOnBtnWidth"))
        SoundOnBtnHeight = Val(GetVar(filename, "InGame", "SoundOnBtnHeight"))
        If Val(GetVar(filename, "InGame", "SoundOnBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOnBtnNormImage")) & ".png"
            SoundOnBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOnBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "SoundOnBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOnBtnclickimage")) & ".png"
            SoundOnBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOnBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "SoundOnBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOnBtnhoverimage")) & ".png"
            SoundOnBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOnBtnHoverImage
        End If
                'SoundOffBtn
        SoundOffBtnX = Val(GetVar(filename, "InGame", "SoundOffBtnX"))
        SoundOffBtnY = Val(GetVar(filename, "InGame", "SoundOffBtnY"))
        SoundOffBtnWidth = Val(GetVar(filename, "InGame", "SoundOffBtnWidth"))
        SoundOffBtnHeight = Val(GetVar(filename, "InGame", "SoundOffBtnHeight"))
        If Val(GetVar(filename, "InGame", "SoundOffBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOffBtnNormImage")) & ".png"
            SoundOffBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOffBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "SoundOffBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOffBtnclickimage")) & ".png"
            SoundOffBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOffBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "SoundOffBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SoundOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SoundOffBtnhoverimage")) & ".png"
            SoundOffBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SoundOffBtnHoverImage
        End If
                'FullScreenOnBtn
        FullScreenOnBtnX = Val(GetVar(filename, "InGame", "FullScreenOnBtnX"))
        FullScreenOnBtnY = Val(GetVar(filename, "InGame", "FullScreenOnBtnY"))
        FullScreenOnBtnWidth = Val(GetVar(filename, "InGame", "FullScreenOnBtnWidth"))
        FullScreenOnBtnHeight = Val(GetVar(filename, "InGame", "FullScreenOnBtnHeight"))
        If Val(GetVar(filename, "InGame", "FullScreenOnBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOnBtnNormImage")) & ".png"
            FullScreenOnBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOnBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "FullScreenOnBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOnBtnclickimage")) & ".png"
            FullScreenOnBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOnBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "FullScreenOnBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOnBtnhoverimage")) & ".png"
            FullScreenOnBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOnBtnHoverImage
        End If
                'FullScreenOffBtn
        FullScreenOffBtnX = Val(GetVar(filename, "InGame", "FullScreenOffBtnX"))
        FullScreenOffBtnY = Val(GetVar(filename, "InGame", "FullScreenOffBtnY"))
        FullScreenOffBtnWidth = Val(GetVar(filename, "InGame", "FullScreenOffBtnWidth"))
        FullScreenOffBtnHeight = Val(GetVar(filename, "InGame", "FullScreenOffBtnHeight"))
        If Val(GetVar(filename, "InGame", "FullScreenOffBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOffBtnNormImage")) & ".png"
            FullScreenOffBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOffBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "FullScreenOffBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOffBtnclickimage")) & ".png"
            FullScreenOffBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOffBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "FullScreenOffBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FullScreenOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FullScreenOffBtnhoverimage")) & ".png"
            FullScreenOffBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FullScreenOffBtnHoverImage
        End If
                'CloseOptionsBtn
        CloseOptionsBtnX = Val(GetVar(filename, "InGame", "CloseOptionsBtnX"))
        CloseOptionsBtnY = Val(GetVar(filename, "InGame", "CloseOptionsBtnY"))
        CloseOptionsBtnWidth = Val(GetVar(filename, "InGame", "CloseOptionsBtnWidth"))
        CloseOptionsBtnHeight = Val(GetVar(filename, "InGame", "CloseOptionsBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseOptionsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseOptionsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseOptionsBtnNormImage")) & ".png"
            CloseOptionsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseOptionsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseOptionsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseOptionsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseOptionsBtnclickimage")) & ".png"
            CloseOptionsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseOptionsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseOptionsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseOptionsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseOptionsBtnhoverimage")) & ".png"
            CloseOptionsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseOptionsBtnHoverImage
        End If
            Exit Sub
    Else
        MsgBox "User interface configuration not found! - Exiting!"
        Exit Sub
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "LoadInGameGUIPart1", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub LoadInGameGUIPart2()
Dim i As Long, filename As String

   On Error GoTo errorhandler

    If FileExist(App.path & "\data files\" & ServerDir & "\GUI.dat", True) = True Then
        filename = App.path & "\data files\" & ServerDir & "\gui.dat"
            'PartyPnl
        PartyPnlX = Val(GetVar(filename, "InGame", "PartyPnlX"))
        PartyPnlY = Val(GetVar(filename, "InGame", "PartyPnlY"))
        PartyPnlWidth = Val(GetVar(filename, "InGame", "PartyPnlWidth"))
        PartyPnlHeight = Val(GetVar(filename, "InGame", "PartyPnlHeight"))
        If Val(GetVar(filename, "InGame", "PartyPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyPnlImage")) & ".png"
            PartyPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyPnlImage
        End If
                'PartyLeaderName
        PartyLeaderNameX = Val(GetVar(filename, "InGame", "PartyLeaderNameX"))
        PartyLeaderNameY = Val(GetVar(filename, "InGame", "PartyLeaderNameY"))
        PartyLeaderNameWidth = Val(GetVar(filename, "InGame", "PartyLeaderNameWidth"))
        PartyLeaderNameHeight = Val(GetVar(filename, "InGame", "PartyLeaderNameHeight"))
                'PartyLeaderHPBar
        PartyLeaderHPBarX = Val(GetVar(filename, "InGame", "PartyLeaderHPBarX"))
        PartyLeaderHPBarY = Val(GetVar(filename, "InGame", "PartyLeaderHPBarY"))
        PartyLeaderHPBarWidth = Val(GetVar(filename, "InGame", "PartyLeaderHPBarWidth"))
        PartyLeaderHPBarHeight = Val(GetVar(filename, "InGame", "PartyLeaderHPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyLeaderHPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyLeaderHPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyLeaderHPBarImage")) & ".png"
            PartyLeaderHPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyLeaderHPBarImage
        End If
                'PartyLeaderMPBar
        PartyLeaderMPBarX = Val(GetVar(filename, "InGame", "PartyLeaderMPBarX"))
        PartyLeaderMPBarY = Val(GetVar(filename, "InGame", "PartyLeaderMPBarY"))
        PartyLeaderMPBarWidth = Val(GetVar(filename, "InGame", "PartyLeaderMPBarWidth"))
        PartyLeaderMPBarHeight = Val(GetVar(filename, "InGame", "PartyLeaderMPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyLeaderMPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyLeaderMPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyLeaderMPBarImage")) & ".png"
            PartyLeaderMPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyLeaderMPBarImage
        End If
                'PartyMember1Name
        PartyMember1NameX = Val(GetVar(filename, "InGame", "PartyMember1NameX"))
        PartyMember1NameY = Val(GetVar(filename, "InGame", "PartyMember1NameY"))
        PartyMember1NameWidth = Val(GetVar(filename, "InGame", "PartyMember1NameWidth"))
        PartyMember1NameHeight = Val(GetVar(filename, "InGame", "PartyMember1NameHeight"))
                'PartyMember1HPBar
        PartyMember1HPBarX = Val(GetVar(filename, "InGame", "PartyMember1HPBarX"))
        PartyMember1HPBarY = Val(GetVar(filename, "InGame", "PartyMember1HPBarY"))
        PartyMember1HPBarWidth = Val(GetVar(filename, "InGame", "PartyMember1HPBarWidth"))
        PartyMember1HPBarHeight = Val(GetVar(filename, "InGame", "PartyMember1HPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember1HPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember1HPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember1HPBarImage")) & ".png"
            PartyMember1HPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember1HPBarImage
        End If
                'PartyMember1MPBar
        PartyMember1MPBarX = Val(GetVar(filename, "InGame", "PartyMember1MPBarX"))
        PartyMember1MPBarY = Val(GetVar(filename, "InGame", "PartyMember1MPBarY"))
        PartyMember1MPBarWidth = Val(GetVar(filename, "InGame", "PartyMember1MPBarWidth"))
        PartyMember1MPBarHeight = Val(GetVar(filename, "InGame", "PartyMember1MPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember1MPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember1MPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember1MPBarImage")) & ".png"
            PartyMember1MPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember1MPBarImage
        End If
                'PartyMember2Name
        PartyMember2NameX = Val(GetVar(filename, "InGame", "PartyMember2NameX"))
        PartyMember2NameY = Val(GetVar(filename, "InGame", "PartyMember2NameY"))
        PartyMember2NameWidth = Val(GetVar(filename, "InGame", "PartyMember2NameWidth"))
        PartyMember2NameHeight = Val(GetVar(filename, "InGame", "PartyMember2NameHeight"))
                'PartyMember2HPBar
        PartyMember2HPBarX = Val(GetVar(filename, "InGame", "PartyMember2HPBarX"))
        PartyMember2HPBarY = Val(GetVar(filename, "InGame", "PartyMember2HPBarY"))
        PartyMember2HPBarWidth = Val(GetVar(filename, "InGame", "PartyMember2HPBarWidth"))
        PartyMember2HPBarHeight = Val(GetVar(filename, "InGame", "PartyMember2HPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember2HPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember2HPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember2HPBarImage")) & ".png"
            PartyMember2HPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember2HPBarImage
        End If
                'PartyMember2MPBar
        PartyMember2MPBarX = Val(GetVar(filename, "InGame", "PartyMember2MPBarX"))
        PartyMember2MPBarY = Val(GetVar(filename, "InGame", "PartyMember2MPBarY"))
        PartyMember2MPBarWidth = Val(GetVar(filename, "InGame", "PartyMember2MPBarWidth"))
        PartyMember2MPBarHeight = Val(GetVar(filename, "InGame", "PartyMember2MPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember2MPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember2MPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember2MPBarImage")) & ".png"
            PartyMember2MPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember2MPBarImage
        End If
                'PartyMember3Name
        PartyMember3NameX = Val(GetVar(filename, "InGame", "PartyMember3NameX"))
        PartyMember3NameY = Val(GetVar(filename, "InGame", "PartyMember3NameY"))
        PartyMember3NameWidth = Val(GetVar(filename, "InGame", "PartyMember3NameWidth"))
        PartyMember3NameHeight = Val(GetVar(filename, "InGame", "PartyMember3NameHeight"))
                'PartyMember3HPBar
        PartyMember3HPBarX = Val(GetVar(filename, "InGame", "PartyMember3HPBarX"))
        PartyMember3HPBarY = Val(GetVar(filename, "InGame", "PartyMember3HPBarY"))
        PartyMember3HPBarWidth = Val(GetVar(filename, "InGame", "PartyMember3HPBarWidth"))
        PartyMember3HPBarHeight = Val(GetVar(filename, "InGame", "PartyMember3HPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember3HPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember3HPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember3HPBarImage")) & ".png"
            PartyMember3HPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember3HPBarImage
        End If
                'PartyMember3MPBar
        PartyMember3MPBarX = Val(GetVar(filename, "InGame", "PartyMember3MPBarX"))
        PartyMember3MPBarY = Val(GetVar(filename, "InGame", "PartyMember3MPBarY"))
        PartyMember3MPBarWidth = Val(GetVar(filename, "InGame", "PartyMember3MPBarWidth"))
        PartyMember3MPBarHeight = Val(GetVar(filename, "InGame", "PartyMember3MPBarHeight"))
        If Val(GetVar(filename, "InGame", "PartyMember3MPBarImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyMember3MPBarImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyMember3MPBarImage")) & ".png"
            PartyMember3MPBarImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyMember3MPBarImage
        End If
            'PartyInviteBtn
        PartyInviteBtnX = Val(GetVar(filename, "InGame", "PartyInviteBtnX"))
        PartyInviteBtnY = Val(GetVar(filename, "InGame", "PartyInviteBtnY"))
        PartyInviteBtnWidth = Val(GetVar(filename, "InGame", "PartyInviteBtnWidth"))
        PartyInviteBtnHeight = Val(GetVar(filename, "InGame", "PartyInviteBtnHeight"))
        If Val(GetVar(filename, "InGame", "PartyInviteBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyInviteBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyInviteBtnNormImage")) & ".png"
            PartyInviteBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyInviteBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "PartyInviteBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyInviteBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyInviteBtnclickimage")) & ".png"
            PartyInviteBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyInviteBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "PartyInviteBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyInviteBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyInviteBtnhoverimage")) & ".png"
            PartyInviteBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyInviteBtnHoverImage
        End If
            'PartyLeaveBtn
        PartyLeaveBtnX = Val(GetVar(filename, "InGame", "PartyLeaveBtnX"))
        PartyLeaveBtnY = Val(GetVar(filename, "InGame", "PartyLeaveBtnY"))
        PartyLeaveBtnWidth = Val(GetVar(filename, "InGame", "PartyLeaveBtnWidth"))
        PartyLeaveBtnHeight = Val(GetVar(filename, "InGame", "PartyLeaveBtnHeight"))
        If Val(GetVar(filename, "InGame", "PartyLeaveBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyLeaveBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyLeaveBtnNormImage")) & ".png"
            PartyLeaveBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyLeaveBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "PartyLeaveBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyLeaveBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyLeaveBtnclickimage")) & ".png"
            PartyLeaveBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyLeaveBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "PartyLeaveBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PartyLeaveBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PartyLeaveBtnhoverimage")) & ".png"
            PartyLeaveBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure PartyLeaveBtnHoverImage
        End If
                'ClosePartyBtn
        ClosePartyBtnX = Val(GetVar(filename, "InGame", "ClosePartyBtnX"))
        ClosePartyBtnY = Val(GetVar(filename, "InGame", "ClosePartyBtnY"))
        ClosePartyBtnWidth = Val(GetVar(filename, "InGame", "ClosePartyBtnWidth"))
        ClosePartyBtnHeight = Val(GetVar(filename, "InGame", "ClosePartyBtnHeight"))
        If Val(GetVar(filename, "InGame", "ClosePartyBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ClosePartyBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ClosePartyBtnNormImage")) & ".png"
            ClosePartyBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ClosePartyBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ClosePartyBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ClosePartyBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ClosePartyBtnclickimage")) & ".png"
            ClosePartyBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ClosePartyBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ClosePartyBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ClosePartyBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ClosePartyBtnhoverimage")) & ".png"
            ClosePartyBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ClosePartyBtnHoverImage
        End If
                'FriendsPnl
        FriendsPnlX = Val(GetVar(filename, "InGame", "FriendsPnlX"))
        FriendsPnlY = Val(GetVar(filename, "InGame", "FriendsPnlY"))
        FriendsPnlWidth = Val(GetVar(filename, "InGame", "FriendsPnlWidth"))
        FriendsPnlHeight = Val(GetVar(filename, "InGame", "FriendsPnlHeight"))
        If Val(GetVar(filename, "InGame", "FriendsPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsPnlImage")) & ".png"
            FriendsPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsPnlImage
        End If
                'FriendsList
        FriendsListX = Val(GetVar(filename, "InGame", "FriendsListX"))
        FriendsListY = Val(GetVar(filename, "InGame", "FriendsListY"))
        FriendsListWidth = Val(GetVar(filename, "InGame", "FriendsListWidth"))
        FriendsListHeight = Val(GetVar(filename, "InGame", "FriendsListHeight"))
                'FriendsUpBtn
        FriendsUpBtnX = Val(GetVar(filename, "InGame", "FriendsUpBtnX"))
        FriendsUpBtnY = Val(GetVar(filename, "InGame", "FriendsUpBtnY"))
        FriendsUpBtnWidth = Val(GetVar(filename, "InGame", "FriendsUpBtnWidth"))
        FriendsUpBtnHeight = Val(GetVar(filename, "InGame", "FriendsUpBtnHeight"))
        If Val(GetVar(filename, "InGame", "FriendsUpBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsUpBtnNormImage")) & ".png"
            FriendsUpBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsUpBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsUpBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsUpBtnclickimage")) & ".png"
            FriendsUpBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsUpBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsUpBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsUpBtnhoverimage")) & ".png"
            FriendsUpBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsUpBtnHoverImage
        End If
                'FriendsDownBtn
        FriendsDownBtnX = Val(GetVar(filename, "InGame", "FriendsDownBtnX"))
        FriendsDownBtnY = Val(GetVar(filename, "InGame", "FriendsDownBtnY"))
        FriendsDownBtnWidth = Val(GetVar(filename, "InGame", "FriendsDownBtnWidth"))
        FriendsDownBtnHeight = Val(GetVar(filename, "InGame", "FriendsDownBtnHeight"))
        If Val(GetVar(filename, "InGame", "FriendsDownBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsDownBtnNormImage")) & ".png"
            FriendsDownBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsDownBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsDownBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsDownBtnclickimage")) & ".png"
            FriendsDownBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsDownBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "FriendsDownBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            FriendsDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "FriendsDownBtnhoverimage")) & ".png"
            FriendsDownBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure FriendsDownBtnHoverImage
        End If
                'AddFriendBtn
        AddFriendBtnX = Val(GetVar(filename, "InGame", "AddFriendBtnX"))
        AddFriendBtnY = Val(GetVar(filename, "InGame", "AddFriendBtnY"))
        AddFriendBtnWidth = Val(GetVar(filename, "InGame", "AddFriendBtnWidth"))
        AddFriendBtnHeight = Val(GetVar(filename, "InGame", "AddFriendBtnHeight"))
        If Val(GetVar(filename, "InGame", "AddFriendBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddFriendBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddFriendBtnNormImage")) & ".png"
            AddFriendBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddFriendBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AddFriendBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddFriendBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddFriendBtnclickimage")) & ".png"
            AddFriendBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddFriendBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AddFriendBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AddFriendBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AddFriendBtnhoverimage")) & ".png"
            AddFriendBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AddFriendBtnHoverImage
        End If
                'DelFriendBtn
        DelFriendBtnX = Val(GetVar(filename, "InGame", "DelFriendBtnX"))
        DelFriendBtnY = Val(GetVar(filename, "InGame", "DelFriendBtnY"))
        DelFriendBtnWidth = Val(GetVar(filename, "InGame", "DelFriendBtnWidth"))
        DelFriendBtnHeight = Val(GetVar(filename, "InGame", "DelFriendBtnHeight"))
        If Val(GetVar(filename, "InGame", "DelFriendBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelFriendBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DelFriendBtnNormImage")) & ".png"
            DelFriendBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DelFriendBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DelFriendBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelFriendBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DelFriendBtnclickimage")) & ".png"
            DelFriendBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DelFriendBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DelFriendBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DelFriendBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DelFriendBtnhoverimage")) & ".png"
            DelFriendBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DelFriendBtnHoverImage
        End If
                'CloseFriendsBtn
        CloseFriendsBtnX = Val(GetVar(filename, "InGame", "CloseFriendsBtnX"))
        CloseFriendsBtnY = Val(GetVar(filename, "InGame", "CloseFriendsBtnY"))
        CloseFriendsBtnWidth = Val(GetVar(filename, "InGame", "CloseFriendsBtnWidth"))
        CloseFriendsBtnHeight = Val(GetVar(filename, "InGame", "CloseFriendsBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseFriendsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseFriendsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseFriendsBtnNormImage")) & ".png"
            CloseFriendsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseFriendsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseFriendsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseFriendsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseFriendsBtnclickimage")) & ".png"
            CloseFriendsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseFriendsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseFriendsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseFriendsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseFriendsBtnhoverimage")) & ".png"
            CloseFriendsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseFriendsBtnHoverImage
        End If
                'QuestsPnl
        QuestsPnlX = Val(GetVar(filename, "InGame", "QuestsPnlX"))
        QuestsPnlY = Val(GetVar(filename, "InGame", "QuestsPnlY"))
        QuestsPnlWidth = Val(GetVar(filename, "InGame", "QuestsPnlWidth"))
        QuestsPnlHeight = Val(GetVar(filename, "InGame", "QuestsPnlHeight"))
        If Val(GetVar(filename, "InGame", "QuestsPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestsPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestsPnlImage")) & ".png"
            QuestsPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestsPnlImage
        End If
                'QuestList
        QuestListX = Val(GetVar(filename, "InGame", "QuestListX"))
        QuestListY = Val(GetVar(filename, "InGame", "QuestListY"))
        QuestListWidth = Val(GetVar(filename, "InGame", "QuestListWidth"))
        QuestListHeight = Val(GetVar(filename, "InGame", "QuestListHeight"))
                'QuestUpBtn
        QuestUpBtnX = Val(GetVar(filename, "InGame", "QuestUpBtnX"))
        QuestUpBtnY = Val(GetVar(filename, "InGame", "QuestUpBtnY"))
        QuestUpBtnWidth = Val(GetVar(filename, "InGame", "QuestUpBtnWidth"))
        QuestUpBtnHeight = Val(GetVar(filename, "InGame", "QuestUpBtnHeight"))
        If Val(GetVar(filename, "InGame", "QuestUpBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestUpBtnNormImage")) & ".png"
            QuestUpBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestUpBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "QuestUpBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestUpBtnclickimage")) & ".png"
            QuestUpBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestUpBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "QuestUpBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestUpBtnhoverimage")) & ".png"
            QuestUpBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestUpBtnHoverImage
        End If
                'QuestDownBtn
        QuestDownBtnX = Val(GetVar(filename, "InGame", "QuestDownBtnX"))
        QuestDownBtnY = Val(GetVar(filename, "InGame", "QuestDownBtnY"))
        QuestDownBtnWidth = Val(GetVar(filename, "InGame", "QuestDownBtnWidth"))
        QuestDownBtnHeight = Val(GetVar(filename, "InGame", "QuestDownBtnHeight"))
        If Val(GetVar(filename, "InGame", "QuestDownBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestDownBtnNormImage")) & ".png"
            QuestDownBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestDownBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "QuestDownBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestDownBtnclickimage")) & ".png"
            QuestDownBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestDownBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "QuestDownBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestDownBtnhoverimage")) & ".png"
            QuestDownBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestDownBtnHoverImage
        End If
                'QuestInfoBtn
        QuestInfoBtnX = Val(GetVar(filename, "InGame", "QuestInfoBtnX"))
        QuestInfoBtnY = Val(GetVar(filename, "InGame", "QuestInfoBtnY"))
        QuestInfoBtnWidth = Val(GetVar(filename, "InGame", "QuestInfoBtnWidth"))
        QuestInfoBtnHeight = Val(GetVar(filename, "InGame", "QuestInfoBtnHeight"))
        If Val(GetVar(filename, "InGame", "QuestInfoBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestInfoBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestInfoBtnNormImage")) & ".png"
            QuestInfoBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestInfoBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "QuestInfoBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestInfoBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestInfoBtnclickimage")) & ".png"
            QuestInfoBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestInfoBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "QuestInfoBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestInfoBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestInfoBtnhoverimage")) & ".png"
            QuestInfoBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestInfoBtnHoverImage
        End If
                'CloseQuestsBtn
        CloseQuestsBtnX = Val(GetVar(filename, "InGame", "CloseQuestsBtnX"))
        CloseQuestsBtnY = Val(GetVar(filename, "InGame", "CloseQuestsBtnY"))
        CloseQuestsBtnWidth = Val(GetVar(filename, "InGame", "CloseQuestsBtnWidth"))
        CloseQuestsBtnHeight = Val(GetVar(filename, "InGame", "CloseQuestsBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseQuestsBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestsBtnNormImage")) & ".png"
            CloseQuestsBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestsBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseQuestsBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestsBtnclickimage")) & ".png"
            CloseQuestsBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestsBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseQuestsBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestsBtnhoverimage")) & ".png"
            CloseQuestsBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestsBtnHoverImage
        End If
                'BankPnl
        BankPnlX = Val(GetVar(filename, "InGame", "BankPnlX"))
        BankPnlY = Val(GetVar(filename, "InGame", "BankPnlY"))
        BankPnlWidth = Val(GetVar(filename, "InGame", "BankPnlWidth"))
        BankPnlHeight = Val(GetVar(filename, "InGame", "BankPnlHeight"))
        If Val(GetVar(filename, "InGame", "BankPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            BankPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "BankPnlImage")) & ".png"
            BankPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure BankPnlImage
        End If
                'BankItems
        BankItemsX = Val(GetVar(filename, "InGame", "BankItemsX"))
        BankItemsY = Val(GetVar(filename, "InGame", "BankItemsY"))
        BankItemsWidth = Val(GetVar(filename, "InGame", "BankItemsWidth"))
        BankItemsHeight = Val(GetVar(filename, "InGame", "BankItemsHeight"))
                'CloseBankBtn
        CloseBankBtnX = Val(GetVar(filename, "InGame", "CloseBankBtnX"))
        CloseBankBtnY = Val(GetVar(filename, "InGame", "CloseBankBtnY"))
        CloseBankBtnWidth = Val(GetVar(filename, "InGame", "CloseBankBtnWidth"))
        CloseBankBtnHeight = Val(GetVar(filename, "InGame", "CloseBankBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseBankBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseBankBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseBankBtnNormImage")) & ".png"
            CloseBankBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseBankBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseBankBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseBankBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseBankBtnclickimage")) & ".png"
            CloseBankBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseBankBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseBankBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseBankBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseBankBtnhoverimage")) & ".png"
            CloseBankBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseBankBtnHoverImage
        End If
                'ShopPnl
        ShopPnlX = Val(GetVar(filename, "InGame", "ShopPnlX"))
        ShopPnlY = Val(GetVar(filename, "InGame", "ShopPnlY"))
        ShopPnlWidth = Val(GetVar(filename, "InGame", "ShopPnlWidth"))
        ShopPnlHeight = Val(GetVar(filename, "InGame", "ShopPnlHeight"))
        If Val(GetVar(filename, "InGame", "ShopPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ShopPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ShopPnlImage")) & ".png"
            ShopPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ShopPnlImage
        End If
                'ShopItems
        ShopItemsX = Val(GetVar(filename, "InGame", "ShopItemsX"))
        ShopItemsY = Val(GetVar(filename, "InGame", "ShopItemsY"))
        ShopItemsWidth = Val(GetVar(filename, "InGame", "ShopItemsWidth"))
        ShopItemsHeight = Val(GetVar(filename, "InGame", "ShopItemsHeight"))
                'CloseShopBtn
        CloseShopBtnX = Val(GetVar(filename, "InGame", "CloseShopBtnX"))
        CloseShopBtnY = Val(GetVar(filename, "InGame", "CloseShopBtnY"))
        CloseShopBtnWidth = Val(GetVar(filename, "InGame", "CloseShopBtnWidth"))
        CloseShopBtnHeight = Val(GetVar(filename, "InGame", "CloseShopBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseShopBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseShopBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseShopBtnNormImage")) & ".png"
            CloseShopBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseShopBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseShopBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseShopBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseShopBtnclickimage")) & ".png"
            CloseShopBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseShopBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseShopBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseShopBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseShopBtnhoverimage")) & ".png"
            CloseShopBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseShopBtnHoverImage
        End If
                'ItemDescPnl
        ItemDescPnlX = Val(GetVar(filename, "InGame", "ItemDescPnlX"))
        ItemDescPnlY = Val(GetVar(filename, "InGame", "ItemDescPnlY"))
        ItemDescPnlWidth = Val(GetVar(filename, "InGame", "ItemDescPnlWidth"))
        ItemDescPnlHeight = Val(GetVar(filename, "InGame", "ItemDescPnlHeight"))
        If Val(GetVar(filename, "InGame", "ItemDescPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ItemDescPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ItemDescPnlImage")) & ".png"
            ItemDescPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ItemDescPnlImage
        End If
                'ItemDescNameLbl
        ItemDescNameLblX = Val(GetVar(filename, "InGame", "ItemDescNameLblX"))
        ItemDescNameLblY = Val(GetVar(filename, "InGame", "ItemDescNameLblY"))
        ItemDescNameLblWidth = Val(GetVar(filename, "InGame", "ItemDescNameLblWidth"))
        ItemDescNameLblHeight = Val(GetVar(filename, "InGame", "ItemDescNameLblHeight"))
                'ItemDescIcon
        ItemDescIconX = Val(GetVar(filename, "InGame", "ItemDescIconX"))
        ItemDescIconY = Val(GetVar(filename, "InGame", "ItemDescIconY"))
        ItemDescIconWidth = Val(GetVar(filename, "InGame", "ItemDescIconWidth"))
        ItemDescIconHeight = Val(GetVar(filename, "InGame", "ItemDescIconHeight"))
                'ItemClassReqLbl
        ItemClassReqLblX = Val(GetVar(filename, "InGame", "ItemClassReqLblX"))
        ItemClassReqLblY = Val(GetVar(filename, "InGame", "ItemClassReqLblY"))
        ItemClassReqLblWidth = Val(GetVar(filename, "InGame", "ItemClassReqLblWidth"))
        ItemClassReqLblHeight = Val(GetVar(filename, "InGame", "ItemClassReqLblHeight"))
                'ItemLevelReqLbl
        ItemLevelReqLblX = Val(GetVar(filename, "InGame", "ItemLevelReqLblX"))
        ItemLevelReqLblY = Val(GetVar(filename, "InGame", "ItemLevelReqLblY"))
        ItemLevelReqLblWidth = Val(GetVar(filename, "InGame", "ItemLevelReqLblWidth"))
        ItemLevelReqLblHeight = Val(GetVar(filename, "InGame", "ItemLevelReqLblHeight"))
                'ItemDesc1
        ItemDesc1X = Val(GetVar(filename, "InGame", "ItemDesc1X"))
        ItemDesc1Y = Val(GetVar(filename, "InGame", "ItemDesc1Y"))
        ItemDesc1Width = Val(GetVar(filename, "InGame", "ItemDesc1Width"))
        ItemDesc1Height = Val(GetVar(filename, "InGame", "ItemDesc1Height"))
                'ItemDesc2
        ItemDesc2X = Val(GetVar(filename, "InGame", "ItemDesc2X"))
        ItemDesc2Y = Val(GetVar(filename, "InGame", "ItemDesc2Y"))
        ItemDesc2Width = Val(GetVar(filename, "InGame", "ItemDesc2Width"))
        ItemDesc2Height = Val(GetVar(filename, "InGame", "ItemDesc2Height"))
                'ItemDesc3
        ItemDesc3X = Val(GetVar(filename, "InGame", "ItemDesc3X"))
        ItemDesc3Y = Val(GetVar(filename, "InGame", "ItemDesc3Y"))
        ItemDesc3Width = Val(GetVar(filename, "InGame", "ItemDesc3Width"))
        ItemDesc3Height = Val(GetVar(filename, "InGame", "ItemDesc3Height"))
                'ItemDesc4
        ItemDesc4X = Val(GetVar(filename, "InGame", "ItemDesc4X"))
        ItemDesc4Y = Val(GetVar(filename, "InGame", "ItemDesc4Y"))
        ItemDesc4Width = Val(GetVar(filename, "InGame", "ItemDesc4Width"))
        ItemDesc4Height = Val(GetVar(filename, "InGame", "ItemDesc4Height"))
                'ItemDesc5
        ItemDesc5X = Val(GetVar(filename, "InGame", "ItemDesc5X"))
        ItemDesc5Y = Val(GetVar(filename, "InGame", "ItemDesc5Y"))
        ItemDesc5Width = Val(GetVar(filename, "InGame", "ItemDesc5Width"))
        ItemDesc5Height = Val(GetVar(filename, "InGame", "ItemDesc5Height"))
                'ItemDesc6
        ItemDesc6X = Val(GetVar(filename, "InGame", "ItemDesc6X"))
        ItemDesc6Y = Val(GetVar(filename, "InGame", "ItemDesc6Y"))
        ItemDesc6Width = Val(GetVar(filename, "InGame", "ItemDesc6Width"))
        ItemDesc6Height = Val(GetVar(filename, "InGame", "ItemDesc6Height"))
                'ItemDesc7
        ItemDesc7X = Val(GetVar(filename, "InGame", "ItemDesc7X"))
        ItemDesc7Y = Val(GetVar(filename, "InGame", "ItemDesc7Y"))
        ItemDesc7Width = Val(GetVar(filename, "InGame", "ItemDesc7Width"))
        ItemDesc7Height = Val(GetVar(filename, "InGame", "ItemDesc7Height"))
                'ItemDesc8
        ItemDesc8X = Val(GetVar(filename, "InGame", "ItemDesc8X"))
        ItemDesc8Y = Val(GetVar(filename, "InGame", "ItemDesc8Y"))
        ItemDesc8Width = Val(GetVar(filename, "InGame", "ItemDesc8Width"))
        ItemDesc8Height = Val(GetVar(filename, "InGame", "ItemDesc8Height"))
                'SpellDescPnl
        SpellDescPnlX = Val(GetVar(filename, "InGame", "SpellDescPnlX"))
        SpellDescPnlY = Val(GetVar(filename, "InGame", "SpellDescPnlY"))
        SpellDescPnlWidth = Val(GetVar(filename, "InGame", "SpellDescPnlWidth"))
        SpellDescPnlHeight = Val(GetVar(filename, "InGame", "SpellDescPnlHeight"))
        If Val(GetVar(filename, "InGame", "SpellDescPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SpellDescPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SpellDescPnlImage")) & ".png"
            SpellDescPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SpellDescPnlImage
        End If
                'SpellDescNameLbl
        SpellDescNameLblX = Val(GetVar(filename, "InGame", "SpellDescNameLblX"))
        SpellDescNameLblY = Val(GetVar(filename, "InGame", "SpellDescNameLblY"))
        SpellDescNameLblWidth = Val(GetVar(filename, "InGame", "SpellDescNameLblWidth"))
        SpellDescNameLblHeight = Val(GetVar(filename, "InGame", "SpellDescNameLblHeight"))
                'SpellDescIcon
        SpellDescIconX = Val(GetVar(filename, "InGame", "SpellDescIconX"))
        SpellDescIconY = Val(GetVar(filename, "InGame", "SpellDescIconY"))
        SpellDescIconWidth = Val(GetVar(filename, "InGame", "SpellDescIconWidth"))
        SpellDescIconHeight = Val(GetVar(filename, "InGame", "SpellDescIconHeight"))
                'SpellDesc1
        SpellDesc1X = Val(GetVar(filename, "InGame", "SpellDesc1X"))
        SpellDesc1Y = Val(GetVar(filename, "InGame", "SpellDesc1Y"))
        SpellDesc1Width = Val(GetVar(filename, "InGame", "SpellDesc1Width"))
        SpellDesc1Height = Val(GetVar(filename, "InGame", "SpellDesc1Height"))
                'SpellDesc2
        SpellDesc2X = Val(GetVar(filename, "InGame", "SpellDesc2X"))
        SpellDesc2Y = Val(GetVar(filename, "InGame", "SpellDesc2Y"))
        SpellDesc2Width = Val(GetVar(filename, "InGame", "SpellDesc2Width"))
        SpellDesc2Height = Val(GetVar(filename, "InGame", "SpellDesc2Height"))
                'SpellDesc3
        SpellDesc3X = Val(GetVar(filename, "InGame", "SpellDesc3X"))
        SpellDesc3Y = Val(GetVar(filename, "InGame", "SpellDesc3Y"))
        SpellDesc3Width = Val(GetVar(filename, "InGame", "SpellDesc3Width"))
        SpellDesc3Height = Val(GetVar(filename, "InGame", "SpellDesc3Height"))
                'SpellDesc4
        SpellDesc4X = Val(GetVar(filename, "InGame", "SpellDesc4X"))
        SpellDesc4Y = Val(GetVar(filename, "InGame", "SpellDesc4Y"))
        SpellDesc4Width = Val(GetVar(filename, "InGame", "SpellDesc4Width"))
        SpellDesc4Height = Val(GetVar(filename, "InGame", "SpellDesc4Height"))
                'SpellDesc5
        SpellDesc5X = Val(GetVar(filename, "InGame", "SpellDesc5X"))
        SpellDesc5Y = Val(GetVar(filename, "InGame", "SpellDesc5Y"))
        SpellDesc5Width = Val(GetVar(filename, "InGame", "SpellDesc5Width"))
        SpellDesc5Height = Val(GetVar(filename, "InGame", "SpellDesc5Height"))
                'SpellDesc6
        SpellDesc6X = Val(GetVar(filename, "InGame", "SpellDesc6X"))
        SpellDesc6Y = Val(GetVar(filename, "InGame", "SpellDesc6Y"))
        SpellDesc6Width = Val(GetVar(filename, "InGame", "SpellDesc6Width"))
        SpellDesc6Height = Val(GetVar(filename, "InGame", "SpellDesc6Height"))
                'SpellDesc7
        SpellDesc7X = Val(GetVar(filename, "InGame", "SpellDesc7X"))
        SpellDesc7Y = Val(GetVar(filename, "InGame", "SpellDesc7Y"))
        SpellDesc7Width = Val(GetVar(filename, "InGame", "SpellDesc7Width"))
        SpellDesc7Height = Val(GetVar(filename, "InGame", "SpellDesc7Height"))
                'SpellDesc8
        SpellDesc8X = Val(GetVar(filename, "InGame", "SpellDesc8X"))
        SpellDesc8Y = Val(GetVar(filename, "InGame", "SpellDesc8Y"))
        SpellDesc8Width = Val(GetVar(filename, "InGame", "SpellDesc8Width"))
        SpellDesc8Height = Val(GetVar(filename, "InGame", "SpellDesc8Height"))
                'TradePnl
        TradePnlX = Val(GetVar(filename, "InGame", "TradePnlX"))
        TradePnlY = Val(GetVar(filename, "InGame", "TradePnlY"))
        TradePnlWidth = Val(GetVar(filename, "InGame", "TradePnlWidth"))
        TradePnlHeight = Val(GetVar(filename, "InGame", "TradePnlHeight"))
        If Val(GetVar(filename, "InGame", "TradePnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TradePnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TradePnlImage")) & ".png"
            TradePnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TradePnlImage
        End If
                'YourTradePnl
        YourTradePnlX = Val(GetVar(filename, "InGame", "YourTradePnlX"))
        YourTradePnlY = Val(GetVar(filename, "InGame", "YourTradePnlY"))
        YourTradePnlWidth = Val(GetVar(filename, "InGame", "YourTradePnlWidth"))
        YourTradePnlHeight = Val(GetVar(filename, "InGame", "YourTradePnlHeight"))
                'TheirTradePnl
        TheirTradePnlX = Val(GetVar(filename, "InGame", "TheirTradePnlX"))
        TheirTradePnlY = Val(GetVar(filename, "InGame", "TheirTradePnlY"))
        TheirTradePnlWidth = Val(GetVar(filename, "InGame", "TheirTradePnlWidth"))
        TheirTradePnlHeight = Val(GetVar(filename, "InGame", "TheirTradePnlHeight"))
                'TradeStatusLbl
        TradeStatusLblX = Val(GetVar(filename, "InGame", "TradeStatusLblX"))
        TradeStatusLblY = Val(GetVar(filename, "InGame", "TradeStatusLblY"))
        TradeStatusLblWidth = Val(GetVar(filename, "InGame", "TradeStatusLblWidth"))
        TradeStatusLblHeight = Val(GetVar(filename, "InGame", "TradeStatusLblHeight"))
                'YourWorthLbl
        YourWorthLblX = Val(GetVar(filename, "InGame", "YourWorthLblX"))
        YourWorthLblY = Val(GetVar(filename, "InGame", "YourWorthLblY"))
        YourWorthLblWidth = Val(GetVar(filename, "InGame", "YourWorthLblWidth"))
        YourWorthLblHeight = Val(GetVar(filename, "InGame", "YourWorthLblHeight"))
                'TheirWorthLbl
        TheirWorthLblX = Val(GetVar(filename, "InGame", "TheirWorthLblX"))
        TheirWorthLblY = Val(GetVar(filename, "InGame", "TheirWorthLblY"))
        TheirWorthLblWidth = Val(GetVar(filename, "InGame", "TheirWorthLblWidth"))
        TheirWorthLblHeight = Val(GetVar(filename, "InGame", "TheirWorthLblHeight"))
                'AcceptTradeBtn
        AcceptTradeBtnX = Val(GetVar(filename, "InGame", "AcceptTradeBtnX"))
        AcceptTradeBtnY = Val(GetVar(filename, "InGame", "AcceptTradeBtnY"))
        AcceptTradeBtnWidth = Val(GetVar(filename, "InGame", "AcceptTradeBtnWidth"))
        AcceptTradeBtnHeight = Val(GetVar(filename, "InGame", "AcceptTradeBtnHeight"))
        If Val(GetVar(filename, "InGame", "AcceptTradeBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AcceptTradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AcceptTradeBtnNormImage")) & ".png"
            AcceptTradeBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AcceptTradeBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "AcceptTradeBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AcceptTradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AcceptTradeBtnclickimage")) & ".png"
            AcceptTradeBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AcceptTradeBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "AcceptTradeBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            AcceptTradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "AcceptTradeBtnhoverimage")) & ".png"
            AcceptTradeBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure AcceptTradeBtnHoverImage
        End If
                'DeclineTradeBtn
        DeclineTradeBtnX = Val(GetVar(filename, "InGame", "DeclineTradeBtnX"))
        DeclineTradeBtnY = Val(GetVar(filename, "InGame", "DeclineTradeBtnY"))
        DeclineTradeBtnWidth = Val(GetVar(filename, "InGame", "DeclineTradeBtnWidth"))
        DeclineTradeBtnHeight = Val(GetVar(filename, "InGame", "DeclineTradeBtnHeight"))
        If Val(GetVar(filename, "InGame", "DeclineTradeBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DeclineTradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DeclineTradeBtnNormImage")) & ".png"
            DeclineTradeBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DeclineTradeBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DeclineTradeBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DeclineTradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DeclineTradeBtnclickimage")) & ".png"
            DeclineTradeBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DeclineTradeBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DeclineTradeBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DeclineTradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DeclineTradeBtnhoverimage")) & ".png"
            DeclineTradeBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DeclineTradeBtnHoverImage
        End If
                'DialoguePanel
        DialoguePanelX = Val(GetVar(filename, "InGame", "DialoguePanelX"))
        DialoguePanelY = Val(GetVar(filename, "InGame", "DialoguePanelY"))
        DialoguePanelWidth = Val(GetVar(filename, "InGame", "DialoguePanelWidth"))
        DialoguePanelHeight = Val(GetVar(filename, "InGame", "DialoguePanelHeight"))
        If Val(GetVar(filename, "InGame", "DialoguePanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialoguePanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialoguePanelImage")) & ".png"
            DialoguePanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialoguePanelImage
        End If
                'DialogueTitle
        DialogueTitleX = Val(GetVar(filename, "InGame", "DialogueTitleX"))
        DialogueTitleY = Val(GetVar(filename, "InGame", "DialogueTitleY"))
        DialogueTitleWidth = Val(GetVar(filename, "InGame", "DialogueTitleWidth"))
        DialogueTitleHeight = Val(GetVar(filename, "InGame", "DialogueTitleHeight"))
                'DialogueContent
        DialogueContentX = Val(GetVar(filename, "InGame", "DialogueContentX"))
        DialogueContentY = Val(GetVar(filename, "InGame", "DialogueContentY"))
        DialogueContentWidth = Val(GetVar(filename, "InGame", "DialogueContentWidth"))
        DialogueContentHeight = Val(GetVar(filename, "InGame", "DialogueContentHeight"))
                'DialogueYesBtn
        DialogueYesBtnX = Val(GetVar(filename, "InGame", "DialogueYesBtnX"))
        DialogueYesBtnY = Val(GetVar(filename, "InGame", "DialogueYesBtnY"))
        DialogueYesBtnWidth = Val(GetVar(filename, "InGame", "DialogueYesBtnWidth"))
        DialogueYesBtnHeight = Val(GetVar(filename, "InGame", "DialogueYesBtnHeight"))
        If Val(GetVar(filename, "InGame", "DialogueYesBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueYesBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueYesBtnNormImage")) & ".png"
            DialogueYesBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueYesBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueYesBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueYesBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueYesBtnclickimage")) & ".png"
            DialogueYesBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueYesBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueYesBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueYesBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueYesBtnhoverimage")) & ".png"
            DialogueYesBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueYesBtnHoverImage
        End If
                'DialogueNoBtn
        DialogueNoBtnX = Val(GetVar(filename, "InGame", "DialogueNoBtnX"))
        DialogueNoBtnY = Val(GetVar(filename, "InGame", "DialogueNoBtnY"))
        DialogueNoBtnWidth = Val(GetVar(filename, "InGame", "DialogueNoBtnWidth"))
        DialogueNoBtnHeight = Val(GetVar(filename, "InGame", "DialogueNoBtnHeight"))
        If Val(GetVar(filename, "InGame", "DialogueNoBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueNoBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueNoBtnNormImage")) & ".png"
            DialogueNoBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueNoBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueNoBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueNoBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueNoBtnclickimage")) & ".png"
            DialogueNoBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueNoBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueNoBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueNoBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueNoBtnhoverimage")) & ".png"
            DialogueNoBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueNoBtnHoverImage
        End If
                'DialogueOkayBtn
        DialogueOkayBtnX = Val(GetVar(filename, "InGame", "DialogueOkayBtnX"))
        DialogueOkayBtnY = Val(GetVar(filename, "InGame", "DialogueOkayBtnY"))
        DialogueOkayBtnWidth = Val(GetVar(filename, "InGame", "DialogueOkayBtnWidth"))
        DialogueOkayBtnHeight = Val(GetVar(filename, "InGame", "DialogueOkayBtnHeight"))
        If Val(GetVar(filename, "InGame", "DialogueOkayBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueOkayBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueOkayBtnNormImage")) & ".png"
            DialogueOkayBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueOkayBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueOkayBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueOkayBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueOkayBtnclickimage")) & ".png"
            DialogueOkayBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueOkayBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DialogueOkayBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DialogueOkayBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DialogueOkayBtnhoverimage")) & ".png"
            DialogueOkayBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DialogueOkayBtnHoverImage
        End If
                'CurrencyPanel
        CurrencyPanelX = Val(GetVar(filename, "InGame", "CurrencyPanelX"))
        CurrencyPanelY = Val(GetVar(filename, "InGame", "CurrencyPanelY"))
        CurrencyPanelWidth = Val(GetVar(filename, "InGame", "CurrencyPanelWidth"))
        CurrencyPanelHeight = Val(GetVar(filename, "InGame", "CurrencyPanelHeight"))
        If Val(GetVar(filename, "InGame", "CurrencyPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyPanelImage")) & ".png"
            CurrencyPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyPanelImage
        End If
                'CurrencyPrompt
        CurrencyPromptX = Val(GetVar(filename, "InGame", "CurrencyPromptX"))
        CurrencyPromptY = Val(GetVar(filename, "InGame", "CurrencyPromptY"))
        CurrencyPromptWidth = Val(GetVar(filename, "InGame", "CurrencyPromptWidth"))
        CurrencyPromptHeight = Val(GetVar(filename, "InGame", "CurrencyPromptHeight"))
                'CurrencyInput
        CurrencyInputX = Val(GetVar(filename, "InGame", "CurrencyInputX"))
        CurrencyInputY = Val(GetVar(filename, "InGame", "CurrencyInputY"))
        CurrencyInputWidth = Val(GetVar(filename, "InGame", "CurrencyInputWidth"))
        CurrencyInputHeight = Val(GetVar(filename, "InGame", "CurrencyInputHeight"))
                'CurrencyOkBtn
        CurrencyOkBtnX = Val(GetVar(filename, "InGame", "CurrencyOkBtnX"))
        CurrencyOkBtnY = Val(GetVar(filename, "InGame", "CurrencyOkBtnY"))
        CurrencyOkBtnWidth = Val(GetVar(filename, "InGame", "CurrencyOkBtnWidth"))
        CurrencyOkBtnHeight = Val(GetVar(filename, "InGame", "CurrencyOkBtnHeight"))
        If Val(GetVar(filename, "InGame", "CurrencyOkBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyOkBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyOkBtnNormImage")) & ".png"
            CurrencyOkBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyOkBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CurrencyOkBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyOkBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyOkBtnclickimage")) & ".png"
            CurrencyOkBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyOkBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CurrencyOkBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyOkBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyOkBtnhoverimage")) & ".png"
            CurrencyOkBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyOkBtnHoverImage
        End If
                'CurrencyCancelBtn
        CurrencyCancelBtnX = Val(GetVar(filename, "InGame", "CurrencyCancelBtnX"))
        CurrencyCancelBtnY = Val(GetVar(filename, "InGame", "CurrencyCancelBtnY"))
        CurrencyCancelBtnWidth = Val(GetVar(filename, "InGame", "CurrencyCancelBtnWidth"))
        CurrencyCancelBtnHeight = Val(GetVar(filename, "InGame", "CurrencyCancelBtnHeight"))
        If Val(GetVar(filename, "InGame", "CurrencyCancelBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyCancelBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyCancelBtnNormImage")) & ".png"
            CurrencyCancelBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyCancelBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CurrencyCancelBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyCancelBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyCancelBtnclickimage")) & ".png"
            CurrencyCancelBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyCancelBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CurrencyCancelBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CurrencyCancelBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CurrencyCancelBtnhoverimage")) & ".png"
            CurrencyCancelBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CurrencyCancelBtnHoverImage
        End If
                'EventPnl
        EventPnlX = Val(GetVar(filename, "InGame", "EventPnlX"))
        EventPnlY = Val(GetVar(filename, "InGame", "EventPnlY"))
        EventPnlWidth = Val(GetVar(filename, "InGame", "EventPnlWidth"))
        EventPnlHeight = Val(GetVar(filename, "InGame", "EventPnlHeight"))
        If Val(GetVar(filename, "InGame", "EventPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            EventPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "EventPnlImage")) & ".png"
            EventPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure EventPnlImage
        End If
                'EventPrompt
        EventPromptX = Val(GetVar(filename, "InGame", "EventPromptX"))
        EventPromptY = Val(GetVar(filename, "InGame", "EventPromptY"))
        EventPromptWidth = Val(GetVar(filename, "InGame", "EventPromptWidth"))
        EventPromptHeight = Val(GetVar(filename, "InGame", "EventPromptHeight"))
                'Response1Lbl
        Response1LblX = Val(GetVar(filename, "InGame", "Response1LblX"))
        Response1LblY = Val(GetVar(filename, "InGame", "Response1LblY"))
        Response1LblWidth = Val(GetVar(filename, "InGame", "Response1LblWidth"))
        Response1LblHeight = Val(GetVar(filename, "InGame", "Response1LblHeight"))
                'Response2Lbl
        Response2LblX = Val(GetVar(filename, "InGame", "Response2LblX"))
        Response2LblY = Val(GetVar(filename, "InGame", "Response2LblY"))
        Response2LblWidth = Val(GetVar(filename, "InGame", "Response2LblWidth"))
        Response2LblHeight = Val(GetVar(filename, "InGame", "Response2LblHeight"))
                'Response3Lbl
        Response3LblX = Val(GetVar(filename, "InGame", "Response3LblX"))
        Response3LblY = Val(GetVar(filename, "InGame", "Response3LblY"))
        Response3LblWidth = Val(GetVar(filename, "InGame", "Response3LblWidth"))
        Response3LblHeight = Val(GetVar(filename, "InGame", "Response3LblHeight"))
                'Response4Lbl
        Response4LblX = Val(GetVar(filename, "InGame", "Response4LblX"))
        Response4LblY = Val(GetVar(filename, "InGame", "Response4LblY"))
        Response4LblWidth = Val(GetVar(filename, "InGame", "Response4LblWidth"))
        Response4LblHeight = Val(GetVar(filename, "InGame", "Response4LblHeight"))
                'EventContinueLbl
        EventContinueLblX = Val(GetVar(filename, "InGame", "EventContinueLblX"))
        EventContinueLblY = Val(GetVar(filename, "InGame", "EventContinueLblY"))
        EventContinueLblWidth = Val(GetVar(filename, "InGame", "EventContinueLblWidth"))
        EventContinueLblHeight = Val(GetVar(filename, "InGame", "EventContinueLblHeight"))
                'QuestLogPanel
        QuestLogPanelX = Val(GetVar(filename, "InGame", "QuestLogPanelX"))
        QuestLogPanelY = Val(GetVar(filename, "InGame", "QuestLogPanelY"))
        QuestLogPanelWidth = Val(GetVar(filename, "InGame", "QuestLogPanelWidth"))
        QuestLogPanelHeight = Val(GetVar(filename, "InGame", "QuestLogPanelHeight"))
        If Val(GetVar(filename, "InGame", "QuestLogPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            QuestLogPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "QuestLogPanelImage")) & ".png"
            QuestLogPanelImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure QuestLogPanelImage
        End If
                'QuestTitleLbl
        QuestTitleLblX = Val(GetVar(filename, "InGame", "QuestTitleLblX"))
        QuestTitleLblY = Val(GetVar(filename, "InGame", "QuestTitleLblY"))
        QuestTitleLblWidth = Val(GetVar(filename, "InGame", "QuestTitleLblWidth"))
        QuestTitleLblHeight = Val(GetVar(filename, "InGame", "QuestTitleLblHeight"))
                'QuestPageContent
        QuestPageContentX = Val(GetVar(filename, "InGame", "QuestPageContentX"))
        QuestPageContentY = Val(GetVar(filename, "InGame", "QuestPageContentY"))
        QuestPageContentWidth = Val(GetVar(filename, "InGame", "QuestPageContentWidth"))
        QuestPageContentHeight = Val(GetVar(filename, "InGame", "QuestPageContentHeight"))
                'QuestDeclineLbl
        QuestDeclineLblX = Val(GetVar(filename, "InGame", "QuestDeclineLblX"))
        QuestDeclineLblY = Val(GetVar(filename, "InGame", "QuestDeclineLblY"))
        QuestDeclineLblWidth = Val(GetVar(filename, "InGame", "QuestDeclineLblWidth"))
        QuestDeclineLblHeight = Val(GetVar(filename, "InGame", "QuestDeclineLblHeight"))
                'QuestAcceptLbl
        QuestAcceptLblX = Val(GetVar(filename, "InGame", "QuestAcceptLblX"))
        QuestAcceptLblY = Val(GetVar(filename, "InGame", "QuestAcceptLblY"))
        QuestAcceptLblWidth = Val(GetVar(filename, "InGame", "QuestAcceptLblWidth"))
        QuestAcceptLblHeight = Val(GetVar(filename, "InGame", "QuestAcceptLblHeight"))
                'QuitQuestLbl
        QuitQuestLblX = Val(GetVar(filename, "InGame", "QuitQuestLblX"))
        QuitQuestLblY = Val(GetVar(filename, "InGame", "QuitQuestLblY"))
        QuitQuestLblWidth = Val(GetVar(filename, "InGame", "QuitQuestLblWidth"))
        QuitQuestLblHeight = Val(GetVar(filename, "InGame", "QuitQuestLblHeight"))
                'CloseQuestLogBtn
        CloseQuestLogBtnX = Val(GetVar(filename, "InGame", "CloseQuestLogBtnX"))
        CloseQuestLogBtnY = Val(GetVar(filename, "InGame", "CloseQuestLogBtnY"))
        CloseQuestLogBtnWidth = Val(GetVar(filename, "InGame", "CloseQuestLogBtnWidth"))
        CloseQuestLogBtnHeight = Val(GetVar(filename, "InGame", "CloseQuestLogBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseQuestLogBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestLogBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestLogBtnNormImage")) & ".png"
            CloseQuestLogBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestLogBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseQuestLogBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestLogBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestLogBtnclickimage")) & ".png"
            CloseQuestLogBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestLogBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseQuestLogBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseQuestLogBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseQuestLogBtnhoverimage")) & ".png"
            CloseQuestLogBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseQuestLogBtnHoverImage
        End If
                'MailboxPnl
        MailboxPnlX = Val(GetVar(filename, "InGame", "MailboxPnlX"))
        MailboxPnlY = Val(GetVar(filename, "InGame", "MailboxPnlY"))
        MailboxPnlWidth = Val(GetVar(filename, "InGame", "MailboxPnlWidth"))
        MailboxPnlHeight = Val(GetVar(filename, "InGame", "MailboxPnlHeight"))
        If Val(GetVar(filename, "InGame", "MailboxPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            MailboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "MailboxPnlImage")) & ".png"
            MailboxPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure MailboxPnlImage
        End If
                'CheckMailBtn
        CheckMailBtnX = Val(GetVar(filename, "InGame", "CheckMailBtnX"))
        CheckMailBtnY = Val(GetVar(filename, "InGame", "CheckMailBtnY"))
        CheckMailBtnWidth = Val(GetVar(filename, "InGame", "CheckMailBtnWidth"))
        CheckMailBtnHeight = Val(GetVar(filename, "InGame", "CheckMailBtnHeight"))
        If Val(GetVar(filename, "InGame", "CheckMailBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CheckMailBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CheckMailBtnNormImage")) & ".png"
            CheckMailBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CheckMailBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CheckMailBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CheckMailBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CheckMailBtnclickimage")) & ".png"
            CheckMailBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CheckMailBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CheckMailBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CheckMailBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CheckMailBtnhoverimage")) & ".png"
            CheckMailBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CheckMailBtnHoverImage
        End If
                'SendMailBtn
        SendMailBtnX = Val(GetVar(filename, "InGame", "SendMailBtnX"))
        SendMailBtnY = Val(GetVar(filename, "InGame", "SendMailBtnY"))
        SendMailBtnWidth = Val(GetVar(filename, "InGame", "SendMailBtnWidth"))
        SendMailBtnHeight = Val(GetVar(filename, "InGame", "SendMailBtnHeight"))
        If Val(GetVar(filename, "InGame", "SendMailBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMailBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMailBtnNormImage")) & ".png"
            SendMailBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMailBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "SendMailBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMailBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMailBtnclickimage")) & ".png"
            SendMailBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMailBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "SendMailBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMailBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMailBtnhoverimage")) & ".png"
            SendMailBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMailBtnHoverImage
        End If
                'CloseMailboxBtn
        CloseMailboxBtnX = Val(GetVar(filename, "InGame", "CloseMailboxBtnX"))
        CloseMailboxBtnY = Val(GetVar(filename, "InGame", "CloseMailboxBtnY"))
        CloseMailboxBtnWidth = Val(GetVar(filename, "InGame", "CloseMailboxBtnWidth"))
        CloseMailboxBtnHeight = Val(GetVar(filename, "InGame", "CloseMailboxBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseMailboxBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseMailboxBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseMailboxBtnNormImage")) & ".png"
            CloseMailboxBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseMailboxBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseMailboxBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseMailboxBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseMailboxBtnclickimage")) & ".png"
            CloseMailboxBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseMailboxBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseMailboxBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseMailboxBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseMailboxBtnhoverimage")) & ".png"
            CloseMailboxBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseMailboxBtnHoverImage
        End If
                'InboxPnl
        InboxPnlX = Val(GetVar(filename, "InGame", "InboxPnlX"))
        InboxPnlY = Val(GetVar(filename, "InGame", "InboxPnlY"))
        InboxPnlWidth = Val(GetVar(filename, "InGame", "InboxPnlWidth"))
        InboxPnlHeight = Val(GetVar(filename, "InGame", "InboxPnlHeight"))
        If Val(GetVar(filename, "InGame", "InboxPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            InboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "InboxPnlImage")) & ".png"
            InboxPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure InboxPnlImage
        End If
                'InboxList
        InboxListX = Val(GetVar(filename, "InGame", "InboxListX"))
        InboxListY = Val(GetVar(filename, "InGame", "InboxListY"))
        InboxListWidth = Val(GetVar(filename, "InGame", "InboxListWidth"))
        InboxListHeight = Val(GetVar(filename, "InGame", "InboxListHeight"))
                'CloseInboxBtn
        CloseInboxBtnX = Val(GetVar(filename, "InGame", "CloseInboxBtnX"))
        CloseInboxBtnY = Val(GetVar(filename, "InGame", "CloseInboxBtnY"))
        CloseInboxBtnWidth = Val(GetVar(filename, "InGame", "CloseInboxBtnWidth"))
        CloseInboxBtnHeight = Val(GetVar(filename, "InGame", "CloseInboxBtnHeight"))
        If Val(GetVar(filename, "InGame", "CloseInboxBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInboxBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInboxBtnNormImage")) & ".png"
            CloseInboxBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInboxBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "CloseInboxBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInboxBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInboxBtnclickimage")) & ".png"
            CloseInboxBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInboxBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "CloseInboxBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            CloseInboxBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "CloseInboxBtnhoverimage")) & ".png"
            CloseInboxBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure CloseInboxBtnHoverImage
        End If
            'ScrlInboxUpBtn
        ScrlInboxUpBtnX = Val(GetVar(filename, "InGame", "ScrlInboxUpBtnX"))
        ScrlInboxUpBtnY = Val(GetVar(filename, "InGame", "ScrlInboxUpBtnY"))
        ScrlInboxUpBtnWidth = Val(GetVar(filename, "InGame", "ScrlInboxUpBtnWidth"))
        ScrlInboxUpBtnHeight = Val(GetVar(filename, "InGame", "ScrlInboxUpBtnHeight"))
        If Val(GetVar(filename, "InGame", "ScrlInboxUpBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxUpBtnNormImage")) & ".png"
            ScrlInboxUpBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxUpBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ScrlInboxUpBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxUpBtnclickimage")) & ".png"
            ScrlInboxUpBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxUpBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ScrlInboxUpBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxUpBtnhoverimage")) & ".png"
            ScrlInboxUpBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxUpBtnHoverImage
        End If
            'ScrlInboxDownBtn
        ScrlInboxDownBtnX = Val(GetVar(filename, "InGame", "ScrlInboxDownBtnX"))
        ScrlInboxDownBtnY = Val(GetVar(filename, "InGame", "ScrlInboxDownBtnY"))
        ScrlInboxDownBtnWidth = Val(GetVar(filename, "InGame", "ScrlInboxDownBtnWidth"))
        ScrlInboxDownBtnHeight = Val(GetVar(filename, "InGame", "ScrlInboxDownBtnHeight"))
        If Val(GetVar(filename, "InGame", "ScrlInboxDownBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxDownBtnNormImage")) & ".png"
            ScrlInboxDownBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxDownBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ScrlInboxDownBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxDownBtnclickimage")) & ".png"
            ScrlInboxDownBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxDownBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ScrlInboxDownBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ScrlInboxDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ScrlInboxDownBtnhoverimage")) & ".png"
            ScrlInboxDownBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ScrlInboxDownBtnHoverImage
        End If
                'SendMailPnl
        SendMailPnlX = Val(GetVar(filename, "InGame", "SendMailPnlX"))
        SendMailPnlY = Val(GetVar(filename, "InGame", "SendMailPnlY"))
        SendMailPnlWidth = Val(GetVar(filename, "InGame", "SendMailPnlWidth"))
        SendMailPnlHeight = Val(GetVar(filename, "InGame", "SendMailPnlHeight"))
        If Val(GetVar(filename, "InGame", "SendMailPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMailPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMailPnlImage")) & ".png"
            SendMailPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMailPnlImage
        End If
                'SendMessageTo
        SendMessageToX = Val(GetVar(filename, "InGame", "SendMessageToX"))
        SendMessageToY = Val(GetVar(filename, "InGame", "SendMessageToY"))
        SendMessageToWidth = Val(GetVar(filename, "InGame", "SendMessageToWidth"))
        SendMessageToHeight = Val(GetVar(filename, "InGame", "SendMessageToHeight"))
                'SendMessageText
        SendMessageTextX = Val(GetVar(filename, "InGame", "SendMessageTextX"))
        SendMessageTextY = Val(GetVar(filename, "InGame", "SendMessageTextY"))
        SendMessageTextWidth = Val(GetVar(filename, "InGame", "SendMessageTextWidth"))
        SendMessageTextHeight = Val(GetVar(filename, "InGame", "SendMessageTextHeight"))
                'SendMessageItem
        SendMessageItemX = Val(GetVar(filename, "InGame", "SendMessageItemX"))
        SendMessageItemY = Val(GetVar(filename, "InGame", "SendMessageItemY"))
        SendMessageItemWidth = Val(GetVar(filename, "InGame", "SendMessageItemWidth"))
        SendMessageItemHeight = Val(GetVar(filename, "InGame", "SendMessageItemHeight"))
                'SendMessageBtn
        SendMessageBtnX = Val(GetVar(filename, "InGame", "SendMessageBtnX"))
        SendMessageBtnY = Val(GetVar(filename, "InGame", "SendMessageBtnY"))
        SendMessageBtnWidth = Val(GetVar(filename, "InGame", "SendMessageBtnWidth"))
        SendMessageBtnHeight = Val(GetVar(filename, "InGame", "SendMessageBtnHeight"))
        If Val(GetVar(filename, "InGame", "SendMessageBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMessageBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMessageBtnNormImage")) & ".png"
            SendMessageBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMessageBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "SendMessageBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMessageBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMessageBtnclickimage")) & ".png"
            SendMessageBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMessageBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "SendMessageBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            SendMessageBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "SendMessageBtnhoverimage")) & ".png"
            SendMessageBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure SendMessageBtnHoverImage
        End If
                'DiscardMessageBtn
        DiscardMessageBtnX = Val(GetVar(filename, "InGame", "DiscardMessageBtnX"))
        DiscardMessageBtnY = Val(GetVar(filename, "InGame", "DiscardMessageBtnY"))
        DiscardMessageBtnWidth = Val(GetVar(filename, "InGame", "DiscardMessageBtnWidth"))
        DiscardMessageBtnHeight = Val(GetVar(filename, "InGame", "DiscardMessageBtnHeight"))
        If Val(GetVar(filename, "InGame", "DiscardMessageBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DiscardMessageBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DiscardMessageBtnNormImage")) & ".png"
            DiscardMessageBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DiscardMessageBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "DiscardMessageBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DiscardMessageBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DiscardMessageBtnclickimage")) & ".png"
            DiscardMessageBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DiscardMessageBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "DiscardMessageBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DiscardMessageBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DiscardMessageBtnhoverimage")) & ".png"
            DiscardMessageBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DiscardMessageBtnHoverImage
        End If
                'ReadLetterPnl
        ReadLetterPnlX = Val(GetVar(filename, "InGame", "ReadLetterPnlX"))
        ReadLetterPnlY = Val(GetVar(filename, "InGame", "ReadLetterPnlY"))
        ReadLetterPnlWidth = Val(GetVar(filename, "InGame", "ReadLetterPnlWidth"))
        ReadLetterPnlHeight = Val(GetVar(filename, "InGame", "ReadLetterPnlHeight"))
        If Val(GetVar(filename, "InGame", "ReadLetterPnlImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ReadLetterPnlImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ReadLetterPnlImage")) & ".png"
            ReadLetterPnlImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ReadLetterPnlImage
        End If
                'MessageFrom
        MessageFromX = Val(GetVar(filename, "InGame", "MessageFromX"))
        MessageFromY = Val(GetVar(filename, "InGame", "MessageFromY"))
        MessageFromWidth = Val(GetVar(filename, "InGame", "MessageFromWidth"))
        MessageFromHeight = Val(GetVar(filename, "InGame", "MessageFromHeight"))
                'MessageFromContent
        MessageFromContentX = Val(GetVar(filename, "InGame", "MessageFromContentX"))
        MessageFromContentY = Val(GetVar(filename, "InGame", "MessageFromContentY"))
        MessageFromContentWidth = Val(GetVar(filename, "InGame", "MessageFromContentWidth"))
        MessageFromContentHeight = Val(GetVar(filename, "InGame", "MessageFromContentHeight"))
                'ItemReceived
        ItemReceivedX = Val(GetVar(filename, "InGame", "ItemReceivedX"))
        ItemReceivedY = Val(GetVar(filename, "InGame", "ItemReceivedY"))
        ItemReceivedWidth = Val(GetVar(filename, "InGame", "ItemReceivedWidth"))
        ItemReceivedHeight = Val(GetVar(filename, "InGame", "ItemReceivedHeight"))
                'ReplyLetterBtn
        ReplyLetterBtnX = Val(GetVar(filename, "InGame", "ReplyLetterBtnX"))
        ReplyLetterBtnY = Val(GetVar(filename, "InGame", "ReplyLetterBtnY"))
        ReplyLetterBtnWidth = Val(GetVar(filename, "InGame", "ReplyLetterBtnWidth"))
        ReplyLetterBtnHeight = Val(GetVar(filename, "InGame", "ReplyLetterBtnHeight"))
        If Val(GetVar(filename, "InGame", "ReplyLetterBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ReplyLetterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ReplyLetterBtnNormImage")) & ".png"
            ReplyLetterBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ReplyLetterBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "ReplyLetterBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ReplyLetterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ReplyLetterBtnclickimage")) & ".png"
            ReplyLetterBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ReplyLetterBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "ReplyLetterBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            ReplyLetterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "ReplyLetterBtnhoverimage")) & ".png"
            ReplyLetterBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure ReplyLetterBtnHoverImage
        End If
                'TrashLetterBtn
        TrashLetterBtnX = Val(GetVar(filename, "InGame", "TrashLetterBtnX"))
        TrashLetterBtnY = Val(GetVar(filename, "InGame", "TrashLetterBtnY"))
        TrashLetterBtnWidth = Val(GetVar(filename, "InGame", "TrashLetterBtnWidth"))
        TrashLetterBtnHeight = Val(GetVar(filename, "InGame", "TrashLetterBtnHeight"))
        If Val(GetVar(filename, "InGame", "TrashLetterBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TrashLetterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TrashLetterBtnNormImage")) & ".png"
            TrashLetterBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TrashLetterBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "TrashLetterBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TrashLetterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TrashLetterBtnclickimage")) & ".png"
            TrashLetterBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TrashLetterBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "TrashLetterBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            TrashLetterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "TrashLetterBtnhoverimage")) & ".png"
            TrashLetterBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure TrashLetterBtnHoverImage
        End If
            'StopReadingBtn
        StopReadingBtnX = Val(GetVar(filename, "InGame", "StopReadingBtnX"))
        StopReadingBtnY = Val(GetVar(filename, "InGame", "StopReadingBtnY"))
        StopReadingBtnWidth = Val(GetVar(filename, "InGame", "StopReadingBtnWidth"))
        StopReadingBtnHeight = Val(GetVar(filename, "InGame", "StopReadingBtnHeight"))
        If Val(GetVar(filename, "InGame", "StopReadingBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            StopReadingBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "StopReadingBtnNormImage")) & ".png"
            StopReadingBtnNormImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure StopReadingBtnNormImage
        End If
        If Val(GetVar(filename, "InGame", "StopReadingBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            StopReadingBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "StopReadingBtnclickimage")) & ".png"
            StopReadingBtnClickImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure StopReadingBtnClickImage
        End If
        If Val(GetVar(filename, "InGame", "StopReadingBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            StopReadingBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "StopReadingBtnhoverimage")) & ".png"
            StopReadingBtnHoverImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure StopReadingBtnHoverImage
        End If
        
        'PetPanel
        PetPanelX = Val(GetVar(filename, "InGame", "PetPanelX"))
        PetPanelY = Val(GetVar(filename, "InGame", "PetPanelY"))
        PetPanelWidth = Val(GetVar(filename, "InGame", "PetPanelWidth"))
        PetPanelHeight = Val(GetVar(filename, "InGame", "PetPanelHeight"))
        If Val(GetVar(filename, "InGame", "PetPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetPanelImage")) & ".png"
            PetPanelImage.Texture = NumTextures
        End If
        
        
        'PetName
        PetNameX = Val(GetVar(filename, "InGame", "PetNameX"))
        PetNameY = Val(GetVar(filename, "InGame", "PetNameY"))
        PetNameWidth = Val(GetVar(filename, "InGame", "PetNameWidth"))
        PetNameHeight = Val(GetVar(filename, "InGame", "PetNameHeight"))
        
        
        'PetHPPanel
        PetHPPanelX = Val(GetVar(filename, "InGame", "PetHPPanelX"))
        PetHPPanelY = Val(GetVar(filename, "InGame", "PetHPPanelY"))
        PetHPPanelWidth = Val(GetVar(filename, "InGame", "PetHPPanelWidth"))
        PetHPPanelHeight = Val(GetVar(filename, "InGame", "PetHPPanelHeight"))
        If Val(GetVar(filename, "InGame", "PetHPPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetHPPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetHPPanelImage")) & ".png"
            PetHPPanelImage.Texture = NumTextures
        End If
        
        
        'PetMPPanel
        PetMPPanelX = Val(GetVar(filename, "InGame", "PetMPPanelX"))
        PetMPPanelY = Val(GetVar(filename, "InGame", "PetMPPanelY"))
        PetMPPanelWidth = Val(GetVar(filename, "InGame", "PetMPPanelWidth"))
        PetMPPanelHeight = Val(GetVar(filename, "InGame", "PetMPPanelHeight"))
        If Val(GetVar(filename, "InGame", "PetMPPanelImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetMPPanelImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetMPPanelImage")) & ".png"
            PetMPPanelImage.Texture = NumTextures
        End If
        
        
        'PetHPText
        PetHPTextX = Val(GetVar(filename, "InGame", "PetHPTextX"))
        PetHPTextY = Val(GetVar(filename, "InGame", "PetHPTextY"))
        PetHPTextWidth = Val(GetVar(filename, "InGame", "PetHPTextWidth"))
        PetHPTextHeight = Val(GetVar(filename, "InGame", "PetHPTextHeight"))
        
        
        'PetMPText
        PetMPTextX = Val(GetVar(filename, "InGame", "PetMPTextX"))
        PetMPTextY = Val(GetVar(filename, "InGame", "PetMPTextY"))
        PetMPTextWidth = Val(GetVar(filename, "InGame", "PetMPTextWidth"))
        PetMPTextHeight = Val(GetVar(filename, "InGame", "PetMPTextHeight"))
        
        
        'PetIconPanel
        PetIconPanelX = Val(GetVar(filename, "InGame", "PetIconPanelX"))
        PetIconPanelY = Val(GetVar(filename, "InGame", "PetIconPanelY"))
        PetIconPanelWidth = Val(GetVar(filename, "InGame", "PetIconPanelWidth"))
        PetIconPanelHeight = Val(GetVar(filename, "InGame", "PetIconPanelHeight"))
        
        
        'PetStrLabel
        PetStrLabelX = Val(GetVar(filename, "InGame", "PetStrLabelX"))
        PetStrLabelY = Val(GetVar(filename, "InGame", "PetStrLabelY"))
        PetStrLabelWidth = Val(GetVar(filename, "InGame", "PetStrLabelWidth"))
        PetStrLabelHeight = Val(GetVar(filename, "InGame", "PetStrLabelHeight"))
        
        
        'PetEndLabel
        PetEndLabelX = Val(GetVar(filename, "InGame", "PetEndLabelX"))
        PetEndLabelY = Val(GetVar(filename, "InGame", "PetEndLabelY"))
        PetEndLabelWidth = Val(GetVar(filename, "InGame", "PetEndLabelWidth"))
        PetEndLabelHeight = Val(GetVar(filename, "InGame", "PetEndLabelHeight"))
        
        
        'PetIntLabel
        PetIntLabelX = Val(GetVar(filename, "InGame", "PetIntLabelX"))
        PetIntLabelY = Val(GetVar(filename, "InGame", "PetIntLabelY"))
        PetIntLabelWidth = Val(GetVar(filename, "InGame", "PetIntLabelWidth"))
        PetIntLabelHeight = Val(GetVar(filename, "InGame", "PetIntLabelHeight"))
        
        
        'PetAgiLabel
        PetAgiLabelX = Val(GetVar(filename, "InGame", "PetAgiLabelX"))
        PetAgiLabelY = Val(GetVar(filename, "InGame", "PetAgiLabelY"))
        PetAgiLabelWidth = Val(GetVar(filename, "InGame", "PetAgiLabelWidth"))
        PetAgiLabelHeight = Val(GetVar(filename, "InGame", "PetAgiLabelHeight"))
        
        
        'PetWillLabel
        PetWillLabelX = Val(GetVar(filename, "InGame", "PetWillLabelX"))
        PetWillLabelY = Val(GetVar(filename, "InGame", "PetWillLabelY"))
        PetWillLabelWidth = Val(GetVar(filename, "InGame", "PetWillLabelWidth"))
        PetWillLabelHeight = Val(GetVar(filename, "InGame", "PetWillLabelHeight"))
        
        
        'PetPntsLabel
        PetPntsLabelX = Val(GetVar(filename, "InGame", "PetPntsLabelX"))
        PetPntsLabelY = Val(GetVar(filename, "InGame", "PetPntsLabelY"))
        PetPntsLabelWidth = Val(GetVar(filename, "InGame", "PetPntsLabelWidth"))
        PetPntsLabelHeight = Val(GetVar(filename, "InGame", "PetPntsLabelHeight"))
        
        
        'PetAddStrBtn
        PetAddStrBtnX = Val(GetVar(filename, "InGame", "PetAddStrBtnX"))
        PetAddStrBtnY = Val(GetVar(filename, "InGame", "PetAddStrBtnY"))
        PetAddStrBtnWidth = Val(GetVar(filename, "InGame", "PetAddStrBtnWidth"))
        PetAddStrBtnHeight = Val(GetVar(filename, "InGame", "PetAddStrBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetAddStrBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddStrBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddStrBtnNormImage")) & ".png"
            PetAddStrBtnNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddStrBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddStrBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddStrBtnclickimage")) & ".png"
            PetAddStrBtnClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddStrBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddStrBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddStrBtnhoverimage")) & ".png"
            PetAddStrBtnHoverImage.Texture = NumTextures
        End If
        
        
        'PetAddEndBtn
        PetAddEndBtnX = Val(GetVar(filename, "InGame", "PetAddEndBtnX"))
        PetAddEndBtnY = Val(GetVar(filename, "InGame", "PetAddEndBtnY"))
        PetAddEndBtnWidth = Val(GetVar(filename, "InGame", "PetAddEndBtnWidth"))
        PetAddEndBtnHeight = Val(GetVar(filename, "InGame", "PetAddEndBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetAddEndBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddEndBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddEndBtnNormImage")) & ".png"
            PetAddEndBtnNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddEndBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddEndBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddEndBtnclickimage")) & ".png"
            PetAddEndBtnClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddEndBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddEndBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddEndBtnhoverimage")) & ".png"
            PetAddEndBtnHoverImage.Texture = NumTextures
        End If
        
        
        'PetAddIntBtn
        PetAddIntBtnX = Val(GetVar(filename, "InGame", "PetAddIntBtnX"))
        PetAddIntBtnY = Val(GetVar(filename, "InGame", "PetAddIntBtnY"))
        PetAddIntBtnWidth = Val(GetVar(filename, "InGame", "PetAddIntBtnWidth"))
        PetAddIntBtnHeight = Val(GetVar(filename, "InGame", "PetAddIntBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetAddIntBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddIntBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddIntBtnNormImage")) & ".png"
            PetAddIntBtnNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddIntBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddIntBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddIntBtnclickimage")) & ".png"
            PetAddIntBtnClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddIntBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddIntBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddIntBtnhoverimage")) & ".png"
            PetAddIntBtnHoverImage.Texture = NumTextures
        End If
        
        
        'PetAddAgiBtn
        PetAddAgiBtnX = Val(GetVar(filename, "InGame", "PetAddAgiBtnX"))
        PetAddAgiBtnY = Val(GetVar(filename, "InGame", "PetAddAgiBtnY"))
        PetAddAgiBtnWidth = Val(GetVar(filename, "InGame", "PetAddAgiBtnWidth"))
        PetAddAgiBtnHeight = Val(GetVar(filename, "InGame", "PetAddAgiBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetAddAgiBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddAgiBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddAgiBtnNormImage")) & ".png"
            PetAddAgiBtnNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddAgiBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddAgiBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddAgiBtnclickimage")) & ".png"
            PetAddAgiBtnClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddAgiBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddAgiBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddAgiBtnhoverimage")) & ".png"
            PetAddAgiBtnHoverImage.Texture = NumTextures
        End If
        
        
        'PetAddWillBtn
        PetAddWillBtnX = Val(GetVar(filename, "InGame", "PetAddWillBtnX"))
        PetAddWillBtnY = Val(GetVar(filename, "InGame", "PetAddWillBtnY"))
        PetAddWillBtnWidth = Val(GetVar(filename, "InGame", "PetAddWillBtnWidth"))
        PetAddWillBtnHeight = Val(GetVar(filename, "InGame", "PetAddWillBtnHeight"))
        If Val(GetVar(filename, "InGame", "PetAddWillBtnNormImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddWillBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddWillBtnNormImage")) & ".png"
            PetAddWillBtnNormImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddWillBtnclickimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddWillBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddWillBtnclickimage")) & ".png"
            PetAddWillBtnClickImage.Texture = NumTextures
        End If
        If Val(GetVar(filename, "InGame", "PetAddWillBtnhoverimage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            PetAddWillBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "PetAddWillBtnhoverimage")) & ".png"
            PetAddWillBtnHoverImage.Texture = NumTextures
        End If
        
        
        'PetSpell1Panel
        PetSpell1PanelX = Val(GetVar(filename, "InGame", "PetSpell1PanelX"))
        PetSpell1PanelY = Val(GetVar(filename, "InGame", "PetSpell1PanelY"))
        PetSpell1PanelWidth = Val(GetVar(filename, "InGame", "PetSpell1PanelWidth"))
        PetSpell1PanelHeight = Val(GetVar(filename, "InGame", "PetSpell1PanelHeight"))
        
        
        'PetSpell2Panel
        PetSpell2PanelX = Val(GetVar(filename, "InGame", "PetSpell2PanelX"))
        PetSpell2PanelY = Val(GetVar(filename, "InGame", "PetSpell2PanelY"))
        PetSpell2PanelWidth = Val(GetVar(filename, "InGame", "PetSpell2PanelWidth"))
        PetSpell2PanelHeight = Val(GetVar(filename, "InGame", "PetSpell2PanelHeight"))
        
        
        'PetSpell3Panel
        PetSpell3PanelX = Val(GetVar(filename, "InGame", "PetSpell3PanelX"))
        PetSpell3PanelY = Val(GetVar(filename, "InGame", "PetSpell3PanelY"))
        PetSpell3PanelWidth = Val(GetVar(filename, "InGame", "PetSpell3PanelWidth"))
        PetSpell3PanelHeight = Val(GetVar(filename, "InGame", "PetSpell3PanelHeight"))
        
        
        'PetSpell4Panel
        PetSpell4PanelX = Val(GetVar(filename, "InGame", "PetSpell4PanelX"))
        PetSpell4PanelY = Val(GetVar(filename, "InGame", "PetSpell4PanelY"))
        PetSpell4PanelWidth = Val(GetVar(filename, "InGame", "PetSpell4PanelWidth"))
        PetSpell4PanelHeight = Val(GetVar(filename, "InGame", "PetSpell4PanelHeight"))
        
        
        'PetSpell1Label
        PetSpell1LabelX = Val(GetVar(filename, "InGame", "PetSpell1LabelX"))
        PetSpell1LabelY = Val(GetVar(filename, "InGame", "PetSpell1LabelY"))
        PetSpell1LabelWidth = Val(GetVar(filename, "InGame", "PetSpell1LabelWidth"))
        PetSpell1LabelHeight = Val(GetVar(filename, "InGame", "PetSpell1LabelHeight"))
        
        
        'PetSpell2Label
        PetSpell2LabelX = Val(GetVar(filename, "InGame", "PetSpell2LabelX"))
        PetSpell2LabelY = Val(GetVar(filename, "InGame", "PetSpell2LabelY"))
        PetSpell2LabelWidth = Val(GetVar(filename, "InGame", "PetSpell2LabelWidth"))
        PetSpell2LabelHeight = Val(GetVar(filename, "InGame", "PetSpell2LabelHeight"))
        
        
        'PetSpell3Label
        PetSpell3LabelX = Val(GetVar(filename, "InGame", "PetSpell3LabelX"))
        PetSpell3LabelY = Val(GetVar(filename, "InGame", "PetSpell3LabelY"))
        PetSpell3LabelWidth = Val(GetVar(filename, "InGame", "PetSpell3LabelWidth"))
        PetSpell3LabelHeight = Val(GetVar(filename, "InGame", "PetSpell3LabelHeight"))
        
        
        'PetSpell4Label
        PetSpell4LabelX = Val(GetVar(filename, "InGame", "PetSpell4LabelX"))
        PetSpell4LabelY = Val(GetVar(filename, "InGame", "PetSpell4LabelY"))
        PetSpell4LabelWidth = Val(GetVar(filename, "InGame", "PetSpell4LabelWidth"))
        PetSpell4LabelHeight = Val(GetVar(filename, "InGame", "PetSpell4LabelHeight"))
        
        
        'PetReleaseLabel
        PetReleaseLabelX = Val(GetVar(filename, "InGame", "PetReleaseLabelX"))
        PetReleaseLabelY = Val(GetVar(filename, "InGame", "PetReleaseLabelY"))
        PetReleaseLabelWidth = Val(GetVar(filename, "InGame", "PetReleaseLabelWidth"))
        PetReleaseLabelHeight = Val(GetVar(filename, "InGame", "PetReleaseLabelHeight"))
        


        
        
        
        ChatboxParent = Val(GetVar(filename, "InGame", "ChatboxParent"))
        GameMenuPanelParent = Val(GetVar(filename, "InGame", "GameMenuPanelParent"))
        GUIBarsPanelParent = Val(GetVar(filename, "InGame", "GUIBarsPanelParent"))
        HotbarPnlParent = Val(GetVar(filename, "InGame", "HotbarPnlParent"))
        InventoryPnlParent = Val(GetVar(filename, "InGame", "InventoryPnlParent"))
        SpellsPnlParent = Val(GetVar(filename, "InGame", "SpellsPnlParent"))
        CharacterPnlParent = Val(GetVar(filename, "InGame", "CharacterPnlParent"))
        OptionsPnlParent = Val(GetVar(filename, "InGame", "OptionsPnlParent"))
        PartyPnlParent = Val(GetVar(filename, "InGame", "PartyPnlParent"))
        FriendsPnlParent = Val(GetVar(filename, "InGame", "FriendsPnlParent"))
        QuestsPnlParent = Val(GetVar(filename, "InGame", "QuestsPnlParent"))
        ItemDescPnlParent = Val(GetVar(filename, "InGame", "ItemDescPnlParent"))
        SpellDescPnlParent = Val(GetVar(filename, "InGame", "SpellDescPnlParent"))
        BankPnlParent = Val(GetVar(filename, "InGame", "BankPnlParent"))
        ShopPnlParent = Val(GetVar(filename, "InGame", "ShopPnlParent"))
        TradePnlParent = Val(GetVar(filename, "InGame", "TradePnlParent"))
        DialoguePanelParent = Val(GetVar(filename, "InGame", "DialoguePanelParent"))
        CurrencyPanelParent = Val(GetVar(filename, "InGame", "CurrencyPanelParent"))
        EventPnlParent = Val(GetVar(filename, "InGame", "EventPnlParent"))
        QuestLogPanelParent = Val(GetVar(filename, "InGame", "QuestLogPanelParent"))
        MailboxPnlParent = Val(GetVar(filename, "InGame", "MailboxPnlParent"))
        InboxPnlParent = Val(GetVar(filename, "InGame", "InboxPnlParent"))
        SendMailPnlParent = Val(GetVar(filename, "InGame", "SendMailPnlParent"))
        ReadLetterPnlParent = Val(GetVar(filename, "InGame", "ReadLetterPnlParent"))
        
        
        If Val(GetVar(filename, "InGame", "DragBoxImage")) > 0 Then
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            DragBoxImage.filepath = App.path & GFX_PATH & "gui\" & Val(GetVar(filename, "InGame", "DragBoxImage")) & ".png"
            DragBoxImage.Texture = NumTextures
            'Textures Dynamic     LoadTextureure DragBoxImage
        End If
        Exit Sub
    Else
        MsgBox "User interface configuration not found! - Exiting!"
        Exit Sub
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "LoadInGameGUIPart2", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawGameGUI(Optional AfterPicScreen As Boolean = False)
Dim drawChat As Boolean

   On Error GoTo errorhandler

    If AfterPicScreen = False Then
        If GameWindowImage.Texture > 0 Then
            RenderTexture GameWindowImage, 0, 0, 0, 0, GameWindowWidth, GameWindowHeight, GameWindowImage.Width, GameWindowImage.Height, -1
        End If
        Exit Sub
    End If

    'Draw Everything in Game... start with chatbox ;)
    drawChat = True
    If CurrencyMenu > 0 And drawChat = True Then DrawCurrencyMenu: drawChat = False
    If dialogueIndex > 0 And drawChat = True Then DrawDialogueMenu: drawChat = False
    If EventChat And drawChat = True Then DrawEventChat: drawChat = False
    If drawChat = True Then
        If chatOn = False Then
            If HideChat = True Then drawChat = False
        End If
    End If
    
    If drawChat Then DrawChatbox
    If HideMenu = False Then DrawGameMenu
    If HideBars = False Then DrawGUIBars
    If HideHotbar = False Then DrawHotbar
    Select Case CurrentGameMenu
        Case 0
        Case 1
            DrawInventory
        Case 2
            DrawSpellsPanel
        Case 3
            DrawCharacterPanel
        Case 4
            DrawOptionsPanel
        Case 5
            DrawPartyPanel
        Case 6
            DrawFriendsPanel
        Case 7
            DrawQuestsPanel
        Case 8
            DrawPetPanel
    End Select
        
    If InBank Then DrawBank
    If InShop > 0 Then DrawShop
    If InTrade > 0 Then DrawTrade
    If InMailbox Then DrawMailbox
    If InQuestLog Then DrawQuestLog
        If ItemDescVisible Then
        If LastItemDesc = 0 Then
            If LastBankDesc > 0 Then
                DrawItemDesc LastBankDesc, 0, 0
            End If
        Else
            DrawItemDesc LastItemDesc, 0, 0
        End If
    End If
        
    If SpellDescVisible Then DrawSpellDesc LastSpellDesc, 0, 0
    DrawDragItem
    DrawDragSpell
    DrawDragBank
    DrawDragTrade
    DrawDragMailboxItem


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawGameGUI", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawChatbox()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long

        'Draw Chat box

   On Error GoTo errorhandler

        'Login Panel
        dX = ChatboxPnlBounds.Left
        dY = ChatboxPnlBounds.Top
        dw = ChatboxPnlBounds.Right
        dH = ChatboxPnlBounds.Bottom
        sx = ChatboxPnlSrcBounds.Left
        sy = ChatboxPnlSrcBounds.Top
        sW = ChatboxPnlSrcBounds.Right
        sH = ChatboxPnlSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If ChatboxPnlImage.Texture > 0 Then
                RenderTexture ChatboxPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
            If ChatScroll > 0 Then
                RenderChatTextBuffer
            End If
            If MyTextBounds.Right - MyTextBounds.Left > 10 Then
                If chatOn Then
                    RenderText Font_Georgia, LimitText(Font_Georgia, RenderChatText & chatShowLine, MyTextBounds.Right - MyTextBounds.Left), MyTextBounds.Left, MyTextBounds.Top, FontColor
                Else
                    RenderText Font_Georgia, LimitText(Font_Georgia, "Press Enter to begin chatting.", MyTextBounds.Right - MyTextBounds.Left), MyTextBounds.Left, MyTextBounds.Top, FontColor
                End If
            End If
        End If
            'ChatUp Btn
        dX = ChatUpBtnBounds.Left
        dY = ChatUpBtnBounds.Top
        dw = ChatUpBtnBounds.Right
        dH = ChatUpBtnBounds.Bottom
        sx = ChatUpBtnSrcBounds.Left
        sy = ChatUpBtnSrcBounds.Top
        sW = ChatUpBtnSrcBounds.Right
        sH = ChatUpBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If ChatUpBtnState <> 2 Then
                        If ChatUpBtnHoverImage.Texture > 0 Then
                            RenderTexture ChatUpBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ChatUpBtnClickImage.Texture > 0 Then
                            RenderTexture ChatUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If ChatUpBtnState = 2 Then
                        If ChatUpBtnClickImage.Texture > 0 Then
                            RenderTexture ChatUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ChatUpBtnNormImage.Texture > 0 Then
                            RenderTexture ChatUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If ChatUpBtnState = 2 Then
                    If ChatUpBtnClickImage.Texture > 0 Then
                        RenderTexture ChatUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If ChatUpBtnNormImage.Texture > 0 Then
                        RenderTexture ChatUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'ChatDown Btn
        dX = ChatDownBtnBounds.Left
        dY = ChatDownBtnBounds.Top
        dw = ChatDownBtnBounds.Right
        dH = ChatDownBtnBounds.Bottom
        sx = ChatDownBtnSrcBounds.Left
        sy = ChatDownBtnSrcBounds.Top
        sW = ChatDownBtnSrcBounds.Right
        sH = ChatDownBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If ChatDownBtnState <> 2 Then
                        If ChatDownBtnHoverImage.Texture > 0 Then
                            RenderTexture ChatDownBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ChatDownBtnClickImage.Texture > 0 Then
                            RenderTexture ChatDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If ChatDownBtnState = 2 Then
                        If ChatDownBtnClickImage.Texture > 0 Then
                            RenderTexture ChatDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ChatDownBtnNormImage.Texture > 0 Then
                            RenderTexture ChatDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If ChatDownBtnState = 2 Then
                    If ChatDownBtnClickImage.Texture > 0 Then
                        RenderTexture ChatDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If ChatDownBtnNormImage.Texture > 0 Then
                        RenderTexture ChatDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawChatbox", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawHotbar()
Dim sRect As rect, dRect As rect, i As Long, Num As String, n As Long, destRect As D3DRECT
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long, X As Long

        'HotbarPnl

   On Error GoTo errorhandler

        dX = HotbarPnlBounds.Left
        dY = HotbarPnlBounds.Top
        dw = HotbarPnlBounds.Right
        dH = HotbarPnlBounds.Bottom
        sx = HotbarPnlSrcBounds.Left
        sy = HotbarPnlSrcBounds.Top
        sW = HotbarPnlSrcBounds.Right
        sH = HotbarPnlSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If HotbarPnlImage.Texture > 0 Then
                RenderTexture HotbarPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
            End If
                    'Hotbar Icon1
            dX = HotbarIcon1Bounds.Left
            dY = HotbarIcon1Bounds.Top
            dw = HotbarIcon1Bounds.Right
            dH = HotbarIcon1Bounds.Bottom
            i = 1
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon1Bounds.Left, HotbarIcon1Bounds.Top, 0, 0, HotbarIcon1Bounds.Right, HotbarIcon1Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon1Bounds.Left, HotbarIcon1Bounds.Top, n * 32, 0, HotbarIcon1Bounds.Right, HotbarIcon1Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon1Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon1Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon1Bounds.Left + 1, HotbarIcon1Bounds.Top + HotbarIcon1Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                
            'HotbarIcon2
            dX = HotbarIcon2Bounds.Left
            dY = HotbarIcon2Bounds.Top
            dw = HotbarIcon2Bounds.Right
            dH = HotbarIcon2Bounds.Bottom
            i = 2
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon2Bounds.Left, HotbarIcon2Bounds.Top, 0, 0, HotbarIcon2Bounds.Right, HotbarIcon2Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon2Bounds.Left, HotbarIcon2Bounds.Top, n * 32, 0, HotbarIcon2Bounds.Right, HotbarIcon2Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                ' render the letters
            Num = str(i)
            If HotbarIcon2Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon2Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon2Bounds.Left + 1, HotbarIcon2Bounds.Top + HotbarIcon2Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon3
            dX = HotbarIcon3Bounds.Left
            dY = HotbarIcon3Bounds.Top
            dw = HotbarIcon3Bounds.Right
            dH = HotbarIcon3Bounds.Bottom
            i = 3
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon3Bounds.Left, HotbarIcon3Bounds.Top, 0, 0, HotbarIcon3Bounds.Right, HotbarIcon3Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon3Bounds.Left, HotbarIcon3Bounds.Top, n * 32, 0, HotbarIcon3Bounds.Right, HotbarIcon3Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon3Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon3Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon3Bounds.Left + 1, HotbarIcon3Bounds.Top + HotbarIcon3Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon4
            dX = HotbarIcon4Bounds.Left
            dY = HotbarIcon4Bounds.Top
            dw = HotbarIcon4Bounds.Right
            dH = HotbarIcon4Bounds.Bottom
            i = 4
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon4Bounds.Left, HotbarIcon4Bounds.Top, 0, 0, HotbarIcon4Bounds.Right, HotbarIcon4Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon4Bounds.Left, HotbarIcon4Bounds.Top, n * 32, 0, HotbarIcon4Bounds.Right, HotbarIcon4Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon4Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon4Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon4Bounds.Left + 1, HotbarIcon4Bounds.Top + HotbarIcon4Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon5
            dX = HotbarIcon5Bounds.Left
            dY = HotbarIcon5Bounds.Top
            dw = HotbarIcon5Bounds.Right
            dH = HotbarIcon5Bounds.Bottom
            i = 5
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon5Bounds.Left, HotbarIcon5Bounds.Top, 0, 0, HotbarIcon5Bounds.Right, HotbarIcon5Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon5Bounds.Left, HotbarIcon5Bounds.Top, n * 32, 0, HotbarIcon5Bounds.Right, HotbarIcon5Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon5Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon5Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon5Bounds.Left + 1, HotbarIcon5Bounds.Top + HotbarIcon5Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon6
            dX = HotbarIcon6Bounds.Left
            dY = HotbarIcon6Bounds.Top
            dw = HotbarIcon6Bounds.Right
            dH = HotbarIcon6Bounds.Bottom
            i = 6
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon6Bounds.Left, HotbarIcon6Bounds.Top, 0, 0, HotbarIcon6Bounds.Right, HotbarIcon6Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon6Bounds.Left, HotbarIcon6Bounds.Top, n * 32, 0, HotbarIcon6Bounds.Right, HotbarIcon6Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon6Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon6Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon6Bounds.Left + 1, HotbarIcon6Bounds.Top + HotbarIcon6Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon7
            dX = HotbarIcon7Bounds.Left
            dY = HotbarIcon7Bounds.Top
            dw = HotbarIcon7Bounds.Right
            dH = HotbarIcon7Bounds.Bottom
            i = 7
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon7Bounds.Left, HotbarIcon7Bounds.Top, 0, 0, HotbarIcon7Bounds.Right, HotbarIcon7Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon7Bounds.Left, HotbarIcon7Bounds.Top, n * 32, 0, HotbarIcon7Bounds.Right, HotbarIcon7Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon7Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon7Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon7Bounds.Left + 1, HotbarIcon7Bounds.Top + HotbarIcon7Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon8
            dX = HotbarIcon8Bounds.Left
            dY = HotbarIcon8Bounds.Top
            dw = HotbarIcon8Bounds.Right
            dH = HotbarIcon8Bounds.Bottom
            i = 8
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon8Bounds.Left, HotbarIcon8Bounds.Top, 0, 0, HotbarIcon8Bounds.Right, HotbarIcon8Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon8Bounds.Left, HotbarIcon8Bounds.Top, n * 32, 0, HotbarIcon8Bounds.Right, HotbarIcon8Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon8Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon8Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon8Bounds.Left + 1, HotbarIcon8Bounds.Top + HotbarIcon8Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon9
            dX = HotbarIcon9Bounds.Left
            dY = HotbarIcon9Bounds.Top
            dw = HotbarIcon9Bounds.Right
            dH = HotbarIcon9Bounds.Bottom
            i = 9
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon9Bounds.Left, HotbarIcon9Bounds.Top, 0, 0, HotbarIcon9Bounds.Right, HotbarIcon9Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon9Bounds.Left, HotbarIcon9Bounds.Top, n * 32, 0, HotbarIcon9Bounds.Right, HotbarIcon9Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon9Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon9Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon9Bounds.Left + 1, HotbarIcon9Bounds.Top + HotbarIcon9Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon10
            dX = HotbarIcon10Bounds.Left
            dY = HotbarIcon10Bounds.Top
            dw = HotbarIcon10Bounds.Right
            dH = HotbarIcon10Bounds.Bottom
            i = 10
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon10Bounds.Left, HotbarIcon10Bounds.Top, 0, 0, HotbarIcon10Bounds.Right, HotbarIcon10Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon10Bounds.Left, HotbarIcon10Bounds.Top, n * 32, 0, HotbarIcon10Bounds.Right, HotbarIcon10Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = str(i)
            If HotbarIcon10Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon10Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon10Bounds.Left + 1, HotbarIcon10Bounds.Top + HotbarIcon10Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon11
            dX = HotbarIcon11Bounds.Left
            dY = HotbarIcon11Bounds.Top
            dw = HotbarIcon11Bounds.Right
            dH = HotbarIcon11Bounds.Bottom
            i = 11
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon11Bounds.Left, HotbarIcon11Bounds.Top, 0, 0, HotbarIcon11Bounds.Right, HotbarIcon11Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon11Bounds.Left, HotbarIcon11Bounds.Top, n * 32, 0, HotbarIcon11Bounds.Right, HotbarIcon11Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = "-"
            If HotbarIcon11Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon11Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon11Bounds.Left + 1, HotbarIcon11Bounds.Top + HotbarIcon11Bounds.Bottom - 12, FontColor, 0
                End If
            End If
                    'hotbaricon12
            dX = HotbarIcon12Bounds.Left
            dY = HotbarIcon12Bounds.Top
            dw = HotbarIcon12Bounds.Right
            dH = HotbarIcon12Bounds.Bottom
            i = 12
            n = 0
            Select Case Hotbar(i).sType
                Case 1 ' inventory
                    If Len(Item(Hotbar(i).slot).Name) > 0 Then
                        If Item(Hotbar(i).slot).pic > 0 Then
                            If Item(Hotbar(i).slot).pic <= numitems Then
                                RenderTexture Tex_Item(Item(Hotbar(i).slot).pic), HotbarIcon12Bounds.Left, HotbarIcon12Bounds.Top, 0, 0, HotbarIcon12Bounds.Right, HotbarIcon12Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
                Case 2 ' spell
                    If Len(spell(Hotbar(i).slot).Name) > 0 Then
                        If spell(Hotbar(i).slot).Icon > 0 Then
                            If spell(Hotbar(i).slot).Icon <= NumSpellIcons Then
                                ' check for cooldown
                                For X = 1 To MAX_PLAYER_SPELLS
                                    If PlayerSpells(X) = Hotbar(i).slot Then
                                        ' has spell
                                        If Not SpellCD(X) = 0 Then
                                            n = 1
                                        End If
                                    End If
                                Next
                                RenderTexture Tex_SpellIcon(spell(Hotbar(i).slot).Icon), HotbarIcon12Bounds.Left, HotbarIcon12Bounds.Top, n * 32, 0, HotbarIcon12Bounds.Right, HotbarIcon12Bounds.Bottom, 32, 32
                            End If
                        End If
                    End If
            End Select
                    ' render the letters
            Num = "+"
            If HotbarIcon12Bounds.Right > EngineGetTextWidth(Font_Georgia, Num) + 2 Then
                If HotbarIcon12Bounds.Bottom > 12 Then
                    RenderText Font_Georgia, Num, HotbarIcon12Bounds.Left + 1, HotbarIcon12Bounds.Top + HotbarIcon12Bounds.Bottom - 12, FontColor, 0
                End If
            End If
        End If
    



   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawHotbar", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Sub DrawGameMenu()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long

    'GameMenuPanel

   On Error GoTo errorhandler

    dX = GameMenuPanelBounds.Left
    dY = GameMenuPanelBounds.Top
    dw = GameMenuPanelBounds.Right
    dH = GameMenuPanelBounds.Bottom
    sx = GameMenuPanelSrcBounds.Left
    sy = GameMenuPanelSrcBounds.Top
    sW = GameMenuPanelSrcBounds.Right
    sH = GameMenuPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If GameMenuPanelImage.Texture > 0 Then
            RenderTexture GameMenuPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'InventoryBtn
        dX = InventoryBtnBounds.Left
        dY = InventoryBtnBounds.Top
        dw = InventoryBtnBounds.Right
        dH = InventoryBtnBounds.Bottom
        sx = InventoryBtnSrcBounds.Left
        sy = InventoryBtnSrcBounds.Top
        sW = InventoryBtnSrcBounds.Right
        sH = InventoryBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If InventoryBtnState <> 2 Then
                        If InventoryBtnHoverImage.Texture > 0 Then
                            RenderTexture InventoryBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If InventoryBtnClickImage.Texture > 0 Then
                            RenderTexture InventoryBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If InventoryBtnState = 2 Then
                        If InventoryBtnClickImage.Texture > 0 Then
                            RenderTexture InventoryBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If InventoryBtnNormImage.Texture > 0 Then
                            RenderTexture InventoryBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If InventoryBtnState = 2 Then
                    If InventoryBtnClickImage.Texture > 0 Then
                        RenderTexture InventoryBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If InventoryBtnNormImage.Texture > 0 Then
                        RenderTexture InventoryBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'SkillsBtn
        dX = SkillsBtnBounds.Left
        dY = SkillsBtnBounds.Top
        dw = SkillsBtnBounds.Right
        dH = SkillsBtnBounds.Bottom
        sx = SkillsBtnSrcBounds.Left
        sy = SkillsBtnSrcBounds.Top
        sW = SkillsBtnSrcBounds.Right
        sH = SkillsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If SkillsBtnState <> 2 Then
                        If SkillsBtnHoverImage.Texture > 0 Then
                            RenderTexture SkillsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If SkillsBtnClickImage.Texture > 0 Then
                            RenderTexture SkillsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If SkillsBtnState = 2 Then
                        If SkillsBtnClickImage.Texture > 0 Then
                            RenderTexture SkillsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If SkillsBtnNormImage.Texture > 0 Then
                            RenderTexture SkillsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If SkillsBtnState = 2 Then
                    If SkillsBtnClickImage.Texture > 0 Then
                        RenderTexture SkillsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If SkillsBtnNormImage.Texture > 0 Then
                        RenderTexture SkillsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'CharacterBtn
        dX = CharacterBtnBounds.Left
        dY = CharacterBtnBounds.Top
        dw = CharacterBtnBounds.Right
        dH = CharacterBtnBounds.Bottom
        sx = CharacterBtnSrcBounds.Left
        sy = CharacterBtnSrcBounds.Top
        sW = CharacterBtnSrcBounds.Right
        sH = CharacterBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CharacterBtnState <> 2 Then
                        If CharacterBtnHoverImage.Texture > 0 Then
                            RenderTexture CharacterBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CharacterBtnClickImage.Texture > 0 Then
                            RenderTexture CharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CharacterBtnState = 2 Then
                        If CharacterBtnClickImage.Texture > 0 Then
                            RenderTexture CharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CharacterBtnNormImage.Texture > 0 Then
                            RenderTexture CharacterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CharacterBtnState = 2 Then
                    If CharacterBtnClickImage.Texture > 0 Then
                        RenderTexture CharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CharacterBtnNormImage.Texture > 0 Then
                        RenderTexture CharacterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'OptionsBtn
        dX = OptionsBtnBounds.Left
        dY = OptionsBtnBounds.Top
        dw = OptionsBtnBounds.Right
        dH = OptionsBtnBounds.Bottom
        sx = OptionsBtnSrcBounds.Left
        sy = OptionsBtnSrcBounds.Top
        sW = OptionsBtnSrcBounds.Right
        sH = OptionsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If OptionsBtnState <> 2 Then
                        If OptionsBtnHoverImage.Texture > 0 Then
                            RenderTexture OptionsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OptionsBtnClickImage.Texture > 0 Then
                            RenderTexture OptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If OptionsBtnState = 2 Then
                        If OptionsBtnClickImage.Texture > 0 Then
                            RenderTexture OptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If OptionsBtnNormImage.Texture > 0 Then
                            RenderTexture OptionsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If OptionsBtnState = 2 Then
                    If OptionsBtnClickImage.Texture > 0 Then
                        RenderTexture OptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If OptionsBtnNormImage.Texture > 0 Then
                        RenderTexture OptionsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'TradeBtn
        dX = TradeBtnBounds.Left
        dY = TradeBtnBounds.Top
        dw = TradeBtnBounds.Right
        dH = TradeBtnBounds.Bottom
        sx = TradeBtnSrcBounds.Left
        sy = TradeBtnSrcBounds.Top
        sW = TradeBtnSrcBounds.Right
        sH = TradeBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If TradeBtnState <> 2 Then
                        If TradeBtnHoverImage.Texture > 0 Then
                            RenderTexture TradeBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If TradeBtnClickImage.Texture > 0 Then
                            RenderTexture TradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If TradeBtnState = 2 Then
                        If TradeBtnClickImage.Texture > 0 Then
                            RenderTexture TradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If TradeBtnNormImage.Texture > 0 Then
                            RenderTexture TradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If TradeBtnState = 2 Then
                    If TradeBtnClickImage.Texture > 0 Then
                        RenderTexture TradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If TradeBtnNormImage.Texture > 0 Then
                        RenderTexture TradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'PartyBtn
        dX = PartyBtnBounds.Left
        dY = PartyBtnBounds.Top
        dw = PartyBtnBounds.Right
        dH = PartyBtnBounds.Bottom
        sx = PartyBtnSrcBounds.Left
        sy = PartyBtnSrcBounds.Top
        sW = PartyBtnSrcBounds.Right
        sH = PartyBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PartyBtnState <> 2 Then
                        If PartyBtnHoverImage.Texture > 0 Then
                            RenderTexture PartyBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyBtnClickImage.Texture > 0 Then
                            RenderTexture PartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PartyBtnState = 2 Then
                        If PartyBtnClickImage.Texture > 0 Then
                            RenderTexture PartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyBtnNormImage.Texture > 0 Then
                            RenderTexture PartyBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PartyBtnState = 2 Then
                    If PartyBtnClickImage.Texture > 0 Then
                        RenderTexture PartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PartyBtnNormImage.Texture > 0 Then
                        RenderTexture PartyBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'QuestsBtn
        dX = QuestsBtnBounds.Left
        dY = QuestsBtnBounds.Top
        dw = QuestsBtnBounds.Right
        dH = QuestsBtnBounds.Bottom
        sx = QuestsBtnSrcBounds.Left
        sy = QuestsBtnSrcBounds.Top
        sW = QuestsBtnSrcBounds.Right
        sH = QuestsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If QuestsBtnState <> 2 Then
                        If QuestsBtnHoverImage.Texture > 0 Then
                            RenderTexture QuestsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestsBtnClickImage.Texture > 0 Then
                            RenderTexture QuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If QuestsBtnState = 2 Then
                        If QuestsBtnClickImage.Texture > 0 Then
                            RenderTexture QuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestsBtnNormImage.Texture > 0 Then
                            RenderTexture QuestsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If QuestsBtnState = 2 Then
                    If QuestsBtnClickImage.Texture > 0 Then
                        RenderTexture QuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If QuestsBtnNormImage.Texture > 0 Then
                        RenderTexture QuestsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'FriendsBtn
        dX = FriendsBtnBounds.Left
        dY = FriendsBtnBounds.Top
        dw = FriendsBtnBounds.Right
        dH = FriendsBtnBounds.Bottom
        sx = FriendsBtnSrcBounds.Left
        sy = FriendsBtnSrcBounds.Top
        sW = FriendsBtnSrcBounds.Right
        sH = FriendsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If FriendsBtnState <> 2 Then
                        If FriendsBtnHoverImage.Texture > 0 Then
                            RenderTexture FriendsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If FriendsBtnState = 2 Then
                        If FriendsBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsBtnNormImage.Texture > 0 Then
                            RenderTexture FriendsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If FriendsBtnState = 2 Then
                    If FriendsBtnClickImage.Texture > 0 Then
                        RenderTexture FriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If FriendsBtnNormImage.Texture > 0 Then
                        RenderTexture FriendsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        'PetsBtn
        dX = PetsBtnBounds.Left
        dY = PetsBtnBounds.Top
        dw = PetsBtnBounds.Right
        dH = PetsBtnBounds.Bottom
        sx = PetsBtnSrcBounds.Left
        sy = PetsBtnSrcBounds.Top
        sW = PetsBtnSrcBounds.Right
        sH = PetsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PetsBtnState <> 2 Then
                        If PetsBtnHoverImage.Texture > 0 Then
                            RenderTexture PetsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetsBtnClickImage.Texture > 0 Then
                            RenderTexture PetsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PetsBtnState = 2 Then
                        If PetsBtnClickImage.Texture > 0 Then
                            RenderTexture PetsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetsBtnNormImage.Texture > 0 Then
                            RenderTexture PetsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PetsBtnState = 2 Then
                    If PetsBtnClickImage.Texture > 0 Then
                        RenderTexture PetsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PetsBtnNormImage.Texture > 0 Then
                        RenderTexture PetsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawGameMenu", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawCharacterPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long, itemPic As Long

    'CharacterPnl

   On Error GoTo errorhandler

    dX = CharacterPnlBounds.Left
    dY = CharacterPnlBounds.Top
    dw = CharacterPnlBounds.Right
    dH = CharacterPnlBounds.Bottom
    sx = CharacterPnlSrcBounds.Left
    sy = CharacterPnlSrcBounds.Top
    sW = CharacterPnlSrcBounds.Right
    sH = CharacterPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If CharacterPnlImage.Texture > 0 Then
            RenderTexture CharacterPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Name
        'PlayerNameLbl
        dX = PlayerNameLblBounds.Left
        dY = PlayerNameLblBounds.Top
        dw = PlayerNameLblBounds.Right
        dH = PlayerNameLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(Player(MyIndex).Name) & " Lv. " & GetPlayerLevel(MyIndex), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(Player(MyIndex).Name) & " Lv. " & GetPlayerLevel(MyIndex), dw), dX, dY, FontColor
        End If
            'Face
        dX = CharacterFaceBounds.Left
        dY = CharacterFaceBounds.Top
        dw = CharacterFaceBounds.Right
        dH = CharacterFaceBounds.Bottom
        If dw > 0 And dH > 0 Then
            If CharMode = 1 Then
                'Render all of the face stuff
                If Player(MyIndex).Face(FaceEnum.Hair) > 0 And Player(MyIndex).Face(FaceEnum.Hair) <= NumFaceHair Then
                    If Tex_FHairB(Player(MyIndex).Face(FaceEnum.Hair)).Texture > 0 Then
                        RenderTexture Tex_FHairB(Player(MyIndex).Face(FaceEnum.Hair)), dX, dY, 0, 0, dw, dH, Tex_FHairB(Player(MyIndex).Face(FaceEnum.Hair)).Width, Tex_FHairB(Player(MyIndex).Face(FaceEnum.Hair)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Head) > 0 And Player(MyIndex).Face(FaceEnum.Head) <= NumFaceHeads Then
                    If Tex_FHeads(Player(MyIndex).Face(FaceEnum.Head)).Texture > 0 Then
                        RenderTexture Tex_FHeads(Player(MyIndex).Face(FaceEnum.Head)), dX, dY, 0, 0, dw, dH, Tex_FHeads(Player(MyIndex).Face(FaceEnum.Head)).Width, Tex_FHeads(Player(MyIndex).Face(FaceEnum.Head)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Eyes) > 0 And Player(MyIndex).Face(FaceEnum.Eyes) <= NumFaceEyes Then
                    If Tex_FEyes(Player(MyIndex).Face(FaceEnum.Eyes)).Texture > 0 Then
                        RenderTexture Tex_FEyes(Player(MyIndex).Face(FaceEnum.Eyes)), dX, dY, 0, 0, dw, dH, Tex_FEyes(Player(MyIndex).Face(FaceEnum.Eyes)).Width, Tex_FEyes(Player(MyIndex).Face(FaceEnum.Eyes)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.EyeBrows) > 0 And Player(MyIndex).Face(FaceEnum.EyeBrows) <= NumFaceEyebrows Then
                    If Tex_FEyebrows(Player(MyIndex).Face(FaceEnum.EyeBrows)).Texture > 0 Then
                        RenderTexture Tex_FEyebrows(Player(MyIndex).Face(FaceEnum.EyeBrows)), dX, dY, 0, 0, dw, dH, Tex_FEyebrows(Player(MyIndex).Face(FaceEnum.EyeBrows)).Width, Tex_FEyebrows(Player(MyIndex).Face(FaceEnum.EyeBrows)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Nose) > 0 And Player(MyIndex).Face(FaceEnum.Nose) <= NumFaceNoses Then
                    If Tex_FNose(Player(MyIndex).Face(FaceEnum.Nose)).Texture > 0 Then
                        RenderTexture Tex_FNose(Player(MyIndex).Face(FaceEnum.Nose)), dX, dY, 0, 0, dw, dH, Tex_FNose(Player(MyIndex).Face(FaceEnum.Nose)).Width, Tex_FNose(Player(MyIndex).Face(FaceEnum.Nose)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Mouth) > 0 And Player(MyIndex).Face(FaceEnum.Mouth) <= NumFaceMouths Then
                    If Tex_FMouth(Player(MyIndex).Face(FaceEnum.Mouth)).Texture > 0 Then
                        RenderTexture Tex_FMouth(Player(MyIndex).Face(FaceEnum.Mouth)), dX, dY, 0, 0, dw, dH, Tex_FMouth(Player(MyIndex).Face(FaceEnum.Mouth)).Width, Tex_FMouth(Player(MyIndex).Face(FaceEnum.Mouth)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Ears) > 0 And Player(MyIndex).Face(FaceEnum.Ears) <= NumFaceEars Then
                    If Tex_FEars(Player(MyIndex).Face(FaceEnum.Ears)).Texture > 0 Then
                        RenderTexture Tex_FEars(Player(MyIndex).Face(FaceEnum.Ears)), dX, dY, 0, 0, dw, dH, Tex_FEars(Player(MyIndex).Face(FaceEnum.Ears)).Width, Tex_FEars(Player(MyIndex).Face(FaceEnum.Ears)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Etc) > 0 And Player(MyIndex).Face(FaceEnum.Etc) <= NumFaceEtc Then
                    If Tex_FEtc(Player(MyIndex).Face(FaceEnum.Etc)).Texture > 0 Then
                        RenderTexture Tex_FEtc(Player(MyIndex).Face(FaceEnum.Etc)), dX, dY, 0, 0, dw, dH, Tex_FEtc(Player(MyIndex).Face(FaceEnum.Etc)).Width, Tex_FEtc(Player(MyIndex).Face(FaceEnum.Etc)).Height
                    End If
                End If
                                If Player(MyIndex).Face(FaceEnum.Hair) > 0 And Player(MyIndex).Face(FaceEnum.Hair) <= NumFaceHair Then
                    If Tex_FHair(Player(MyIndex).Face(FaceEnum.Hair)).Texture > 0 Then
                        RenderTexture Tex_FHair(Player(MyIndex).Face(FaceEnum.Hair)), dX, dY, 0, 0, dw, dH, Tex_FHair(Player(MyIndex).Face(FaceEnum.Hair)).Width, Tex_FHair(Player(MyIndex).Face(FaceEnum.Hair)).Height
                    End If
                End If
                        If Player(MyIndex).Face(FaceEnum.Shirt) > 0 And Player(MyIndex).Face(FaceEnum.Shirt) <= NumFaceShirts Then
                    If Tex_FShirts(Player(MyIndex).Face(FaceEnum.Shirt)).Texture > 0 Then
                        RenderTexture Tex_FShirts(Player(MyIndex).Face(FaceEnum.Shirt)), dX, dY, 0, 0, dw, dH, Tex_FShirts(Player(MyIndex).Face(FaceEnum.Shirt)).Width, Tex_FShirts(Player(MyIndex).Face(FaceEnum.Shirt)).Height
                    End If
                End If
            Else
                If Player(MyIndex).Face(FaceEnum.Head) > 0 And Player(MyIndex).Face(FaceEnum.Head) <= NumFaces Then
                    If Tex_Face(Player(MyIndex).Face(FaceEnum.Head)).Texture > 0 Then
                        RenderTexture Tex_Face(Player(MyIndex).Face(FaceEnum.Head)), dX, dY, 0, 0, dw, dH, Tex_Face(Player(MyIndex).Face(FaceEnum.Head)).Width, Tex_Face(Player(MyIndex).Face(FaceEnum.Head)).Height
                    End If
                End If
            End If
        End If
            'Stat Labels
        'StrengthLbl
        dX = StrengthLblBounds.Left
        dY = StrengthLblBounds.Top
        dw = StrengthLblBounds.Right
        dH = StrengthLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Str: " & Player(MyIndex).stat(Stats.Strength)), dw), dX, dY, FontColor
        End If
            'EnduranceLbl
        dX = EnduranceLblBounds.Left
        dY = EnduranceLblBounds.Top
        dw = EnduranceLblBounds.Right
        dH = EnduranceLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("End: " & Player(MyIndex).stat(Stats.Endurance)), dw), dX, dY, FontColor
        End If
            'IntelligenceLbl
        dX = IntelligenceLblBounds.Left
        dY = IntelligenceLblBounds.Top
        dw = IntelligenceLblBounds.Right
        dH = IntelligenceLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Int: " & Player(MyIndex).stat(Stats.Intelligence)), dw), dX, dY, FontColor
        End If
            'AgilityLbl
        dX = AgilityLblBounds.Left
        dY = AgilityLblBounds.Top
        dw = AgilityLblBounds.Right
        dH = AgilityLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Agi: " & Player(MyIndex).stat(Stats.Agility)), dw), dX, dY, FontColor
        End If
            'WillPowerLbl
        dX = WillpowerLblBounds.Left
        dY = WillpowerLblBounds.Top
        dw = WillpowerLblBounds.Right
        dH = WillpowerLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Will: " & Player(MyIndex).stat(Stats.Willpower)), dw), dX, dY, FontColor
        End If
            'PointsLbl
        dX = PointsLblBounds.Left
        dY = PointsLblBounds.Top
        dw = PointsLblBounds.Right
        dH = PointsLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Pnts: " & Player(MyIndex).Points), dw), dX, dY, FontColor
        End If
            If GetPlayerPOINTS(MyIndex) > 0 Then
            'Stat Plus Signs
            'AddStrengthBtn
            dX = AddStrengthBtnBounds.Left
            dY = AddStrengthBtnBounds.Top
            dw = AddStrengthBtnBounds.Right
            dH = AddStrengthBtnBounds.Bottom
            sx = AddStrengthBtnSrcBounds.Left
            sy = AddStrengthBtnSrcBounds.Top
            sW = AddStrengthBtnSrcBounds.Right
            sH = AddStrengthBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If AddStrengthBtnState <> 2 Then
                            If AddStrengthBtnHoverImage.Texture > 0 Then
                                RenderTexture AddStrengthBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddStrengthBtnClickImage.Texture > 0 Then
                                RenderTexture AddStrengthBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If AddStrengthBtnState = 2 Then
                            If AddStrengthBtnClickImage.Texture > 0 Then
                                RenderTexture AddStrengthBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddStrengthBtnNormImage.Texture > 0 Then
                                RenderTexture AddStrengthBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If AddStrengthBtnState = 2 Then
                        If AddStrengthBtnClickImage.Texture > 0 Then
                            RenderTexture AddStrengthBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddStrengthBtnNormImage.Texture > 0 Then
                            RenderTexture AddStrengthBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                    'AddEnduranceBtn
            dX = AddEnduranceBtnBounds.Left
            dY = AddEnduranceBtnBounds.Top
            dw = AddEnduranceBtnBounds.Right
            dH = AddEnduranceBtnBounds.Bottom
            sx = AddEnduranceBtnSrcBounds.Left
            sy = AddEnduranceBtnSrcBounds.Top
            sW = AddEnduranceBtnSrcBounds.Right
            sH = AddEnduranceBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If AddEnduranceBtnState <> 2 Then
                            If AddEnduranceBtnHoverImage.Texture > 0 Then
                                RenderTexture AddEnduranceBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddEnduranceBtnClickImage.Texture > 0 Then
                                RenderTexture AddEnduranceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If AddEnduranceBtnState = 2 Then
                            If AddEnduranceBtnClickImage.Texture > 0 Then
                                RenderTexture AddEnduranceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddEnduranceBtnNormImage.Texture > 0 Then
                                RenderTexture AddEnduranceBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If AddEnduranceBtnState = 2 Then
                        If AddEnduranceBtnClickImage.Texture > 0 Then
                            RenderTexture AddEnduranceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddEnduranceBtnNormImage.Texture > 0 Then
                            RenderTexture AddEnduranceBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            'AddIntelligenceBtn
            dX = AddIntelligenceBtnBounds.Left
            dY = AddIntelligenceBtnBounds.Top
            dw = AddIntelligenceBtnBounds.Right
            dH = AddIntelligenceBtnBounds.Bottom
            sx = AddIntelligenceBtnSrcBounds.Left
            sy = AddIntelligenceBtnSrcBounds.Top
            sW = AddIntelligenceBtnSrcBounds.Right
            sH = AddIntelligenceBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If AddIntelligenceBtnState <> 2 Then
                            If AddIntelligenceBtnHoverImage.Texture > 0 Then
                                RenderTexture AddIntelligenceBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddIntelligenceBtnClickImage.Texture > 0 Then
                                RenderTexture AddIntelligenceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If AddIntelligenceBtnState = 2 Then
                            If AddIntelligenceBtnClickImage.Texture > 0 Then
                                RenderTexture AddIntelligenceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddIntelligenceBtnNormImage.Texture > 0 Then
                                RenderTexture AddIntelligenceBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If AddIntelligenceBtnState = 2 Then
                        If AddIntelligenceBtnClickImage.Texture > 0 Then
                            RenderTexture AddIntelligenceBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddIntelligenceBtnNormImage.Texture > 0 Then
                            RenderTexture AddIntelligenceBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                    'AddAgilityBtn
            dX = AddAgilityBtnBounds.Left
            dY = AddAgilityBtnBounds.Top
            dw = AddAgilityBtnBounds.Right
            dH = AddAgilityBtnBounds.Bottom
            sx = AddAgilityBtnSrcBounds.Left
            sy = AddAgilityBtnSrcBounds.Top
            sW = AddAgilityBtnSrcBounds.Right
            sH = AddAgilityBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If AddAgilityBtnState <> 2 Then
                            If AddAgilityBtnHoverImage.Texture > 0 Then
                                RenderTexture AddAgilityBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddAgilityBtnClickImage.Texture > 0 Then
                                RenderTexture AddAgilityBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If AddAgilityBtnState = 2 Then
                            If AddAgilityBtnClickImage.Texture > 0 Then
                                RenderTexture AddAgilityBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddAgilityBtnNormImage.Texture > 0 Then
                                RenderTexture AddAgilityBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If AddAgilityBtnState = 2 Then
                        If AddAgilityBtnClickImage.Texture > 0 Then
                            RenderTexture AddAgilityBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddAgilityBtnNormImage.Texture > 0 Then
                            RenderTexture AddAgilityBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                    'AddWillpowerBtn
            dX = AddWillpowerBtnBounds.Left
            dY = AddWillpowerBtnBounds.Top
            dw = AddWillpowerBtnBounds.Right
            dH = AddWillpowerBtnBounds.Bottom
            sx = AddWillpowerBtnSrcBounds.Left
            sy = AddWillpowerBtnSrcBounds.Top
            sW = AddWillpowerBtnSrcBounds.Right
            sH = AddWillpowerBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If AddWillpowerBtnState <> 2 Then
                            If AddWillpowerBtnHoverImage.Texture > 0 Then
                                RenderTexture AddWillpowerBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddWillpowerBtnClickImage.Texture > 0 Then
                                RenderTexture AddWillpowerBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If AddWillpowerBtnState = 2 Then
                            If AddWillpowerBtnClickImage.Texture > 0 Then
                                RenderTexture AddWillpowerBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If AddWillpowerBtnNormImage.Texture > 0 Then
                                RenderTexture AddWillpowerBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If AddWillpowerBtnState = 2 Then
                        If AddWillpowerBtnClickImage.Texture > 0 Then
                            RenderTexture AddWillpowerBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddWillpowerBtnNormImage.Texture > 0 Then
                            RenderTexture AddWillpowerBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'Equipment Icons
        dX = PlayerWeaponSlotBounds.Left
        dY = PlayerWeaponSlotBounds.Top
        dw = PlayerWeaponSlotBounds.Right
        dH = PlayerWeaponSlotBounds.Bottom
        If dw > 0 And dH > 0 Then
            'Render all of the face stuff
            If Player(MyIndex).Equipment(Equipment.Weapon) > 0 Then
                itemPic = Item(Player(MyIndex).Equipment(Equipment.Weapon)).pic
                If itemPic > 0 And itemPic <= numitems Then
                    RenderTexture Tex_Item(itemPic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            Else
                If PlayerWeaponSlotImage.Texture > 0 Then
                    RenderTexture PlayerWeaponSlotImage, dX, dY, 0, 0, dw, dH, PlayerWeaponSlotImage.Width, PlayerWeaponSlotImage.Height
                End If
            End If
        End If
            dX = PlayerArmorSlotBounds.Left
        dY = PlayerArmorSlotBounds.Top
        dw = PlayerArmorSlotBounds.Right
        dH = PlayerArmorSlotBounds.Bottom
        If dw > 0 And dH > 0 Then
            'Render all of the face stuff
            If Player(MyIndex).Equipment(Equipment.Armor) > 0 Then
                itemPic = Item(Player(MyIndex).Equipment(Equipment.Armor)).pic
                If itemPic > 0 And itemPic <= numitems Then
                    RenderTexture Tex_Item(itemPic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            Else
                If PlayerArmorSlotImage.Texture > 0 Then
                    RenderTexture PlayerArmorSlotImage, dX, dY, 0, 0, dw, dH, PlayerArmorSlotImage.Width, PlayerArmorSlotImage.Height
                End If
            End If
        End If
            dX = PlayerShieldSlotBounds.Left
        dY = PlayerShieldSlotBounds.Top
        dw = PlayerShieldSlotBounds.Right
        dH = PlayerShieldSlotBounds.Bottom
        If dw > 0 And dH > 0 Then
            'Render all of the face stuff
            If Player(MyIndex).Equipment(Equipment.Shield) > 0 Then
                itemPic = Item(Player(MyIndex).Equipment(Equipment.Shield)).pic
                If itemPic > 0 And itemPic <= numitems Then
                    RenderTexture Tex_Item(itemPic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            Else
                If PlayerShieldSlotImage.Texture > 0 Then
                    RenderTexture PlayerShieldSlotImage, dX, dY, 0, 0, dw, dH, PlayerShieldSlotImage.Width, PlayerShieldSlotImage.Height
                End If
            End If
        End If
            dX = PlayerHelmetSlotBounds.Left
        dY = PlayerHelmetSlotBounds.Top
        dw = PlayerHelmetSlotBounds.Right
        dH = PlayerHelmetSlotBounds.Bottom
        If dw > 0 And dH > 0 Then
            'Render all of the face stuff
            If Player(MyIndex).Equipment(Equipment.Helmet) > 0 Then
                itemPic = Item(Player(MyIndex).Equipment(Equipment.Helmet)).pic
                If itemPic > 0 And itemPic <= numitems Then
                    RenderTexture Tex_Item(itemPic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            Else
                If PlayerHelmetSlotImage.Texture > 0 Then
                    RenderTexture PlayerHelmetSlotImage, dX, dY, 0, 0, dw, dH, PlayerHelmetSlotImage.Width, PlayerHelmetSlotImage.Height
                End If
            End If
        End If
            'Close Button
        'CloseCharacterBtn
        dX = CloseCharacterBtnBounds.Left
        dY = CloseCharacterBtnBounds.Top
        dw = CloseCharacterBtnBounds.Right
        dH = CloseCharacterBtnBounds.Bottom
        sx = CloseCharacterBtnSrcBounds.Left
        sy = CloseCharacterBtnSrcBounds.Top
        sW = CloseCharacterBtnSrcBounds.Right
        sH = CloseCharacterBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseCharacterBtnState <> 2 Then
                        If CloseCharacterBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseCharacterBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseCharacterBtnClickImage.Texture > 0 Then
                            RenderTexture CloseCharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseCharacterBtnState = 2 Then
                        If CloseCharacterBtnClickImage.Texture > 0 Then
                            RenderTexture CloseCharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseCharacterBtnNormImage.Texture > 0 Then
                            RenderTexture CloseCharacterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseCharacterBtnState = 2 Then
                    If CloseCharacterBtnClickImage.Texture > 0 Then
                        RenderTexture CloseCharacterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseCharacterBtnNormImage.Texture > 0 Then
                        RenderTexture CloseCharacterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawCharacterPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawPetPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long, itemPic As Long, Width As Long, spellpic As Long

    'PetPanel

   On Error GoTo errorhandler
   
    If Player(MyIndex).Pet.Alive = False Then
        CurrentGameMenu = 0
        Exit Sub
    End If

    dX = PetPanelBounds.Left
    dY = PetPanelBounds.Top
    dw = PetPanelBounds.Right
    dH = PetPanelBounds.Bottom
    sx = PetPanelSrcBounds.Left
    sy = PetPanelSrcBounds.Top
    sW = PetPanelSrcBounds.Right
    sH = PetPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If PetPanelImage.Texture > 0 Then
            RenderTexture PetPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
        'Name
        'PetName
        dX = PetNameBounds.Left
        dY = PetNameBounds.Top
        dw = PetNameBounds.Right
        dH = PetNameBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(Pet(Player(MyIndex).Pet.Num).Name) & " Lv. " & Player(MyIndex).Pet.Level, dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(Pet(Player(MyIndex).Pet.Num).Name) & " Lv. " & Player(MyIndex).Pet.Level, dw), dX, dY, FontColor
        End If
        'Pet Icon
        'Face
        dX = PetIconPanelBounds.Left
        dY = PetIconPanelBounds.Top
        dw = PetIconPanelBounds.Right
        dH = PetIconPanelBounds.Bottom
        If dw > 0 And dH > 0 Then
            'Render all of the face stuff
            If Pet(Player(MyIndex).Pet.Num).Sprite > 0 And Pet(Player(MyIndex).Pet.Num).Sprite <= NumCharacters Then
                If Tex_Character(Pet(Player(MyIndex).Pet.Num).Sprite).Texture > 0 Then
                    RenderTexture Tex_Character(Pet(Player(MyIndex).Pet.Num).Sprite), dX, dY, 0, 0, dw, dH, Tex_Character(Pet(Player(MyIndex).Pet.Num).Sprite).Width / 4, Tex_Character(Pet(Player(MyIndex).Pet.Num).Sprite).Height / 4
                End If
            End If
        End If
        'PetHpText
        dX = PetHPTextBounds.Left
        dY = PetHPTextBounds.Top
        dw = PetHPTextBounds.Right
        dH = PetHPTextBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            'dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, "HP: " & Player(MyIndex).Pet.Health & " / " & Player(MyIndex).Pet.MaxHp, dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, "HP: " & Player(MyIndex).Pet.Health & " / " & Player(MyIndex).Pet.MaxHp, dw), dX, dY, FontColor
        End If
        'PetMPText
        dX = PetMPTextBounds.Left
        dY = PetMPTextBounds.Top
        dw = PetMPTextBounds.Right
        dH = PetMPTextBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            'dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, "MP: " & Player(MyIndex).Pet.Mana & " / " & Player(MyIndex).Pet.MaxMP, dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, "MP: " & Player(MyIndex).Pet.Mana & " / " & Player(MyIndex).Pet.MaxMP, dw), dX, dY, FontColor
        End If
        
        dX = PetHPPanelBounds.Left
        dY = PetHPPanelBounds.Top
        dw = PetHPPanelBounds.Right
        dH = PetHPPanelBounds.Bottom
        sx = PetHPPanelSrcBounds.Left
        sy = PetHPPanelSrcBounds.Top
        sW = PetHPPanelSrcBounds.Right
        sH = PetHPPanelSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If PetHPPanelImage.Texture > 0 Then
                Width = ((Player(MyIndex).Pet.Health / dw) / (Player(MyIndex).Pet.MaxHp / dw)) * dw
                RenderTexture PetHPPanelImage, dX, dY, sx, sy, Width, dH, Width, sH, -1
            End If
        End If
        
        dX = PetMPPanelBounds.Left
        dY = PetMPPanelBounds.Top
        dw = PetMPPanelBounds.Right
        dH = PetMPPanelBounds.Bottom
        sx = PetMPPanelSrcBounds.Left
        sy = PetMPPanelSrcBounds.Top
        sW = PetMPPanelSrcBounds.Right
        sH = PetMPPanelSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If PetMPPanelImage.Texture > 0 Then
                Width = ((Player(MyIndex).Pet.Mana / dw) / (Player(MyIndex).Pet.MaxMP / dw)) * dw
                RenderTexture PetMPPanelImage, dX, dY, sx, sy, Width, dH, Width, sH, -1
            End If
        End If
        
        
        

        'Stat Labels
        'PetStrLabel
        dX = PetStrLabelBounds.Left
        dY = PetStrLabelBounds.Top
        dw = PetStrLabelBounds.Right
        dH = PetStrLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Str: " & Player(MyIndex).Pet.stat(Stats.Strength)), dw), dX, dY, FontColor
        End If
        'PetEndLabel
        dX = PetEndLabelBounds.Left
        dY = PetEndLabelBounds.Top
        dw = PetEndLabelBounds.Right
        dH = PetEndLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("End: " & Player(MyIndex).Pet.stat(Stats.Endurance)), dw), dX, dY, FontColor
        End If
        'PetIntLabel
        dX = PetIntLabelBounds.Left
        dY = PetIntLabelBounds.Top
        dw = PetIntLabelBounds.Right
        dH = PetIntLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Int: " & Player(MyIndex).Pet.stat(Stats.Intelligence)), dw), dX, dY, FontColor
        End If
        'PetAgiLabel
        dX = PetAgiLabelBounds.Left
        dY = PetAgiLabelBounds.Top
        dw = PetAgiLabelBounds.Right
        dH = PetAgiLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Agi: " & Player(MyIndex).Pet.stat(Stats.Agility)), dw), dX, dY, FontColor
        End If
        'PetWillLabel
        dX = PetWillLabelBounds.Left
        dY = PetWillLabelBounds.Top
        dw = PetWillLabelBounds.Right
        dH = PetWillLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Will: " & Player(MyIndex).Pet.stat(Stats.Willpower)), dw), dX, dY, FontColor
        End If
        'PetPntsLabel
        dX = PetPntsLabelBounds.Left
        dY = PetPntsLabelBounds.Top
        dw = PetPntsLabelBounds.Right
        dH = PetPntsLabelBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Pnts: " & Player(MyIndex).Pet.Points), dw), dX, dY, FontColor
        End If
        
        
        If Player(MyIndex).Pet.Points > 0 Then
            'Stat Plus Signs
            'PetAddStrBtn
            dX = PetAddStrBtnBounds.Left
            dY = PetAddStrBtnBounds.Top
            dw = PetAddStrBtnBounds.Right
            dH = PetAddStrBtnBounds.Bottom
            sx = PetAddStrBtnSrcBounds.Left
            sy = PetAddStrBtnSrcBounds.Top
            sW = PetAddStrBtnSrcBounds.Right
            sH = PetAddStrBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PetAddStrBtnState <> 2 Then
                            If PetAddStrBtnHoverImage.Texture > 0 Then
                                RenderTexture PetAddStrBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddStrBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddStrBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PetAddStrBtnState = 2 Then
                            If PetAddStrBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddStrBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddStrBtnNormImage.Texture > 0 Then
                                RenderTexture PetAddStrBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PetAddStrBtnState = 2 Then
                        If PetAddStrBtnClickImage.Texture > 0 Then
                            RenderTexture PetAddStrBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetAddStrBtnNormImage.Texture > 0 Then
                            RenderTexture PetAddStrBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            
            'PetAddIntBtn
            dX = PetAddIntBtnBounds.Left
            dY = PetAddIntBtnBounds.Top
            dw = PetAddIntBtnBounds.Right
            dH = PetAddIntBtnBounds.Bottom
            sx = PetAddIntBtnSrcBounds.Left
            sy = PetAddIntBtnSrcBounds.Top
            sW = PetAddIntBtnSrcBounds.Right
            sH = PetAddIntBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PetAddIntBtnState <> 2 Then
                            If PetAddIntBtnHoverImage.Texture > 0 Then
                                RenderTexture PetAddIntBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddIntBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddIntBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PetAddIntBtnState = 2 Then
                            If PetAddIntBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddIntBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddIntBtnNormImage.Texture > 0 Then
                                RenderTexture PetAddIntBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PetAddIntBtnState = 2 Then
                        If PetAddIntBtnClickImage.Texture > 0 Then
                            RenderTexture PetAddIntBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetAddIntBtnNormImage.Texture > 0 Then
                            RenderTexture PetAddIntBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            
            'PetAddAgiBtn
            dX = PetAddAgiBtnBounds.Left
            dY = PetAddAgiBtnBounds.Top
            dw = PetAddAgiBtnBounds.Right
            dH = PetAddAgiBtnBounds.Bottom
            sx = PetAddAgiBtnSrcBounds.Left
            sy = PetAddAgiBtnSrcBounds.Top
            sW = PetAddAgiBtnSrcBounds.Right
            sH = PetAddAgiBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PetAddAgiBtnState <> 2 Then
                            If PetAddAgiBtnHoverImage.Texture > 0 Then
                                RenderTexture PetAddAgiBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddAgiBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddAgiBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PetAddAgiBtnState = 2 Then
                            If PetAddAgiBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddAgiBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddAgiBtnNormImage.Texture > 0 Then
                                RenderTexture PetAddAgiBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PetAddAgiBtnState = 2 Then
                        If PetAddAgiBtnClickImage.Texture > 0 Then
                            RenderTexture PetAddAgiBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetAddAgiBtnNormImage.Texture > 0 Then
                            RenderTexture PetAddAgiBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            
            'PetAddEndBtn
            dX = PetAddEndBtnBounds.Left
            dY = PetAddEndBtnBounds.Top
            dw = PetAddEndBtnBounds.Right
            dH = PetAddEndBtnBounds.Bottom
            sx = PetAddEndBtnSrcBounds.Left
            sy = PetAddEndBtnSrcBounds.Top
            sW = PetAddEndBtnSrcBounds.Right
            sH = PetAddEndBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PetAddEndBtnState <> 2 Then
                            If PetAddEndBtnHoverImage.Texture > 0 Then
                                RenderTexture PetAddEndBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddEndBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddEndBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PetAddEndBtnState = 2 Then
                            If PetAddEndBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddEndBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddEndBtnNormImage.Texture > 0 Then
                                RenderTexture PetAddEndBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PetAddEndBtnState = 2 Then
                        If PetAddEndBtnClickImage.Texture > 0 Then
                            RenderTexture PetAddEndBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetAddEndBtnNormImage.Texture > 0 Then
                            RenderTexture PetAddEndBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            
            'PetAddWillBtn
            dX = PetAddWillBtnBounds.Left
            dY = PetAddWillBtnBounds.Top
            dw = PetAddWillBtnBounds.Right
            dH = PetAddWillBtnBounds.Bottom
            sx = PetAddWillBtnSrcBounds.Left
            sy = PetAddWillBtnSrcBounds.Top
            sW = PetAddWillBtnSrcBounds.Right
            sH = PetAddWillBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If PetAddWillBtnState <> 2 Then
                            If PetAddWillBtnHoverImage.Texture > 0 Then
                                RenderTexture PetAddWillBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddWillBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddWillBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If PetAddWillBtnState = 2 Then
                            If PetAddWillBtnClickImage.Texture > 0 Then
                                RenderTexture PetAddWillBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If PetAddWillBtnNormImage.Texture > 0 Then
                                RenderTexture PetAddWillBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If PetAddWillBtnState = 2 Then
                        If PetAddWillBtnClickImage.Texture > 0 Then
                            RenderTexture PetAddWillBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PetAddWillBtnNormImage.Texture > 0 Then
                            RenderTexture PetAddWillBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
            
        End If
                
        If Pet(Player(MyIndex).Pet.Num).spell(1) > 0 And Pet(Player(MyIndex).Pet.Num).spell(1) <= MAX_SPELLS Then
            dX = PetSpell1PanelBounds.Left
            dY = PetSpell1PanelBounds.Top
            dw = PetSpell1PanelBounds.Right
            dH = PetSpell1PanelBounds.Bottom
            If dw > 0 And dH > 0 Then
                spellpic = spell(Pet(Player(MyIndex).Pet.Num).spell(1)).Icon
                If spellpic > 0 And spellpic <= NumSpellIcons Then
                    RenderTexture Tex_SpellIcon(spellpic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            End If
            dX = PetSpell1LabelBounds.Left
            dY = PetSpell1LabelBounds.Top
            dw = PetSpell1LabelBounds.Right
            dH = PetSpell1LabelBounds.Bottom
            If dw > 0 And dH > 0 Then
                RenderText Font_Georgia, WordWrap(Trim$(spell(Pet(Player(MyIndex).Pet.Num).spell(1)).Name), dw), dX, dY, FontColor, 0
            End If
        End If
        If Pet(Player(MyIndex).Pet.Num).spell(2) > 0 And Pet(Player(MyIndex).Pet.Num).spell(2) <= MAX_SPELLS Then
            dX = PetSpell2PanelBounds.Left
            dY = PetSpell2PanelBounds.Top
            dw = PetSpell2PanelBounds.Right
            dH = PetSpell2PanelBounds.Bottom
            If dw > 0 And dH > 0 Then
                spellpic = spell(Pet(Player(MyIndex).Pet.Num).spell(2)).Icon
                If spellpic > 0 And spellpic <= NumSpellIcons Then
                    RenderTexture Tex_SpellIcon(spellpic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            End If
            dX = PetSpell2LabelBounds.Left
            dY = PetSpell2LabelBounds.Top
            dw = PetSpell2LabelBounds.Right
            dH = PetSpell2LabelBounds.Bottom
            If dw > 0 And dH > 0 Then
                RenderText Font_Georgia, WordWrap(Trim$(spell(Pet(Player(MyIndex).Pet.Num).spell(2)).Name), dw), dX, dY, FontColor, 0
            End If
        End If
        
        If Pet(Player(MyIndex).Pet.Num).spell(3) > 0 And Pet(Player(MyIndex).Pet.Num).spell(3) <= MAX_SPELLS Then
            dX = PetSpell3PanelBounds.Left
            dY = PetSpell3PanelBounds.Top
            dw = PetSpell3PanelBounds.Right
            dH = PetSpell3PanelBounds.Bottom
            If dw > 0 And dH > 0 Then
                spellpic = spell(Pet(Player(MyIndex).Pet.Num).spell(3)).Icon
                If spellpic > 0 And spellpic <= NumSpellIcons Then
                    RenderTexture Tex_SpellIcon(spellpic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            End If
            dX = PetSpell3LabelBounds.Left
            dY = PetSpell3LabelBounds.Top
            dw = PetSpell3LabelBounds.Right
            dH = PetSpell3LabelBounds.Bottom
            If dw > 0 And dH > 0 Then
                RenderText Font_Georgia, WordWrap(Trim$(spell(Pet(Player(MyIndex).Pet.Num).spell(3)).Name), dw), dX, dY, FontColor, 0
            End If
        End If
        If Pet(Player(MyIndex).Pet.Num).spell(4) > 0 And Pet(Player(MyIndex).Pet.Num).spell(4) <= MAX_SPELLS Then
            dX = PetSpell4PanelBounds.Left
            dY = PetSpell4PanelBounds.Top
            dw = PetSpell4PanelBounds.Right
            dH = PetSpell4PanelBounds.Bottom
            If dw > 0 And dH > 0 Then
                spellpic = spell(Pet(Player(MyIndex).Pet.Num).spell(4)).Icon
                If spellpic > 0 And spellpic <= NumSpellIcons Then
                    RenderTexture Tex_SpellIcon(spellpic), dX, dY, 0, 0, dw, dH, 32, 32
                End If
            End If
            dX = PetSpell4LabelBounds.Left
            dY = PetSpell4LabelBounds.Top
            dw = PetSpell4LabelBounds.Right
            dH = PetSpell4LabelBounds.Bottom
            If dw > 0 And dH > 0 Then
                RenderText Font_Georgia, WordWrap(Trim$(spell(Pet(Player(MyIndex).Pet.Num).spell(4)).Name), dw), dX, dY, FontColor, 0
            End If
        End If
        dX = PetReleaseLabelBounds.Left
        dY = PetReleaseLabelBounds.Top
        dw = PetReleaseLabelBounds.Right
        dH = PetReleaseLabelBounds.Bottom
        If dw > 0 And dH > 0 Then
            RenderText Font_Georgia, TrimText(Font_Georgia, "Release Pet.", dw), dX, dY, FontColor, 0
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawPetPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawInventory()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long

Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long
Dim Amount As Long
Dim rec As rect, rec_pos As rect, srcRect As D3DRECT, destRect As D3DRECT
Dim colour As Long
Dim tmpItem As Long, amountModifier As Long

    'InventoryPnl

   On Error GoTo errorhandler

    dX = InventoryPnlBounds.Left
    dY = InventoryPnlBounds.Top
    dw = InventoryPnlBounds.Right
    dH = InventoryPnlBounds.Bottom
    sx = InventoryPnlSrcBounds.Left
    sy = InventoryPnlSrcBounds.Top
    sW = InventoryPnlSrcBounds.Right
    sH = InventoryPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If InventoryPnlImage.Texture > 0 Then
            RenderTexture InventoryPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            For i = 1 To MAX_INV
            ItemNum = GetPlayerInvItemNum(MyIndex, i)
            If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
                itemPic = Item(ItemNum).pic
                            amountModifier = 0
                ' exit out if we're offering item in a trade.
                If InTrade > 0 Then
                    For X = 1 To MAX_INV
                        tmpItem = GetPlayerInvItemNum(MyIndex, TradeYourOffer(X).Num)
                        If TradeYourOffer(X).Num = i Then
                            ' check if currency
                            If Not Item(tmpItem).Stackable = 1 Then
                                ' normal item, exit out
                                GoTo NextLoop
                            Else
                                ' if amount = all currency, remove from inventory
                                If TradeYourOffer(X).Value = GetPlayerInvItemValue(MyIndex, i) Then
                                    GoTo NextLoop
                                Else
                                    ' not all, change modifier to show change in currency count
                                    amountModifier = TradeYourOffer(X).Value
                                End If
                            End If
                        End If
                    Next
                End If
                            If InMailbox Then
                    If MailBoxMenu = 3 Then
                        For X = 1 To MAX_INV
                            tmpItem = GetPlayerInvItemNum(MyIndex, MailItem)
                            If MailItem = i Then
                                ' check if currency
                                If Not Item(tmpItem).Stackable = 1 Then
                                    ' normal item, exit out
                                    GoTo NextLoop
                                Else
                                    ' if amount = all currency, remove from inventory
                                    If MailItemValue = GetPlayerInvItemValue(MyIndex, i) Then
                                        GoTo NextLoop
                                    Else
                                        ' not all, change modifier to show change in currency count
                                        amountModifier = MailItemValue
                                    End If
                                End If
                            End If
                        Next
                    End If
                End If
                            If itemPic > 0 And itemPic <= numitems Then
                    If Tex_Item(itemPic).Width <= 64 Then ' more than 1 frame is handled by anim sub
                        With rec
                            .Top = 0
                            .Bottom = 32
                            .Left = 0
                            .Right = 32
                        End With
                        With rec_pos
                            .Top = ((InvOffsetY + 32) * ((i - 1) \ InvColumns)) + InvItemsBounds.Top
                            .Bottom = .Top + PIC_Y
                            .Left = ((InvOffsetX + 32) * (((i - 1) Mod InvColumns))) + InvItemsBounds.Left + 6
                            .Right = .Left + PIC_X
                        End With
                                            'Trimming
                        If rec_pos.Right < InvItemsBounds.Left Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Left < InvItemsBounds.Left Then
                                tOffsetX = (InvItemsBounds.Left - rec_pos.Left)
                                rec.Left = rec.Left + tOffsetX
                                rec.Right = rec.Right - tOffsetX
                                rec_pos.Right = rec_pos.Right - tOffsetX
                            End If
                        End If
                                            If rec_pos.Bottom < InvItemsBounds.Top Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Top < InvItemsBounds.Top Then
                                tOffsetY = (InvItemsBounds.Top - rec_pos.Top)
                                rec.Top = rec.Top + tOffsetY
                                rec.Bottom = rec.Bottom - tOffsetY
                                rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                            End If
                        End If
                        If rec_pos.Left > InvItemsBounds.Left + InvItemsBounds.Right Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Right > InvItemsBounds.Left + InvItemsBounds.Right Then
                                rec_pos.Right = rec_pos.Right + (InvItemsBounds.Left + InvItemsBounds.Right - (rec_pos.Right))
                                rec.Right = rec_pos.Right
                            End If
                        End If
                                            If rec_pos.Top > InvItemsBounds.Top + InvItemsBounds.Bottom Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Bottom > InvItemsBounds.Top + InvItemsBounds.Bottom + 4 Then
                                rec_pos.Bottom = rec_pos.Bottom + (InvItemsBounds.Top + InvItemsBounds.Bottom - (rec_pos.Bottom))
                                rec.Bottom = rec_pos.Bottom
                            End If
                        End If
                        RenderTextureByRects Tex_Item(itemPic), rec, rec_pos
                        ' If item is a stack - draw the amount you have
                        If GetPlayerInvItemValue(MyIndex, i) > 1 Then
                            If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                                Y = rec_pos.Top + 22
                                X = rec_pos.Left - 4
                                                            Amount = GetPlayerInvItemValue(MyIndex, i) - amountModifier
                                                            ' Draw currency but with k, m, b etc. using a convertion function
                                If Amount < 1000000 Then
                                    colour = FontColor
                                ElseIf Amount > 1000000 And Amount < 10000000 Then
                                    colour = Yellow
                                ElseIf Amount > 10000000 Then
                                    colour = BrightGreen
                                End If
                                Select Case Item(GetPlayerInvItemNum(MyIndex, i)).Rarity
                                    Case 0 ' white
                                        
                                    Case 1 ' green
                                        colour = Yellow
                                    Case 2 ' blue
                                        colour = Green
                                    Case 3 ' maroon
                                        colour = Blue
                                    Case 4 ' purple
                                        colour = Red
                                    Case 5 ' orange
                                        colour = Purple
                                End Select
                                RenderText Font_Georgia, Format$(ConvertCurrency(str(Amount)), "#,###,###,###"), X, Y, colour, 0
                            End If
                        End If
                    End If
                End If
            End If
NextLoop:
        Next
            'update animated items
        DrawAnimatedInvItems
                    'CloseInvBtn
        dX = CloseInvBtnBounds.Left
        dY = CloseInvBtnBounds.Top
        dw = CloseInvBtnBounds.Right
        dH = CloseInvBtnBounds.Bottom
        sx = CloseInvBtnSrcBounds.Left
        sy = CloseInvBtnSrcBounds.Top
        sW = CloseInvBtnSrcBounds.Right
        sH = CloseInvBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseInvBtnState <> 2 Then
                        If CloseInvBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseInvBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseInvBtnClickImage.Texture > 0 Then
                            RenderTexture CloseInvBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseInvBtnState = 2 Then
                        If CloseInvBtnClickImage.Texture > 0 Then
                            RenderTexture CloseInvBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseInvBtnNormImage.Texture > 0 Then
                            RenderTexture CloseInvBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseInvBtnState = 2 Then
                    If CloseInvBtnClickImage.Texture > 0 Then
                        RenderTexture CloseInvBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseInvBtnNormImage.Texture > 0 Then
                        RenderTexture CloseInvBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawInventory", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawAnimatedInvItems()
Dim i As Long
Dim ItemNum As Long, itemPic As Long
Dim X As Long, Y As Long
Dim MaxFrames As Byte
Dim Amount As Long
Dim rec As rect, rec_pos As rect, tOffsetX As Long, tOffsetY As Long



   On Error GoTo errorhandler

    If Not InGame Then Exit Sub
    ' check for map animation changes#
    For i = 1 To MAX_MAP_ITEMS

        If MapItem(i).Num > 0 Then
            itemPic = Item(MapItem(i).Num).pic

            If itemPic < 1 Or itemPic > numitems Then Exit Sub
            MaxFrames = (Tex_Item(itemPic).Width / 32) ' Work out how many frames there are. /2 because of inventory icons as well as ingame

            If MapItem(i).Frame < MaxFrames - 1 Then
                MapItem(i).Frame = MapItem(i).Frame + 1
            Else
                MapItem(i).Frame = 1
            End If
        End If

    Next

    For i = 1 To MAX_INV
        ItemNum = GetPlayerInvItemNum(MyIndex, i)

        If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
            itemPic = Item(ItemNum).pic

            If itemPic > 0 And itemPic <= numitems Then
                If Tex_Item(itemPic).Width > 64 Then
                    MaxFrames = (Tex_Item(itemPic).Width / 32) ' Work out how many frames there are. /2 because of inventory icons as well as ingame

                    If InvItemFrame(i) < MaxFrames - 1 Then
                        InvItemFrame(i) = InvItemFrame(i) + 1
                    Else
                        InvItemFrame(i) = 1
                    End If

                    With rec
                        .Top = 0
                        .Bottom = 32
                        .Left = (InvItemFrame(i) * 32)  ' middle to get the start of inv gfx, then +32 for each frame
                        .Right = .Left + 32
                    End With

                    With rec_pos
                        .Top = InvItemsBounds.Top + ((InvOffsetY + 32) * ((i - 1) \ InvColumns))
                        .Bottom = .Top + PIC_Y
                        .Left = InvItemsBounds.Left + ((InvOffsetX + 32) * (((i - 1) Mod InvColumns))) + 6
                        .Right = .Left + PIC_X
                    End With
                                    'Trimming
                        If rec_pos.Right < InvItemsBounds.Left Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Left < InvItemsBounds.Left Then
                                tOffsetX = (InvItemsBounds.Left - rec_pos.Left)
                                rec.Left = rec.Left + tOffsetX
                                rec.Right = rec.Right - tOffsetX
                                rec_pos.Right = rec_pos.Right - tOffsetX
                            End If
                        End If
                                            If rec_pos.Bottom < InvItemsBounds.Top Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Top < InvItemsBounds.Top Then
                                tOffsetY = (InvItemsBounds.Top - rec_pos.Top)
                                rec.Top = rec.Top + tOffsetY
                                rec.Bottom = rec.Bottom - tOffsetY
                                rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                            End If
                        End If
                                            If rec_pos.Left > InvItemsBounds.Left + InvItemsBounds.Right Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Right > InvItemsBounds.Left + InvItemsBounds.Right Then
                                rec_pos.Right = rec_pos.Right + (InvItemsBounds.Left + InvItemsBounds.Right - (rec_pos.Right))
                                rec.Right = rec_pos.Right
                            End If
                        End If
                                            If rec_pos.Top > InvItemsBounds.Top + InvItemsBounds.Bottom Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Bottom > InvItemsBounds.Top + InvItemsBounds.Bottom Then
                                rec_pos.Bottom = rec_pos.Bottom + (InvItemsBounds.Top + InvItemsBounds.Bottom - (rec_pos.Bottom))
                                rec.Bottom = rec_pos.Bottom
                            End If
                        End If
                    'End Trimming

                    ' We'll now re-Draw the item, and place the currency value over it again :P
                    RenderTextureByRects Tex_Item(itemPic), rec, rec_pos

                    ' If item is a stack - draw the amount you have
                    If GetPlayerInvItemValue(MyIndex, i) > 1 Then
                        If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                            Y = rec_pos.Top + 22
                            X = rec_pos.Left - 4
                            Amount = CStr(GetPlayerInvItemValue(MyIndex, i))
                            ' Draw currency but with k, m, b etc. using a convertion function
                            RenderText Font_Georgia, ConvertCurrency(Amount), X, Y, Yellow, 0
                        End If
                    End If
                End If
            End If
        End If

    Next

    'frmMain.picInventory.Refresh




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawAnimatedInvItems", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawInventoryItemDesc()
Dim invslot As Long, isSB As Boolean

   On Error GoTo errorhandler

    If Not CurrentGameMenu = 1 Then Exit Sub
    If DragInvSlotNum > 0 Then Exit Sub
    invslot = IsInvItem(GlobalX, GlobalY)
    If invslot > 0 Then
        If GetPlayerInvItemNum(MyIndex, invslot) > 0 Then
            If Item(GetPlayerInvItemNum(MyIndex, invslot)).BindType > 0 Then isSB = True
            DrawItemDesc GetPlayerInvItemNum(MyIndex, invslot), InventoryPnlBounds.Left - ItemDescPnlWidth - 10, InventoryPnlBounds.Top, isSB
            ' value
            If InShop > 0 Then
                'DrawItemCost False, invSlot, GUIWindow(GUI_INVENTORY).x - GUIWindow(GUI_DESCRIPTION).Width - 10, GUIWindow(GUI_INVENTORY).y + GUIWindow(GUI_DESCRIPTION).Height + 10
            End If
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawInventoryItemDesc", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawGUIBars()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long

    'Guibarspanel

   On Error GoTo errorhandler

    dX = GUIBarsPanelBounds.Left
    dY = GUIBarsPanelBounds.Top
    dw = GUIBarsPanelBounds.Right
    dH = GUIBarsPanelBounds.Bottom
    sx = GUIBarsPanelSrcBounds.Left
    sy = GUIBarsPanelSrcBounds.Top
    sW = GUIBarsPanelSrcBounds.Right
    sH = GUIBarsPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If GUIBarsPanelImage.Texture > 0 Then
            RenderTexture GUIBarsPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'HealthBar
        dX = HealthBarBounds.Left
        dY = HealthBarBounds.Top
        dw = HealthBarBounds.Right
        dH = HealthBarBounds.Bottom
        sx = HealthBarSrcBounds.Left
        sy = HealthBarSrcBounds.Top
        sW = HealthBarSrcBounds.Right
        sH = HealthBarSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If HealthBarImage.Texture > 0 Then
                BarWidth_GuiHP_Max = ((GetPlayerVital(MyIndex, Vitals.HP) / dw) / (GetPlayerMaxVital(MyIndex, Vitals.HP) / dw)) * dw
                RenderTexture HealthBarImage, dX, dY, sx, sy, BarWidth_GuiHP, dH, BarWidth_GuiHP, sH, -1
                If EngineGetTextWidth(Font_Georgia, GetPlayerVital(MyIndex, Vitals.HP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.HP)) <= dw Then
                    If dH >= 14 Then
                        RenderText Font_Georgia, GetPlayerVital(MyIndex, Vitals.HP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.HP), dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, GetPlayerVital(MyIndex, Vitals.HP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.HP)) / 2)), dY + 1, FontColor
                    End If
                End If
            End If
        End If
            'ManaBar
        dX = ManaBarBounds.Left
        dY = ManaBarBounds.Top
        dw = ManaBarBounds.Right
        dH = ManaBarBounds.Bottom
        sx = ManaBarSrcBounds.Left
        sy = ManaBarSrcBounds.Top
        sW = ManaBarSrcBounds.Right
        sH = ManaBarSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If ManaBarImage.Texture > 0 Then
                BarWidth_GuiSP_Max = ((GetPlayerVital(MyIndex, Vitals.MP) / dw) / (GetPlayerMaxVital(MyIndex, Vitals.MP) / dw)) * dw
                RenderTexture ManaBarImage, dX, dY, sx, sy, BarWidth_GuiSP, dH, BarWidth_GuiSP, sH, -1
                If EngineGetTextWidth(Font_Georgia, GetPlayerVital(MyIndex, Vitals.MP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.MP)) <= dw Then
                    If dH >= 14 Then
                        RenderText Font_Georgia, GetPlayerVital(MyIndex, Vitals.MP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.MP), dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, GetPlayerVital(MyIndex, Vitals.MP) & "/" & GetPlayerMaxVital(MyIndex, Vitals.MP)) / 2)), dY + 1, FontColor
                    End If
                End If
            End If
        End If
            'ExpBar
        dX = ExpBarBounds.Left
        dY = ExpBarBounds.Top
        dw = ExpBarBounds.Right
        dH = ExpBarBounds.Bottom
        sx = ExpBarSrcBounds.Left
        sy = ExpBarSrcBounds.Top
        sW = ExpBarSrcBounds.Right
        sH = ExpBarSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If ExpBarImage.Texture > 0 Then
                If GetPlayerNextLevel(MyIndex) > 0 Then
                    BarWidth_GuiEXP_Max = ((GetPlayerExp(MyIndex) / dw) / (GetPlayerNextLevel(MyIndex) / dw)) * dw
                    RenderTexture ExpBarImage, dX, dY, sx, sy, BarWidth_GuiEXP, dH, BarWidth_GuiEXP, sH, -1
                    If EngineGetTextWidth(Font_Georgia, GetPlayerExp(MyIndex) & "/" & GetPlayerNextLevel(MyIndex)) <= dw Then
                        If dH >= 14 Then
                            RenderText Font_Georgia, GetPlayerExp(MyIndex) & "/" & GetPlayerNextLevel(MyIndex), dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, GetPlayerExp(MyIndex) & "/" & GetPlayerNextLevel(MyIndex)) / 2)), dY + 1, FontColor
                        End If
                    End If
                Else
                    BarWidth_GuiEXP_Max = dw
                    RenderTexture ExpBarImage, dX, dY, sx, sy, BarWidth_GuiEXP, dH, BarWidth_GuiEXP, sH, -1
                    If EngineGetTextWidth(Font_Georgia, "MAX LEVEL") <= dw Then
                        If dH >= 14 Then
                            RenderText Font_Georgia, "MAX LEVEL", dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, "MAX LEVEL")) / 2), dY + 1, FontColor
                        End If
                    End If
                End If
            End If
        End If
        End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawGUIBars", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub ResetGUIButtons()

   On Error GoTo errorhandler

    ChatDownBtnState = 0
    ChatUpBtnState = 0
    InventoryBtnState = 0
    SkillsBtnState = 0
    CharacterBtnState = 0
    OptionsBtnState = 0
    TradeBtnState = 0
    PartyBtnState = 0
    FriendsBtnState = 0
    QuestsBtnState = 0
    CloseInvBtnState = 0
    CloseSpellsBtnState = 0
    AddStrengthBtnState = 0
    AddEnduranceBtnState = 0
    AddIntelligenceBtnState = 0
    AddAgilityBtnState = 0
    AddWillpowerBtnState = 0
    CloseCharacterBtnState = 0
    MusicOnBtnState = 0
    MusicOffBtnState = 0
    SoundOnBtnState = 0
    SoundOffBtnState = 0
    FullScreenOnBtnState = 0
    FullScreenOffBtnState = 0
    CloseOptionsBtnState = 0
    PartyInviteBtnState = 0
    PartyLeaveBtnState = 0
    ClosePartyBtnState = 0
    FriendsUpBtnState = 0
    FriendsDownBtnState = 0
    AddFriendBtnState = 0
    DelFriendBtnState = 0
    CloseFriendsBtnState = 0
    QuestUpBtnState = 0
    QuestDownBtnState = 0
    QuestInfoBtnState = 0
    CloseQuestsBtnState = 0
    CloseBankBtnState = 0
    DeclineTradeBtnState = 0
    AcceptTradeBtnState = 0
    CheckMailBtnState = 0
    SendMailBtnState = 0
    CloseMailboxBtnState = 0
    ScrlInboxUpBtnState = 0
    ScrlInboxDownBtnState = 0
    CloseInboxBtnState = 0
    TrashLetterBtnState = 0
    ReplyLetterBtnState = 0
    StopReadingBtnState = 0
    CloseQuestLogBtnState = 0
    CurrencyOkBtnState = 0
    CurrencyCancelBtnState = 0
    DragInvSlotNum = 0
    DragBankSlotNum = 0
    DragSpell = 0
    DragMailboxItem = 0
    PetsBtnState = 0
    PetAddStrBtnState = 0
    PetAddEndBtnState = 0
    PetAddIntBtnState = 0
    PetAddAgiBtnState = 0
    PetAddWillBtnState = 0


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "ResetGUIButtons", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub ScrollChatBox(ByVal direction As Byte)
    ' do a quick exit if we don't have enough text to scroll

   On Error GoTo errorhandler

    If totalChatLines < ChatLines Then
        ChatScroll = ChatLines
        UpdateChatArray
        Exit Sub
    End If
    ' actually scroll
    If direction = 0 Then ' up
        ChatScroll = ChatScroll + 1
    Else ' down
        ChatScroll = ChatScroll - 1
    End If
    ' scrolling down
    If ChatScroll < ChatLines Then ChatScroll = ChatLines
    ' scrolling up
    If ChatScroll > totalChatLines Then ChatScroll = totalChatLines
    ' update the array
    UpdateChatArray


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "ScrollChatBox", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub SetBarWidth(ByRef MaxWidth As Long, ByRef Width As Long)
Dim barDifference As Long

   On Error GoTo errorhandler

    If MaxWidth < Width Then
        ' find out the amount to increase per loop
        barDifference = ((Width - MaxWidth) / 100) * 10
        ' if it's less than 1 then default to 1
        If barDifference < 1 Then barDifference = 1
        ' set the width
        Width = Width - barDifference
    ElseIf MaxWidth > Width Then
        ' find out the amount to increase per loop
        barDifference = ((MaxWidth - Width) / 100) * 10
        ' if it's less than 1 then default to 1
        If barDifference < 1 Then barDifference = 1
        ' set the width
        Width = Width + barDifference
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "SetBarWidth", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawItemDesc(ByVal ItemNum As Long, ByVal X As Long, ByVal Y As Long, Optional ByVal soulBound As Boolean = False)
Dim colour As Long, descString As String, theName As String, className As String, levelTxt As String, sInfo() As String, i As Long, Width As Long, Height As Long
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    ' get out

   On Error GoTo errorhandler

    If ItemNum = 0 Then Exit Sub
    'itemdesc
    dX = ItemDescPnlBounds.Left
    dY = ItemDescPnlBounds.Top
    dw = ItemDescPnlBounds.Right
    dH = ItemDescPnlBounds.Bottom
    sx = ItemDescPnlSrcBounds.Left
    sy = ItemDescPnlSrcBounds.Top
    sW = ItemDescPnlSrcBounds.Right
    sH = ItemDescPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If ItemDescPnlImage.Texture > 0 Then
            RenderTexture ItemDescPnlImage, dX, dY, sx, sy, dw, dH, sW, sH
        End If
            dX = ItemDescIconBounds.Left
        dY = ItemDescIconBounds.Top
        dw = ItemDescIconBounds.Right
        dH = ItemDescIconBounds.Bottom
        If dw > 0 And dH > 0 Then
            If Item(ItemNum).pic > 0 And Item(ItemNum).pic <= numitems Then
                RenderTexture Tex_Item(Item(ItemNum).pic), dX, dY, 0, 0, dw, dH, 32, 32
            End If
        End If
                dX = ItemDescNameLblBounds.Left
        dY = ItemDescNameLblBounds.Top
        dw = ItemDescNameLblBounds.Right
        dH = ItemDescNameLblBounds.Bottom
        If dw > 0 And dH > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(Item(ItemNum).Name), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(Item(ItemNum).Name), dw), dX, dY, ItemNameColor
        End If
            dX = ItemClassReqLblBounds.Left
        dY = ItemClassReqLblBounds.Top
        dw = ItemClassReqLblBounds.Right
        dH = ItemClassReqLblBounds.Bottom
        If dw > 0 And dH > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, ItemClassReq, dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemClassReq), dw), dX, dY, FontColor
        End If
            dX = ItemLevelReqLblBounds.Left
        dY = ItemLevelReqLblBounds.Top
        dw = ItemLevelReqLblBounds.Right
        dH = ItemLevelReqLblBounds.Bottom
        If dw > 0 And dH > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemLevelReq), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemLevelReq), dw), dX, dY, FontColor
        End If
                dX = ItemDesc1Bounds.Left
        dY = ItemDesc1Bounds.Top
        dw = ItemDesc1Bounds.Right
        dH = ItemDesc1Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(1))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(1)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(1)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc2Bounds.Left
        dY = ItemDesc2Bounds.Top
        dw = ItemDesc2Bounds.Right
        dH = ItemDesc2Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(2))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(2)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(2)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc3Bounds.Left
        dY = ItemDesc3Bounds.Top
        dw = ItemDesc3Bounds.Right
        dH = ItemDesc3Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(3))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(3)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(3)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc4Bounds.Left
        dY = ItemDesc4Bounds.Top
        dw = ItemDesc4Bounds.Right
        dH = ItemDesc4Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(4))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(4)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(4)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc5Bounds.Left
        dY = ItemDesc5Bounds.Top
        dw = ItemDesc5Bounds.Right
        dH = ItemDesc5Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(5))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(5)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(5)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc6Bounds.Left
        dY = ItemDesc6Bounds.Top
        dw = ItemDesc6Bounds.Right
        dH = ItemDesc6Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(6))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(6)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(6)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc7Bounds.Left
        dY = ItemDesc7Bounds.Top
        dw = ItemDesc7Bounds.Right
        dH = ItemDesc7Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(7))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(7)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(7)), dw), dX, dY, FontColor
            End If
        End If
            dX = ItemDesc8Bounds.Left
        dY = ItemDesc8Bounds.Top
        dw = ItemDesc8Bounds.Right
        dH = ItemDesc8Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(ItemDescLbls(8))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(8)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(ItemDescLbls(8)), dw), dX, dY, FontColor
            End If
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawItemDesc", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawDragItem()
    Dim PicNum As Integer, ItemNum As Long

   On Error GoTo errorhandler

    If DragInvSlotNum = 0 Then Exit Sub
    If IsReallyShop = False Then
        ItemNum = GetPlayerInvItemNum(MyIndex, DragInvSlotNum)
    Else
        ItemNum = Shop(InShop).TradeItem(DragInvSlotNum).Item
    End If
    If Not ItemNum > 0 Then Exit Sub
    If Item(ItemNum).type = ITEM_TYPE_FURNITURE Then Exit Sub
    PicNum = Item(ItemNum).pic

    If PicNum < 1 Or PicNum > numitems Then Exit Sub
    If DragBoxImage.Texture > 0 Then
        RenderTexture DragBoxImage, GlobalX - 18, GlobalY - 18, 0, 0, 36, 36, 36, 36
    End If
    RenderTexture Tex_Item(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDragItem", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub
Public Sub DrawDragTrade()
    Dim PicNum As Integer, TradeNum As Long

   On Error GoTo errorhandler

    If DragTradeSlotNum = 0 Then Exit Sub
    TradeNum = GetPlayerInvItemNum(MyIndex, TradeYourOffer(DragTradeSlotNum).Num)
    If Not TradeNum > 0 Then Exit Sub
    PicNum = Item(TradeNum).pic

    If PicNum < 1 Or PicNum > numitems Then Exit Sub
    If DragBoxImage.Texture > 0 Then
        RenderTexture DragBoxImage, GlobalX - 18, GlobalY - 18, 0, 0, 36, 36, 36, 36
    End If
    RenderTexture Tex_Item(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDragTrade", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawDragMailboxItem()
    Dim PicNum As Integer, ItemNum As Long

   On Error GoTo errorhandler

    If DragMailboxItem = 0 Then Exit Sub
    If MailBoxMenu = 2 Then
        ItemNum = Mail(SelectedMail).ItemNum
    ElseIf MailBoxMenu = 3 Then
        ItemNum = GetPlayerInvItemNum(MyIndex, MailItem)
    End If
    If Not ItemNum > 0 Then Exit Sub
    PicNum = Item(ItemNum).pic

    If PicNum < 1 Or PicNum > numitems Then Exit Sub
    If DragBoxImage.Texture > 0 Then
        RenderTexture DragBoxImage, GlobalX - 18, GlobalY - 18, 0, 0, 36, 36, 36, 36
    End If
    RenderTexture Tex_Item(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDragMailboxItem", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawDragBank()
    Dim PicNum As Integer, ItemNum As Long

   On Error GoTo errorhandler

    If DragBankSlotNum = 0 Then Exit Sub
    ItemNum = GetBankItemNum(DragBankSlotNum)
    If Not ItemNum > 0 Then Exit Sub
    PicNum = Item(ItemNum).pic

    If PicNum < 1 Or PicNum > numitems Then Exit Sub
    If DragBoxImage.Texture > 0 Then
        RenderTexture DragBoxImage, GlobalX - 18, GlobalY - 18, 0, 0, 36, 36, 36, 36
    End If
    RenderTexture Tex_Item(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDragBank", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawDragSpell()
    Dim PicNum As Integer

   On Error GoTo errorhandler

    If DragSpell = 0 Then Exit Sub

    If Not DragSpell > 0 Then Exit Sub
    PicNum = spell(PlayerSpells(DragSpell)).Icon

    If PicNum < 1 Or PicNum > NumSpellIcons Then Exit Sub

    'EngineRenderRectangle Tex_Item(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32, 32, 32
    If DragBoxImage.Texture > 0 Then
        RenderTexture DragBoxImage, GlobalX - 18, GlobalY - 18, 0, 0, 36, 36, 36, 36
    End If
    RenderTexture Tex_SpellIcon(PicNum), GlobalX - 16, GlobalY - 16, 0, 0, 32, 32, 32, 32


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDragSpell", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawSpellsPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim Spellnum As Long, spellicon As Long, rec As rect, rec_pos As rect, i As Long, tOffsetX As Long, tOffsetY As Long
    'SpellsPnl

   On Error GoTo errorhandler

    dX = SpellsPnlBounds.Left
    dY = SpellsPnlBounds.Top
    dw = SpellsPnlBounds.Right
    dH = SpellsPnlBounds.Bottom
    sx = SpellsPnlSrcBounds.Left
    sy = SpellsPnlSrcBounds.Top
    sW = SpellsPnlSrcBounds.Right
    sH = SpellsPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If SpellsPnlImage.Texture > 0 Then
            RenderTexture SpellsPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            For i = 1 To MAX_PLAYER_SPELLS
            Spellnum = PlayerSpells(i)
            If Spellnum > 0 And Spellnum <= MAX_SPELLS Then
                spellicon = spell(Spellnum).Icon
                If spellicon > 0 And spellicon <= NumSpellIcons Then
                                With rec
                        .Top = 0
                        .Bottom = 32
                        .Left = 0
                        .Right = 32
                    End With
                                    If Not SpellCD(i) = 0 Then
                        rec.Left = 32
                        rec.Right = 64
                    End If
                    With rec_pos
                        .Top = SpellIconsBounds.Top + ((SpellOffsetY + 32) * ((i - 1) \ SpellColumns))
                        .Bottom = .Top + PIC_Y
                        .Left = SpellIconsBounds.Left + ((SpellOffsetX + 32) * (((i - 1) Mod SpellColumns)))
                        .Right = .Left + PIC_X
                    End With
                                    'Trimming
                        If rec_pos.Right < SpellIconsBounds.Left Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Left < SpellIconsBounds.Left Then
                                tOffsetX = (SpellIconsBounds.Left - rec_pos.Left)
                                rec.Left = rec.Left + tOffsetX
                                rec.Right = rec.Right - tOffsetX
                                rec_pos.Right = rec_pos.Right - tOffsetX
                            End If
                        End If
                                            If rec_pos.Bottom < SpellIconsBounds.Top Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Top < SpellIconsBounds.Top Then
                                tOffsetY = (SpellIconsBounds.Top - rec_pos.Top)
                                rec.Top = rec.Top + tOffsetY
                                rec.Bottom = rec.Bottom - tOffsetY
                                rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                            End If
                        End If
                                            If rec_pos.Left > SpellIconsBounds.Left + SpellIconsBounds.Right Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Right > SpellIconsBounds.Left + SpellIconsBounds.Right Then
                                rec_pos.Right = rec_pos.Right + (SpellIconsBounds.Left + SpellIconsBounds.Right - (rec_pos.Right))
                                rec.Right = rec_pos.Right
                            End If
                        End If
                                            If rec_pos.Top > SpellIconsBounds.Top + SpellIconsBounds.Bottom Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Bottom > SpellIconsBounds.Top + SpellIconsBounds.Bottom Then
                                rec_pos.Bottom = rec_pos.Bottom + (SpellIconsBounds.Top + SpellIconsBounds.Bottom - (rec_pos.Bottom))
                                rec.Bottom = rec_pos.Bottom
                            End If
                        End If
                    RenderTextureByRects Tex_SpellIcon(spellicon), rec, rec_pos
                End If
            End If
        Next
            'CloseSpellsBtn
        dX = CloseSpellsBtnBounds.Left
        dY = CloseSpellsBtnBounds.Top
        dw = CloseSpellsBtnBounds.Right
        dH = CloseSpellsBtnBounds.Bottom
        sx = CloseSpellsBtnSrcBounds.Left
        sy = CloseSpellsBtnSrcBounds.Top
        sW = CloseSpellsBtnSrcBounds.Right
        sH = CloseSpellsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseSpellsBtnState <> 2 Then
                        If CloseSpellsBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseSpellsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseSpellsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseSpellsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseSpellsBtnState = 2 Then
                        If CloseSpellsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseSpellsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseSpellsBtnNormImage.Texture > 0 Then
                            RenderTexture CloseSpellsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseSpellsBtnState = 2 Then
                    If CloseSpellsBtnClickImage.Texture > 0 Then
                        RenderTexture CloseSpellsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseSpellsBtnNormImage.Texture > 0 Then
                        RenderTexture CloseSpellsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawSpellsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawSpellDesc(ByVal Spellnum As Long, ByVal X As Long, ByVal Y As Long)
Dim colour As Long, descString As String, theName As String, className As String, levelTxt As String, sInfo() As String, i As Long, Width As Long, Height As Long
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
    ' get out

   On Error GoTo errorhandler

    If Spellnum = 0 Then Exit Sub
    'Spelldesc
    dX = SpellDescPnlBounds.Left
    dY = SpellDescPnlBounds.Top
    dw = SpellDescPnlBounds.Right
    dH = SpellDescPnlBounds.Bottom
    sx = SpellDescPnlSrcBounds.Left
    sy = SpellDescPnlSrcBounds.Top
    sW = SpellDescPnlSrcBounds.Right
    sH = SpellDescPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If SpellDescPnlImage.Texture > 0 Then
            RenderTexture SpellDescPnlImage, dX, dY, sx, sy, dw, dH, sW, sH
        End If
            dX = SpellDescIconBounds.Left
        dY = SpellDescIconBounds.Top
        dw = SpellDescIconBounds.Right
        dH = SpellDescIconBounds.Bottom
        If dw > 0 And dH > 0 Then
            If spell(Spellnum).Icon > 0 Then
                RenderTexture Tex_SpellIcon(spell(Spellnum).Icon), dX, dY, 0, 0, dw, dH, 32, 32
            End If
        End If
                dX = SpellDescNameLblBounds.Left
        dY = SpellDescNameLblBounds.Top
        dw = SpellDescNameLblBounds.Right
        dH = SpellDescNameLblBounds.Bottom
        If dw > 0 And dH > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(spell(Spellnum).Name), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(spell(Spellnum).Name), dw), dX, dY, FontColor
        End If
            dX = SpellDesc1Bounds.Left
        dY = SpellDesc1Bounds.Top
        dw = SpellDesc1Bounds.Right
        dH = SpellDesc1Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(1))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(1)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(1)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc2Bounds.Left
        dY = SpellDesc2Bounds.Top
        dw = SpellDesc2Bounds.Right
        dH = SpellDesc2Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(2))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(2)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(2)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc3Bounds.Left
        dY = SpellDesc3Bounds.Top
        dw = SpellDesc3Bounds.Right
        dH = SpellDesc3Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(3))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(3)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(3)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc4Bounds.Left
        dY = SpellDesc4Bounds.Top
        dw = SpellDesc4Bounds.Right
        dH = SpellDesc4Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(4))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(4)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(4)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc5Bounds.Left
        dY = SpellDesc5Bounds.Top
        dw = SpellDesc5Bounds.Right
        dH = SpellDesc5Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(5))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(5)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(5)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc6Bounds.Left
        dY = SpellDesc6Bounds.Top
        dw = SpellDesc6Bounds.Right
        dH = SpellDesc6Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(6))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(6)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(6)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc7Bounds.Left
        dY = SpellDesc7Bounds.Top
        dw = SpellDesc7Bounds.Right
        dH = SpellDesc7Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(7))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(7)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(7)), dw), dX, dY, FontColor
            End If
        End If
            dX = SpellDesc8Bounds.Left
        dY = SpellDesc8Bounds.Top
        dw = SpellDesc8Bounds.Right
        dH = SpellDesc8Bounds.Bottom
        If dw > 0 And dH > 0 Then
            If Len(Trim$(SpellDescLbls(8))) > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(8)), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(SpellDescLbls(8)), dw), dX, dY, FontColor
            End If
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawSpellDesc", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawOptionsPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
    'OptionsPnl

   On Error GoTo errorhandler

    dX = OptionsPnlBounds.Left
    dY = OptionsPnlBounds.Top
    dw = OptionsPnlBounds.Right
    dH = OptionsPnlBounds.Bottom
    sx = OptionsPnlSrcBounds.Left
    sy = OptionsPnlSrcBounds.Top
    sW = OptionsPnlSrcBounds.Right
    sH = OptionsPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If OptionsPnlImage.Texture > 0 Then
            RenderTexture OptionsPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'MusicOnBtn
        dX = MusicOnBtnBounds.Left
        dY = MusicOnBtnBounds.Top
        dw = MusicOnBtnBounds.Right
        dH = MusicOnBtnBounds.Bottom
        sx = MusicOnBtnSrcBounds.Left
        sy = MusicOnBtnSrcBounds.Top
        sW = MusicOnBtnSrcBounds.Right
        sH = MusicOnBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If MusicOnBtnState <> 2 Then
                    If MusicOnBtnHoverImage.Texture > 0 Then
                        RenderTexture MusicOnBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If MusicOnBtnClickImage.Texture > 0 Then
                        RenderTexture MusicOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If MusicOnBtnState = 2 Then
                    If MusicOnBtnClickImage.Texture > 0 Then
                        RenderTexture MusicOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.Music = 1 Then
                        If MusicOnBtnClickImage.Texture > 0 Then
                            RenderTexture MusicOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If MusicOnBtnNormImage.Texture > 0 Then
                            RenderTexture MusicOnBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'MusicOffBtn
        dX = MusicOffBtnBounds.Left
        dY = MusicOffBtnBounds.Top
        dw = MusicOffBtnBounds.Right
        dH = MusicOffBtnBounds.Bottom
        sx = MusicOffBtnSrcBounds.Left
        sy = MusicOffBtnSrcBounds.Top
        sW = MusicOffBtnSrcBounds.Right
        sH = MusicOffBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If MusicOffBtnState <> 2 Then
                    If MusicOffBtnHoverImage.Texture > 0 Then
                        RenderTexture MusicOffBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If MusicOffBtnClickImage.Texture > 0 Then
                        RenderTexture MusicOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If MusicOffBtnState = 2 Then
                    If MusicOffBtnClickImage.Texture > 0 Then
                        RenderTexture MusicOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.Music = 0 Then
                        If MusicOffBtnClickImage.Texture > 0 Then
                            RenderTexture MusicOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If MusicOffBtnNormImage.Texture > 0 Then
                            RenderTexture MusicOffBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'SoundOnBtn
        dX = SoundOnBtnBounds.Left
        dY = SoundOnBtnBounds.Top
        dw = SoundOnBtnBounds.Right
        dH = SoundOnBtnBounds.Bottom
        sx = SoundOnBtnSrcBounds.Left
        sy = SoundOnBtnSrcBounds.Top
        sW = SoundOnBtnSrcBounds.Right
        sH = SoundOnBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If SoundOnBtnState <> 2 Then
                    If SoundOnBtnHoverImage.Texture > 0 Then
                        RenderTexture SoundOnBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If SoundOnBtnClickImage.Texture > 0 Then
                        RenderTexture SoundOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If SoundOnBtnState = 2 Then
                    If SoundOnBtnClickImage.Texture > 0 Then
                        RenderTexture SoundOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.sound = 1 Then
                        If SoundOnBtnClickImage.Texture > 0 Then
                            RenderTexture SoundOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If SoundOnBtnNormImage.Texture > 0 Then
                            RenderTexture SoundOnBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'SoundOffBtn
        dX = SoundOffBtnBounds.Left
        dY = SoundOffBtnBounds.Top
        dw = SoundOffBtnBounds.Right
        dH = SoundOffBtnBounds.Bottom
        sx = SoundOffBtnSrcBounds.Left
        sy = SoundOffBtnSrcBounds.Top
        sW = SoundOffBtnSrcBounds.Right
        sH = SoundOffBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If SoundOffBtnState <> 2 Then
                    If SoundOffBtnHoverImage.Texture > 0 Then
                        RenderTexture SoundOffBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If SoundOffBtnClickImage.Texture > 0 Then
                        RenderTexture SoundOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If SoundOffBtnState = 2 Then
                    If SoundOffBtnClickImage.Texture > 0 Then
                        RenderTexture SoundOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.sound = 0 Then
                        If SoundOffBtnClickImage.Texture > 0 Then
                            RenderTexture SoundOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If SoundOffBtnNormImage.Texture > 0 Then
                            RenderTexture SoundOffBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'FullScreenOnBtn
        dX = FullScreenOnBtnBounds.Left
        dY = FullScreenOnBtnBounds.Top
        dw = FullScreenOnBtnBounds.Right
        dH = FullScreenOnBtnBounds.Bottom
        sx = FullscreenOnBtnSrcBounds.Left
        sy = FullscreenOnBtnSrcBounds.Top
        sW = FullscreenOnBtnSrcBounds.Right
        sH = FullscreenOnBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If FullScreenOnBtnState <> 2 Then
                    If FullScreenOnBtnHoverImage.Texture > 0 Then
                        RenderTexture FullScreenOnBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If FullScreenOnBtnClickImage.Texture > 0 Then
                        RenderTexture FullScreenOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If FullScreenOnBtnState = 2 Then
                    If FullScreenOnBtnClickImage.Texture > 0 Then
                        RenderTexture FullScreenOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.FullScreen = 1 Then
                        If FullScreenOnBtnClickImage.Texture > 0 Then
                            RenderTexture FullScreenOnBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FullScreenOnBtnNormImage.Texture > 0 Then
                            RenderTexture FullScreenOnBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'FullScreenOffBtn
        dX = FullScreenOffBtnBounds.Left
        dY = FullScreenOffBtnBounds.Top
        dw = FullScreenOffBtnBounds.Right
        dH = FullScreenOffBtnBounds.Bottom
        sx = FullscreenOffBtnSrcBounds.Left
        sy = FullscreenOffBtnSrcBounds.Top
        sW = FullscreenOffBtnSrcBounds.Right
        sH = FullscreenOffBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                'Draw hoverImage
                If FullScreenOffBtnState <> 2 Then
                    If FullScreenOffBtnHoverImage.Texture > 0 Then
                        RenderTexture FullScreenOffBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If FullScreenOffBtnClickImage.Texture > 0 Then
                        RenderTexture FullScreenOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            Else
                If FullScreenOffBtnState = 2 Then
                    If FullScreenOffBtnClickImage.Texture > 0 Then
                        RenderTexture FullScreenOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If Options.FullScreen = 0 Then
                        If FullScreenOffBtnClickImage.Texture > 0 Then
                            RenderTexture FullScreenOffBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FullScreenOffBtnNormImage.Texture > 0 Then
                            RenderTexture FullScreenOffBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
            'CloseOptionsBtn
        dX = CloseOptionsBtnBounds.Left
        dY = CloseOptionsBtnBounds.Top
        dw = CloseOptionsBtnBounds.Right
        dH = CloseOptionsBtnBounds.Bottom
        sx = CloseOptionsBtnSrcBounds.Left
        sy = CloseOptionsBtnSrcBounds.Top
        sW = CloseOptionsBtnSrcBounds.Right
        sH = CloseOptionsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseOptionsBtnState <> 2 Then
                        If CloseOptionsBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseOptionsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseOptionsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseOptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseOptionsBtnState = 2 Then
                        If CloseOptionsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseOptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseOptionsBtnNormImage.Texture > 0 Then
                            RenderTexture CloseOptionsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseOptionsBtnState = 2 Then
                    If CloseOptionsBtnClickImage.Texture > 0 Then
                        RenderTexture CloseOptionsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseOptionsBtnNormImage.Texture > 0 Then
                        RenderTexture CloseOptionsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawOptionsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawPartyPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long, curName As String, curBarWidth As Long, curIndex As Long, i As Long, X As Long
    'PartyPnl

   On Error GoTo errorhandler

    dX = PartyPnlBounds.Left
    dY = PartyPnlBounds.Top
    dw = PartyPnlBounds.Right
    dH = PartyPnlBounds.Bottom
    sx = PartyPnlSrcBounds.Left
    sy = PartyPnlSrcBounds.Top
    sW = PartyPnlSrcBounds.Right
    sH = PartyPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If PartyPnlImage.Texture > 0 Then
            RenderTexture PartyPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'Names Then Bars...
        If inParty > 0 Then
            For curIndex = 1 To 4
                If Party.Leader = Party.Member(curIndex) Then
                    If Party.Member(curIndex) > 0 Then
                        curName = Trim$(Player(Party.Member(curIndex)).Name)
                        'PartyLeaderName
                        dX = PartyLeaderNameBounds.Left
                        dY = PartyLeaderNameBounds.Top
                        dw = PartyLeaderNameBounds.Right
                        dH = PartyLeaderNameBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw))) / 2)
                            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw), dX, dY, FontColor
                        End If
                                            'PartyLeaderHPBar
                        dX = PartyLeaderHPBarBounds.Left
                        dY = PartyLeaderHPBarBounds.Top
                        dw = PartyLeaderHPBarBounds.Right
                        dH = PartyLeaderHPBarBounds.Bottom
                        sx = PartyLeaderHPBarSrcBounds.Left
                        sy = PartyLeaderHPBarSrcBounds.Top
                        sW = PartyLeaderHPBarSrcBounds.Right
                        sH = PartyLeaderHPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyLeaderHPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.HP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.HP) / dw)) * dw
                                RenderTexture PartyLeaderHPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                                            'PartyLeaderMPBar
                        dX = PartyLeaderMPBarBounds.Left
                        dY = PartyLeaderMPBarBounds.Top
                        dw = PartyLeaderMPBarBounds.Right
                        dH = PartyLeaderMPBarBounds.Bottom
                        sx = PartyLeaderMPBarSrcBounds.Left
                        sy = PartyLeaderMPBarSrcBounds.Top
                        sW = PartyLeaderMPBarSrcBounds.Right
                        sH = PartyLeaderMPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyLeaderMPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.MP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.MP) / dw)) * dw
                                RenderTexture PartyLeaderMPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                    End If
                ElseIf X = 0 Then
                    If Party.Member(curIndex) > 0 Then
                        curName = Trim$(Player(Party.Member(curIndex)).Name)
                        'PartyMember1Name
                        dX = PartyMember1NameBounds.Left
                        dY = PartyMember1NameBounds.Top
                        dw = PartyMember1NameBounds.Right
                        dH = PartyMember1NameBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw))) / 2)
                            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw), dX, dY, FontColor
                        End If
                                            'PartyMember1HPBar
                        dX = PartyMember1HPBarBounds.Left
                        dY = PartyMember1HPBarBounds.Top
                        dw = PartyMember1HPBarBounds.Right
                        dH = PartyMember1HPBarBounds.Bottom
                        sx = PartyMember1HPBarSrcBounds.Left
                        sy = PartyMember1HPBarSrcBounds.Top
                        sW = PartyMember1HPBarSrcBounds.Right
                        sH = PartyMember1HPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember1HPBarImage.Texture > 0 Then
                                If GetPlayerMaxVital(Party.Member(curIndex), Vitals.HP) > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.HP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.HP) / dw)) * dw
                                RenderTexture PartyMember1HPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                                End If
                            End If
                        End If
                                            'PartyMember1MPBar
                        dX = PartyMember1MPBarBounds.Left
                        dY = PartyMember1MPBarBounds.Top
                        dw = PartyMember1MPBarBounds.Right
                        dH = PartyMember1MPBarBounds.Bottom
                        sx = PartyMember1MPBarSrcBounds.Left
                        sy = PartyMember1MPBarSrcBounds.Top
                        sW = PartyMember1MPBarSrcBounds.Right
                        sH = PartyMember1MPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember1MPBarImage.Texture > 0 Then
                                If GetPlayerMaxVital(Party.Member(curIndex), Vitals.MP) > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.MP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.MP) / dw)) * dw
                                RenderTexture PartyMember1MPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                                End If
                            End If
                        End If
                        X = 1
                    End If
                ElseIf X = 1 Then
                    If Party.Member(curIndex) > 0 Then
                        curName = Trim$(Player(Party.Member(curIndex)).Name)
                        'PartyMember2Name
                        dX = PartyMember2NameBounds.Left
                        dY = PartyMember2NameBounds.Top
                        dw = PartyMember2NameBounds.Right
                        dH = PartyMember2NameBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw))) / 2)
                            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw), dX, dY, FontColor
                        End If
                                            'PartyMember2HPBar
                        dX = PartyMember2HPBarBounds.Left
                        dY = PartyMember2HPBarBounds.Top
                        dw = PartyMember2HPBarBounds.Right
                        dH = PartyMember2HPBarBounds.Bottom
                        sx = PartyMember2HPBarSrcBounds.Left
                        sy = PartyMember2HPBarSrcBounds.Top
                        sW = PartyMember2HPBarSrcBounds.Right
                        sH = PartyMember2HPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember2HPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.HP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.HP) / dw)) * dw
                                RenderTexture PartyMember2HPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                                            'PartyMember2MPBar
                        dX = PartyMember2MPBarBounds.Left
                        dY = PartyMember2MPBarBounds.Top
                        dw = PartyMember2MPBarBounds.Right
                        dH = PartyMember2MPBarBounds.Bottom
                        sx = PartyMember2MPBarSrcBounds.Left
                        sy = PartyMember2MPBarSrcBounds.Top
                        sW = PartyMember2MPBarSrcBounds.Right
                        sH = PartyMember2MPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember2MPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.MP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.MP) / dw)) * dw
                                RenderTexture PartyMember2MPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                        X = 2
                    End If
                ElseIf X = 2 Then
                    If Party.Member(curIndex) > 0 Then
                        curName = Trim$(Player(Party.Member(curIndex)).Name)
                        'PartyMember3Name
                        dX = PartyMember3NameBounds.Left
                        dY = PartyMember3NameBounds.Top
                        dw = PartyMember3NameBounds.Right
                        dH = PartyMember3NameBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw))) / 2)
                            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(curName), dw), dX, dY, FontColor
                        End If
                                            'PartyMember3HPBar
                        dX = PartyMember3HPBarBounds.Left
                        dY = PartyMember3HPBarBounds.Top
                        dw = PartyMember3HPBarBounds.Right
                        dH = PartyMember3HPBarBounds.Bottom
                        sx = PartyMember3HPBarSrcBounds.Left
                        sy = PartyMember3HPBarSrcBounds.Top
                        sW = PartyMember3HPBarSrcBounds.Right
                        sH = PartyMember3HPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember3HPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.HP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.HP) / dw)) * dw
                                RenderTexture PartyMember3HPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                                            'PartyMember3MPBar
                        dX = PartyMember3MPBarBounds.Left
                        dY = PartyMember3MPBarBounds.Top
                        dw = PartyMember3MPBarBounds.Right
                        dH = PartyMember3MPBarBounds.Bottom
                        sx = PartyMember3MPBarSrcBounds.Left
                        sy = PartyMember3MPBarSrcBounds.Top
                        sW = PartyMember3MPBarSrcBounds.Right
                        sH = PartyMember3MPBarSrcBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            If PartyMember3MPBarImage.Texture > 0 Then
                                curBarWidth = ((GetPlayerVital(Party.Member(curIndex), Vitals.MP) / dw) / (GetPlayerMaxVital(Party.Member(curIndex), Vitals.MP) / dw)) * dw
                                RenderTexture PartyMember3MPBarImage, dX, dY, sx, sy, curBarWidth, dH, curBarWidth, sH, -1
                            End If
                        End If
                    End If
                End If
            Next
        End If
            'PartyInviteBtn
        dX = PartyInviteBtnBounds.Left
        dY = PartyInviteBtnBounds.Top
        dw = PartyInviteBtnBounds.Right
        dH = PartyInviteBtnBounds.Bottom
        sx = PartyInviteBtnSrcBounds.Left
        sy = PartyInviteBtnSrcBounds.Top
        sW = PartyInviteBtnSrcBounds.Right
        sH = PartyInviteBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PartyInviteBtnState <> 2 Then
                        If PartyInviteBtnHoverImage.Texture > 0 Then
                            RenderTexture PartyInviteBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyInviteBtnClickImage.Texture > 0 Then
                            RenderTexture PartyInviteBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PartyInviteBtnState = 2 Then
                        If PartyInviteBtnClickImage.Texture > 0 Then
                            RenderTexture PartyInviteBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyInviteBtnNormImage.Texture > 0 Then
                            RenderTexture PartyInviteBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PartyInviteBtnState = 2 Then
                    If PartyInviteBtnClickImage.Texture > 0 Then
                        RenderTexture PartyInviteBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PartyInviteBtnNormImage.Texture > 0 Then
                        RenderTexture PartyInviteBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'PartyLeaveBtn
        dX = PartyLeaveBtnBounds.Left
        dY = PartyLeaveBtnBounds.Top
        dw = PartyLeaveBtnBounds.Right
        dH = PartyLeaveBtnBounds.Bottom
        sx = PartyLeaveBtnSrcBounds.Left
        sy = PartyLeaveBtnSrcBounds.Top
        sW = PartyLeaveBtnSrcBounds.Right
        sH = PartyLeaveBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If PartyLeaveBtnState <> 2 Then
                        If PartyLeaveBtnHoverImage.Texture > 0 Then
                            RenderTexture PartyLeaveBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyLeaveBtnClickImage.Texture > 0 Then
                            RenderTexture PartyLeaveBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If PartyLeaveBtnState = 2 Then
                        If PartyLeaveBtnClickImage.Texture > 0 Then
                            RenderTexture PartyLeaveBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If PartyLeaveBtnNormImage.Texture > 0 Then
                            RenderTexture PartyLeaveBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If PartyLeaveBtnState = 2 Then
                    If PartyLeaveBtnClickImage.Texture > 0 Then
                        RenderTexture PartyLeaveBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If PartyLeaveBtnNormImage.Texture > 0 Then
                        RenderTexture PartyLeaveBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'ClosePartyBtn
        dX = ClosePartyBtnBounds.Left
        dY = ClosePartyBtnBounds.Top
        dw = ClosePartyBtnBounds.Right
        dH = ClosePartyBtnBounds.Bottom
        sx = ClosePartyBtnSrcBounds.Left
        sy = ClosePartyBtnSrcBounds.Top
        sW = ClosePartyBtnSrcBounds.Right
        sH = ClosePartyBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If ClosePartyBtnState <> 2 Then
                        If ClosePartyBtnHoverImage.Texture > 0 Then
                            RenderTexture ClosePartyBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ClosePartyBtnClickImage.Texture > 0 Then
                            RenderTexture ClosePartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If ClosePartyBtnState = 2 Then
                        If ClosePartyBtnClickImage.Texture > 0 Then
                            RenderTexture ClosePartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If ClosePartyBtnNormImage.Texture > 0 Then
                            RenderTexture ClosePartyBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If ClosePartyBtnState = 2 Then
                    If ClosePartyBtnClickImage.Texture > 0 Then
                        RenderTexture ClosePartyBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If ClosePartyBtnNormImage.Texture > 0 Then
                        RenderTexture ClosePartyBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawPartyPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawFriendsPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long, curName As String, curBarWidth As Long, curIndex As Long, i As Long, X As Long, lineCount As Long
Dim startX As Long, maxScroll As Long
    'FriendsPnl

   On Error GoTo errorhandler

    dX = FriendsPnlBounds.Left
    dY = FriendsPnlBounds.Top
    dw = FriendsPnlBounds.Right
    dH = FriendsPnlBounds.Bottom
    sx = FriendsPnlSrcBounds.Left
    sy = FriendsPnlSrcBounds.Top
    sW = FriendsPnlSrcBounds.Right
    sH = FriendsPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If FriendsPnlImage.Texture > 0 Then
            RenderTexture FriendsPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'FriendsList
        dX = FriendsListBounds.Left
        dY = FriendsListBounds.Top
        dw = FriendsListBounds.Right
        dH = FriendsListBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 >= 1 Then
                lineCount = Fix(dH / 14)
                maxScroll = Int((FriendCount / lineCount))
                If FriendListScroll > maxScroll Then FriendListScroll = 1
                For i = (lineCount * FriendListScroll) + 1 To (lineCount * FriendListScroll) + lineCount
                    X = i - (lineCount * FriendListScroll) - 1
                    If i > FriendCount Then
                        Exit For
                    End If
                    If FriendSelection = i Then
                        RenderText Font_Georgia, TrimText(Font_Georgia, FriendsList(i), dw - 8), dX + 4, dY + 2 + (X * 14), Yellow
                    Else
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY + 2 + (X * 14) And GlobalY <= dY + 2 + ((X + 1) * 14) Then
                            RenderText Font_Georgia, TrimText(Font_Georgia, FriendsList(i), dw - 8), dX + 4, dY + 2 + (X * 14), White
                        Else
                            If FriendOnline(i) = 1 Then
                                RenderText Font_Georgia, TrimText(Font_Georgia, FriendsList(i), dw - 8), dX + 4, dY + 2 + (X * 14), FontColor
                            Else
                                RenderText Font_Georgia, TrimText(Font_Georgia, FriendsList(i), dw - 8), dX + 4, dY + 2 + (X * 14), Red
                            End If
                        End If
                    End If
                Next
            End If
        End If
            'FriendsUpBtn
        dX = FriendsUpBtnBounds.Left
        dY = FriendsUpBtnBounds.Top
        dw = FriendsUpBtnBounds.Right
        dH = FriendsUpBtnBounds.Bottom
        sx = FriendsUpBtnSrcBounds.Left
        sy = FriendsUpBtnSrcBounds.Top
        sW = FriendsUpBtnSrcBounds.Right
        sH = FriendsUpBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If FriendsUpBtnState <> 2 Then
                        If FriendsUpBtnHoverImage.Texture > 0 Then
                            RenderTexture FriendsUpBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsUpBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If FriendsUpBtnState = 2 Then
                        If FriendsUpBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsUpBtnNormImage.Texture > 0 Then
                            RenderTexture FriendsUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If FriendsUpBtnState = 2 Then
                    If FriendsUpBtnClickImage.Texture > 0 Then
                        RenderTexture FriendsUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If FriendsUpBtnNormImage.Texture > 0 Then
                        RenderTexture FriendsUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'FriendsDownBtn
        dX = FriendsDownBtnBounds.Left
        dY = FriendsDownBtnBounds.Top
        dw = FriendsDownBtnBounds.Right
        dH = FriendsDownBtnBounds.Bottom
        sx = FriendsDownBtnSrcBounds.Left
        sy = FriendsDownBtnSrcBounds.Top
        sW = FriendsDownBtnSrcBounds.Right
        sH = FriendsDownBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If FriendsDownBtnState <> 2 Then
                        If FriendsDownBtnHoverImage.Texture > 0 Then
                            RenderTexture FriendsDownBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsDownBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If FriendsDownBtnState = 2 Then
                        If FriendsDownBtnClickImage.Texture > 0 Then
                            RenderTexture FriendsDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If FriendsDownBtnNormImage.Texture > 0 Then
                            RenderTexture FriendsDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If FriendsDownBtnState = 2 Then
                    If FriendsDownBtnClickImage.Texture > 0 Then
                        RenderTexture FriendsDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If FriendsDownBtnNormImage.Texture > 0 Then
                        RenderTexture FriendsDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'AddFriendBtn
        dX = AddFriendBtnBounds.Left
        dY = AddFriendBtnBounds.Top
        dw = AddFriendBtnBounds.Right
        dH = AddFriendBtnBounds.Bottom
        sx = AddFriendBtnSrcBounds.Left
        sy = AddFriendBtnSrcBounds.Top
        sW = AddFriendBtnSrcBounds.Right
        sH = AddFriendBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If AddFriendBtnState <> 2 Then
                        If AddFriendBtnHoverImage.Texture > 0 Then
                            RenderTexture AddFriendBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddFriendBtnClickImage.Texture > 0 Then
                            RenderTexture AddFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If AddFriendBtnState = 2 Then
                        If AddFriendBtnClickImage.Texture > 0 Then
                            RenderTexture AddFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AddFriendBtnNormImage.Texture > 0 Then
                            RenderTexture AddFriendBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If AddFriendBtnState = 2 Then
                    If AddFriendBtnClickImage.Texture > 0 Then
                        RenderTexture AddFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If AddFriendBtnNormImage.Texture > 0 Then
                        RenderTexture AddFriendBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'DelFriendBtn
        dX = DelFriendBtnBounds.Left
        dY = DelFriendBtnBounds.Top
        dw = DelFriendBtnBounds.Right
        dH = DelFriendBtnBounds.Bottom
        sx = DelFriendBtnSrcBounds.Left
        sy = DelFriendBtnSrcBounds.Top
        sW = DelFriendBtnSrcBounds.Right
        sH = DelFriendBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If DelFriendBtnState <> 2 Then
                        If DelFriendBtnHoverImage.Texture > 0 Then
                            RenderTexture DelFriendBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DelFriendBtnClickImage.Texture > 0 Then
                            RenderTexture DelFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If DelFriendBtnState = 2 Then
                        If DelFriendBtnClickImage.Texture > 0 Then
                            RenderTexture DelFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DelFriendBtnNormImage.Texture > 0 Then
                            RenderTexture DelFriendBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If DelFriendBtnState = 2 Then
                    If DelFriendBtnClickImage.Texture > 0 Then
                        RenderTexture DelFriendBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If DelFriendBtnNormImage.Texture > 0 Then
                        RenderTexture DelFriendBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'CloseFriendsBtn
        dX = CloseFriendsBtnBounds.Left
        dY = CloseFriendsBtnBounds.Top
        dw = CloseFriendsBtnBounds.Right
        dH = CloseFriendsBtnBounds.Bottom
        sx = CloseFriendsBtnSrcBounds.Left
        sy = CloseFriendsBtnSrcBounds.Top
        sW = CloseFriendsBtnSrcBounds.Right
        sH = CloseFriendsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseFriendsBtnState <> 2 Then
                        If CloseFriendsBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseFriendsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseFriendsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseFriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseFriendsBtnState = 2 Then
                        If CloseFriendsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseFriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseFriendsBtnNormImage.Texture > 0 Then
                            RenderTexture CloseFriendsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseFriendsBtnState = 2 Then
                    If CloseFriendsBtnClickImage.Texture > 0 Then
                        RenderTexture CloseFriendsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseFriendsBtnNormImage.Texture > 0 Then
                        RenderTexture CloseFriendsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawFriendsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub DrawQuestsPanel()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long, curName As String, curBarWidth As Long, curIndex As Long, i As Long, X As Long, lineCount As Long
Dim startX As Long, maxScroll As Long, temptext As String
    'QuestsPnl

   On Error GoTo errorhandler

    dX = QuestsPnlBounds.Left
    dY = QuestsPnlBounds.Top
    dw = QuestsPnlBounds.Right
    dH = QuestsPnlBounds.Bottom
    sx = QuestsPnlSrcBounds.Left
    sy = QuestsPnlSrcBounds.Top
    sW = QuestsPnlSrcBounds.Right
    sH = QuestsPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If QuestsPnlImage.Texture > 0 Then
            RenderTexture QuestsPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'QuestList
        dX = QuestListBounds.Left
        dY = QuestListBounds.Top
        dw = QuestListBounds.Right
        dH = QuestListBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 >= 1 Then
                lineCount = Fix(dH / 14)
                maxScroll = Int((QuestCount / lineCount))
                If QuestListScroll > maxScroll Then QuestListScroll = 1
                For i = (lineCount * QuestListScroll) + 1 To (lineCount * QuestListScroll) + lineCount
                    X = i - (lineCount * QuestListScroll) - 1
                    If i > QuestCount Then
                        Exit For
                    End If
                    temptext = TrimText(Font_Georgia, QuestList(i), dw - 8)
                    If temptext <> QuestList(i) Then
                        temptext = Left(temptext, Len(temptext) - 1)
                        temptext = temptext & "..."
                    End If
                    If QuestSelection = i Then
                        RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), Yellow
                    Else
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY + 2 + (X * 14) And GlobalY <= dY + 2 + ((X + 1) * 14) Then
                            RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), Yellow
                        Else
                            If QuestInProgress(QuestIndex(i)) Then
                                RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), FontColor
                            ElseIf QuestCompleted(QuestIndex(i)) Then
                                RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), BrightGreen
                            Else
                                RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), BrightRed
                            End If
                        End If
                    End If
                Next
            End If
        End If
            'QuestUpBtn
        dX = QuestUpBtnBounds.Left
        dY = QuestUpBtnBounds.Top
        dw = QuestUpBtnBounds.Right
        dH = QuestUpBtnBounds.Bottom
        sx = QuestUpBtnSrcBounds.Left
        sy = QuestUpBtnSrcBounds.Top
        sW = QuestUpBtnSrcBounds.Right
        sH = QuestUpBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If QuestUpBtnState <> 2 Then
                        If QuestUpBtnHoverImage.Texture > 0 Then
                            RenderTexture QuestUpBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestUpBtnClickImage.Texture > 0 Then
                            RenderTexture QuestUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If QuestUpBtnState = 2 Then
                        If QuestUpBtnClickImage.Texture > 0 Then
                            RenderTexture QuestUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestUpBtnNormImage.Texture > 0 Then
                            RenderTexture QuestUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If QuestUpBtnState = 2 Then
                    If QuestUpBtnClickImage.Texture > 0 Then
                        RenderTexture QuestUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If QuestUpBtnNormImage.Texture > 0 Then
                        RenderTexture QuestUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'QuestDownBtn
        dX = QuestDownBtnBounds.Left
        dY = QuestDownBtnBounds.Top
        dw = QuestDownBtnBounds.Right
        dH = QuestDownBtnBounds.Bottom
        sx = QuestDownBtnSrcBounds.Left
        sy = QuestDownBtnSrcBounds.Top
        sW = QuestDownBtnSrcBounds.Right
        sH = QuestDownBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If QuestDownBtnState <> 2 Then
                        If QuestDownBtnHoverImage.Texture > 0 Then
                            RenderTexture QuestDownBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestDownBtnClickImage.Texture > 0 Then
                            RenderTexture QuestDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If QuestDownBtnState = 2 Then
                        If QuestDownBtnClickImage.Texture > 0 Then
                            RenderTexture QuestDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestDownBtnNormImage.Texture > 0 Then
                            RenderTexture QuestDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If QuestDownBtnState = 2 Then
                    If QuestDownBtnClickImage.Texture > 0 Then
                        RenderTexture QuestDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If QuestDownBtnNormImage.Texture > 0 Then
                        RenderTexture QuestDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'QuestInfoBtn
        dX = QuestInfoBtnBounds.Left
        dY = QuestInfoBtnBounds.Top
        dw = QuestInfoBtnBounds.Right
        dH = QuestInfoBtnBounds.Bottom
        sx = QuestInfoBtnSrcBounds.Left
        sy = QuestInfoBtnSrcBounds.Top
        sW = QuestInfoBtnSrcBounds.Right
        sH = QuestInfoBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If QuestInfoBtnState <> 2 Then
                        If QuestInfoBtnHoverImage.Texture > 0 Then
                            RenderTexture QuestInfoBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestInfoBtnClickImage.Texture > 0 Then
                            RenderTexture QuestInfoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If QuestInfoBtnState = 2 Then
                        If QuestInfoBtnClickImage.Texture > 0 Then
                            RenderTexture QuestInfoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If QuestInfoBtnNormImage.Texture > 0 Then
                            RenderTexture QuestInfoBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If QuestInfoBtnState = 2 Then
                    If QuestInfoBtnClickImage.Texture > 0 Then
                        RenderTexture QuestInfoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If QuestInfoBtnNormImage.Texture > 0 Then
                        RenderTexture QuestInfoBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'CloseQuestsBtn
        dX = CloseQuestsBtnBounds.Left
        dY = CloseQuestsBtnBounds.Top
        dw = CloseQuestsBtnBounds.Right
        dH = CloseQuestsBtnBounds.Bottom
        sx = CloseQuestsBtnSrcBounds.Left
        sy = CloseQuestsBtnSrcBounds.Top
        sW = CloseQuestsBtnSrcBounds.Right
        sH = CloseQuestsBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseQuestsBtnState <> 2 Then
                        If CloseQuestsBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseQuestsBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseQuestsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseQuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseQuestsBtnState = 2 Then
                        If CloseQuestsBtnClickImage.Texture > 0 Then
                            RenderTexture CloseQuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseQuestsBtnNormImage.Texture > 0 Then
                            RenderTexture CloseQuestsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseQuestsBtnState = 2 Then
                    If CloseQuestsBtnClickImage.Texture > 0 Then
                        RenderTexture CloseQuestsBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseQuestsBtnNormImage.Texture > 0 Then
                        RenderTexture CloseQuestsBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawQuestsPanel", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub DrawBank()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, rec_pos As rect, rec As rect
Dim Amount As String
Dim sRect As rect, dRect As rect
Dim Sprite As Long, colour As Long

    'BankPnl

   On Error GoTo errorhandler

    dX = BankPnlBounds.Left
    dY = BankPnlBounds.Top
    dw = BankPnlBounds.Right
    dH = BankPnlBounds.Bottom
    sx = BankPnlSrcBounds.Left
    sy = BankPnlSrcBounds.Top
    sW = BankPnlSrcBounds.Right
    sH = BankPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If BankPnlImage.Texture > 0 Then
            RenderTexture BankPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
                    For i = 1 To MAX_BANK
            ItemNum = GetBankItemNum(i)
            If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
                            Sprite = Item(ItemNum).pic
                                If Sprite <= 0 Or Sprite > numitems Then Exit Sub
                            With rec
                    .Top = 0
                    .Bottom = 32
                    .Left = 0
                    .Right = 32
                End With
                With rec_pos
                    .Top = ((BankOffsetY + 32) * ((i - 1) \ BankColumns)) + BankItemsBounds.Top
                    .Bottom = .Top + PIC_Y
                    .Left = ((BankOffsetX + 32) * (((i - 1) Mod BankColumns))) + BankItemsBounds.Left + 4
                    .Right = .Left + PIC_X
                End With
                            With rec_pos
                    .Top = BankItemsBounds.Top + ((BankOffsetY + 32) * ((i - 1) \ BankColumns))
                    .Bottom = .Top + PIC_Y
                    .Left = BankItemsBounds.Left + ((BankOffsetX + 32) * (((i - 1) Mod BankColumns)))
                    .Right = .Left + PIC_X
                End With
                                    'Trimming
                If rec_pos.Right < BankItemsBounds.Left Then
                    rec_pos.Right = 0
                Else
                    If rec_pos.Left < BankItemsBounds.Left Then
                        tOffsetX = (BankItemsBounds.Left - rec_pos.Left)
                        rec.Left = rec.Left + tOffsetX
                        rec.Right = rec.Right - tOffsetX
                        rec_pos.Right = rec_pos.Right - tOffsetX
                    End If
                End If
                                    If rec_pos.Bottom < BankItemsBounds.Top Then
                    rec_pos.Bottom = 0
                Else
                    If rec_pos.Top < BankItemsBounds.Top Then
                        tOffsetY = (BankItemsBounds.Top - rec_pos.Top)
                        rec.Top = rec.Top + tOffsetY
                        rec.Bottom = rec.Bottom - tOffsetY
                        rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                    End If
                End If
                                    If rec_pos.Left > BankItemsBounds.Left + BankItemsBounds.Right Then
                    rec_pos.Right = 0
                Else
                    If rec_pos.Right > BankItemsBounds.Left + BankItemsBounds.Right Then
                        rec_pos.Right = rec_pos.Right + (BankItemsBounds.Left + BankItemsBounds.Right - (rec_pos.Right))
                        rec.Right = rec_pos.Right - rec_pos.Left
                    End If
                End If
                                    If rec_pos.Top > BankItemsBounds.Top + BankItemsBounds.Bottom Then
                    rec_pos.Bottom = 0
                Else
                    If rec_pos.Bottom > BankItemsBounds.Top + BankItemsBounds.Bottom Then
                        rec_pos.Bottom = rec_pos.Bottom + (BankItemsBounds.Top + BankItemsBounds.Bottom - (rec_pos.Bottom))
                        rec.Bottom = rec_pos.Bottom - rec_pos.Top
                    End If
                End If
                RenderTextureByRects Tex_Item(Sprite), rec, rec_pos

                ' If item is a stack - draw the amount you have
                If GetBankItemValue(i) > 1 Then
                    If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                        Y = rec_pos.Top + 22
                        X = rec_pos.Left - 2
                                            Amount = CStr(GetBankItemValue(i))
                            ' Draw currency but with k, m, b etc. using a convertion function
                        If CLng(Amount) < 1000000 Then
                            colour = White
                        ElseIf CLng(Amount) > 1000000 And CLng(Amount) < 10000000 Then
                            colour = Yellow
                        ElseIf CLng(Amount) > 10000000 Then
                            colour = BrightGreen
                        End If
                        RenderText Font_Georgia, ConvertCurrency(Amount), X, Y, colour
                    End If
                End If
            End If
        Next
            'CloseBankBtn
        dX = CloseBankBtnBounds.Left
        dY = CloseBankBtnBounds.Top
        dw = CloseBankBtnBounds.Right
        dH = CloseBankBtnBounds.Bottom
        sx = CloseBankBtnSrcBounds.Left
        sy = CloseBankBtnSrcBounds.Top
        sW = CloseBankBtnSrcBounds.Right
        sH = CloseBankBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseBankBtnState <> 2 Then
                        If CloseBankBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseBankBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseBankBtnClickImage.Texture > 0 Then
                            RenderTexture CloseBankBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseBankBtnState = 2 Then
                        If CloseBankBtnClickImage.Texture > 0 Then
                            RenderTexture CloseBankBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseBankBtnNormImage.Texture > 0 Then
                            RenderTexture CloseBankBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseBankBtnState = 2 Then
                    If CloseBankBtnClickImage.Texture > 0 Then
                        RenderTexture CloseBankBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseBankBtnNormImage.Texture > 0 Then
                        RenderTexture CloseBankBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawBank", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawShop()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT
Dim Amount As String
Dim rec As rect, rec_pos As rect
Dim colour As Long

    'ShopPnl

   On Error GoTo errorhandler

    dX = ShopPnlBounds.Left
    dY = ShopPnlBounds.Top
    dw = ShopPnlBounds.Right
    dH = ShopPnlBounds.Bottom
    sx = ShopPnlSrcBounds.Left
    sy = ShopPnlSrcBounds.Top
    sW = ShopPnlSrcBounds.Right
    sH = ShopPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If ShopPnlImage.Texture > 0 Then
            RenderTexture ShopPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If

        For i = 1 To MAX_TRADES
            ItemNum = Shop(InShop).TradeItem(i).Item
            If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
                itemPic = Item(ItemNum).pic
                If itemPic > 0 And itemPic <= numitems Then
                                With rec
                        .Top = 0
                        .Bottom = 32
                        .Left = 0
                        .Right = 32
                    End With
                                    With rec_pos
                        .Top = ShopItemsBounds.Top + ((ShopOffsetY + 32) * ((i - 1) \ ShopColumns))
                        .Bottom = .Top + PIC_Y
                        .Left = ShopItemsBounds.Left + ShopLeft + ((ShopOffsetX + 32) * (((i - 1) Mod ShopColumns)))
                        .Right = .Left + PIC_X
                    End With
                                    'Trimming
                    If rec_pos.Right < ShopItemsBounds.Left Then
                        rec_pos.Right = 0
                    Else
                        If rec_pos.Left < ShopItemsBounds.Left Then
                            tOffsetX = (ShopItemsBounds.Left - rec_pos.Left)
                            rec.Left = rec.Left + tOffsetX
                            rec.Right = rec.Right - tOffsetX
                            rec_pos.Right = rec_pos.Right - tOffsetX
                        End If
                    End If
                                            If rec_pos.Bottom < ShopItemsBounds.Top Then
                        rec_pos.Bottom = 0
                    Else
                        If rec_pos.Top < ShopItemsBounds.Top Then
                            tOffsetY = (ShopItemsBounds.Top - rec_pos.Top)
                            rec.Top = rec.Top + tOffsetY
                            rec.Bottom = rec.Bottom - tOffsetY
                            rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                        End If
                    End If
                                            If rec_pos.Left > ShopItemsBounds.Left + ShopItemsBounds.Right Then
                        rec_pos.Right = 0
                    Else
                        If rec_pos.Right > ShopItemsBounds.Left + ShopItemsBounds.Right Then
                            rec_pos.Right = rec_pos.Right + (ShopItemsBounds.Left + ShopItemsBounds.Right - (rec_pos.Right))
                            rec.Right = rec_pos.Right - rec_pos.Left
                        End If
                    End If
                                            If rec_pos.Top > ShopItemsBounds.Top + ShopItemsBounds.Bottom Then
                        rec_pos.Bottom = 0
                    Else
                        If rec_pos.Bottom > ShopItemsBounds.Top + ShopItemsBounds.Bottom Then
                            rec_pos.Bottom = rec_pos.Bottom + (ShopItemsBounds.Top + ShopItemsBounds.Bottom - (rec_pos.Bottom))
                            rec.Bottom = rec_pos.Bottom - rec_pos.Top
                        End If
                    End If
                                    RenderTextureByRects Tex_Item(itemPic), rec, rec_pos
                                    ' If item is a stack - draw the amount you have
                    If Shop(InShop).TradeItem(i).ItemValue > 1 Then
                        If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                            Y = rec_pos.Top + 22
                            X = rec_pos.Left - 4
                            Amount = CStr(Shop(InShop).TradeItem(i).ItemValue)
                                                    ' Draw currency but with k, m, b etc. using a convertion function
                            If CLng(Amount) < 1000000 Then
                                colour = White
                            ElseIf CLng(Amount) > 1000000 And CLng(Amount) < 10000000 Then
                                colour = Yellow
                            ElseIf CLng(Amount) > 10000000 Then
                                colour = Green
                            End If
                            RenderText Font_Georgia, ConvertCurrency(Amount), X, Y, colour, 0
                        End If
                    End If
                End If
            End If
        Next
                    'CloseShopBtn
        dX = CloseShopBtnBounds.Left
        dY = CloseShopBtnBounds.Top
        dw = CloseShopBtnBounds.Right
        dH = CloseShopBtnBounds.Bottom
        sx = CloseShopBtnSrcBounds.Left
        sy = CloseShopBtnSrcBounds.Top
        sW = CloseShopBtnSrcBounds.Right
        sH = CloseShopBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CloseShopBtnState <> 2 Then
                        If CloseShopBtnHoverImage.Texture > 0 Then
                            RenderTexture CloseShopBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseShopBtnClickImage.Texture > 0 Then
                            RenderTexture CloseShopBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CloseShopBtnState = 2 Then
                        If CloseShopBtnClickImage.Texture > 0 Then
                            RenderTexture CloseShopBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CloseShopBtnNormImage.Texture > 0 Then
                            RenderTexture CloseShopBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CloseShopBtnState = 2 Then
                    If CloseShopBtnClickImage.Texture > 0 Then
                        RenderTexture CloseShopBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CloseShopBtnNormImage.Texture > 0 Then
                        RenderTexture CloseShopBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If





   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawShop", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Sub DrawTrade()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT
Dim Amount As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long


    'TradePnl

   On Error GoTo errorhandler

    dX = TradePnlBounds.Left
    dY = TradePnlBounds.Top
    dw = TradePnlBounds.Right
    dH = TradePnlBounds.Bottom
    sx = TradePnlSrcBounds.Left
    sy = TradePnlSrcBounds.Top
    sW = TradePnlSrcBounds.Right
    sH = TradePnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If TradePnlImage.Texture > 0 Then
            RenderTexture TradePnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
        'Player Side
        For i = 1 To MAX_INV
            ' Draw your own offer
            If DragTradeSlotNum <> i Then
                ItemNum = GetPlayerInvItemNum(MyIndex, TradeYourOffer(i).Num)
                    If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
                    itemPic = Item(ItemNum).pic
                        If itemPic > 0 And itemPic <= numitems Then
                        With rec
                            .Top = 0
                            .Bottom = 32
                            .Left = 0
                            .Right = 32
                        End With
                            With rec_pos
                            .Top = YourTradePnlBounds.Top - 2 + ((InvOffsetY + 32) * ((i - 1) \ InvColumns))
                            .Bottom = .Top + PIC_Y
                            .Left = YourTradePnlBounds.Left + 4 + ((InvOffsetX + 32) * (((i - 1) Mod InvColumns)))
                            .Right = .Left + PIC_X
                        End With
                                            'Must do trimming
                        'Trimming
                        If rec_pos.Right < YourTradePnlBounds.Left Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Left < YourTradePnlBounds.Left Then
                                tOffsetX = (YourTradePnlBounds.Left - rec_pos.Left)
                                rec.Left = rec.Left + tOffsetX
                                rec.Right = rec.Right - tOffsetX
                                rec_pos.Right = rec_pos.Right - tOffsetX
                            End If
                        End If
                                                    If rec_pos.Bottom < YourTradePnlBounds.Top Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Top < YourTradePnlBounds.Top Then
                                tOffsetY = (YourTradePnlBounds.Top - rec_pos.Top)
                                rec.Top = rec.Top + tOffsetY
                                rec.Bottom = rec.Bottom - tOffsetY
                                rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                            End If
                        End If
                                                    If rec_pos.Left > YourTradePnlBounds.Left + YourTradePnlBounds.Right Then
                            rec_pos.Right = 0
                        Else
                            If rec_pos.Right > YourTradePnlBounds.Left + YourTradePnlBounds.Right Then
                                rec_pos.Right = rec_pos.Right + (YourTradePnlBounds.Left + YourTradePnlBounds.Right - (rec_pos.Right))
                                rec.Right = rec_pos.Right - rec_pos.Left
                            End If
                        End If
                                                    If rec_pos.Top > YourTradePnlBounds.Top + YourTradePnlBounds.Bottom Then
                            rec_pos.Bottom = 0
                        Else
                            If rec_pos.Bottom > YourTradePnlBounds.Top + YourTradePnlBounds.Bottom Then
                                rec_pos.Bottom = rec_pos.Bottom + (YourTradePnlBounds.Top + YourTradePnlBounds.Bottom - (rec_pos.Bottom))
                                rec.Bottom = rec_pos.Bottom - rec_pos.Top
                            End If
                        End If
                            RenderTextureByRects Tex_Item(itemPic), rec, rec_pos
                            ' If item is a stack - draw the amount you have
                        If TradeYourOffer(i).Value > 1 Then
                            If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                                Y = rec_pos.Top + 22
                                X = rec_pos.Left - 4
                                                            Amount = TradeYourOffer(i).Value
                                                            ' Draw currency but with k, m, b etc. using a convertion function
                                If Amount < 1000000 Then
                                    colour = White
                                ElseIf Amount > 1000000 And Amount < 10000000 Then
                                    colour = Yellow
                                ElseIf Amount > 10000000 Then
                                    colour = BrightGreen
                                End If
                                RenderText Font_Georgia, ConvertCurrency(str(Amount)), X, Y, colour, 0
                            End If
                        End If
                    End If
                End If
            End If
        Next
                'Their Side
        For i = 1 To MAX_INV
            ' Draw their offer
            ItemNum = TradeTheirOffer(i).Num
            If ItemNum > 0 And ItemNum <= MAX_ITEMS Then
                itemPic = Item(ItemNum).pic
                If itemPic > 0 And itemPic <= numitems Then
                    With rec
                        .Top = 0
                        .Bottom = 32
                        .Left = 0
                        .Right = 32
                    End With
                    With rec_pos
                        .Top = TheirTradePnlBounds.Top - 2 + ((InvOffsetY + 32) * ((i - 1) \ InvColumns))
                        .Bottom = .Top + PIC_Y
                        .Left = TheirTradePnlBounds.Left + 4 + ((InvOffsetX + 32) * (((i - 1) Mod InvColumns)))
                        .Right = .Left + PIC_X
                    End With
                                    'Must do trimming
                    'Trimming
                    If rec_pos.Right < TheirTradePnlBounds.Left Then
                        rec_pos.Right = 0
                    Else
                        If rec_pos.Left < TheirTradePnlBounds.Left Then
                            tOffsetX = (TheirTradePnlBounds.Left - rec_pos.Left)
                            rec.Left = rec.Left + tOffsetX
                            rec.Right = rec.Right - tOffsetX
                            rec_pos.Right = rec_pos.Right - tOffsetX
                        End If
                    End If
                                            If rec_pos.Bottom < TheirTradePnlBounds.Top Then
                        rec_pos.Bottom = 0
                    Else
                        If rec_pos.Top < TheirTradePnlBounds.Top Then
                            tOffsetY = (TheirTradePnlBounds.Top - rec_pos.Top)
                            rec.Top = rec.Top + tOffsetY
                            rec.Bottom = rec.Bottom - tOffsetY
                            rec_pos.Bottom = rec_pos.Bottom - tOffsetY
                        End If
                    End If
                                            If rec_pos.Left > TheirTradePnlBounds.Left + TheirTradePnlBounds.Right Then
                        rec_pos.Right = 0
                    Else
                        If rec_pos.Right > TheirTradePnlBounds.Left + TheirTradePnlBounds.Right Then
                            rec_pos.Right = rec_pos.Right + (TheirTradePnlBounds.Left + TheirTradePnlBounds.Right - (rec_pos.Right))
                            rec.Right = rec_pos.Right - rec_pos.Left
                        End If
                    End If
                                            If rec_pos.Top > TheirTradePnlBounds.Top + TheirTradePnlBounds.Bottom Then
                        rec_pos.Bottom = 0
                    Else
                        If rec_pos.Bottom > TheirTradePnlBounds.Top + TheirTradePnlBounds.Bottom Then
                            rec_pos.Bottom = rec_pos.Bottom + (TheirTradePnlBounds.Top + TheirTradePnlBounds.Bottom - (rec_pos.Bottom))
                            rec.Bottom = rec_pos.Bottom - rec_pos.Top
                        End If
                    End If
                                    RenderTextureByRects Tex_Item(itemPic), rec, rec_pos
                    ' If item is a stack - draw the amount you have
                    If TradeTheirOffer(i).Value > 1 Then
                        If rec_pos.Right > 0 And rec_pos.Bottom > 0 Then
                            Y = rec_pos.Top + 22
                            X = rec_pos.Left - 4
                                                    Amount = TradeTheirOffer(i).Value
                            ' Draw currency but with k, m, b etc. using a convertion function
                            If Amount < 1000000 Then
                                colour = White
                            ElseIf Amount > 1000000 And Amount < 10000000 Then
                                colour = Yellow
                            ElseIf Amount > 10000000 Then
                                colour = BrightGreen
                            End If
                            RenderText Font_Georgia, ConvertCurrency(str(Amount)), X, Y, colour, 0
                        End If
                    End If
                End If
            End If
        Next
            'Your Worth, their Worth and trade status labels!
        'YourWorth
        dX = YourWorthLblBounds.Left
        dY = YourWorthLblBounds.Top
        dw = YourWorthLblBounds.Right
        dH = YourWorthLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Your Trade Value: " & TradeYourWorth & "g"), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Your Trade Value: " & TradeYourWorth & "g"), dw), dX, dY, FontColor
        End If
            'TheirWorth
        dX = TheirWorthLblBounds.Left
        dY = TheirWorthLblBounds.Top
        dw = TheirWorthLblBounds.Right
        dH = TheirWorthLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Their Trade Value: " & TradeTheirWorth & "g"), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Their Trade Value: " & TradeTheirWorth & "g"), dw), dX, dY, FontColor
        End If
            'TradeStatus
        dX = TradeStatusLblBounds.Left
        dY = TradeStatusLblBounds.Top
        dw = TradeStatusLblBounds.Right
        dH = TradeStatusLblBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(TradeStatus), dw))) / 2)
            RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(TradeStatus), dw), dX, dY, FontColor
        End If
                'AcceptTradeBtn
        dX = AcceptTradeBtnBounds.Left
        dY = AcceptTradeBtnBounds.Top
        dw = AcceptTradeBtnBounds.Right
        dH = AcceptTradeBtnBounds.Bottom
        sx = AcceptTradeBtnSrcBounds.Left
        sy = AcceptTradeBtnSrcBounds.Top
        sW = AcceptTradeBtnSrcBounds.Right
        sH = AcceptTradeBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If AcceptTradeBtnState <> 2 Then
                        If AcceptTradeBtnHoverImage.Texture > 0 Then
                            RenderTexture AcceptTradeBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AcceptTradeBtnClickImage.Texture > 0 Then
                            RenderTexture AcceptTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If AcceptTradeBtnState = 2 Then
                        If AcceptTradeBtnClickImage.Texture > 0 Then
                            RenderTexture AcceptTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If AcceptTradeBtnNormImage.Texture > 0 Then
                            RenderTexture AcceptTradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If AcceptTradeBtnState = 2 Then
                    If AcceptTradeBtnClickImage.Texture > 0 Then
                        RenderTexture AcceptTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If AcceptTradeBtnNormImage.Texture > 0 Then
                        RenderTexture AcceptTradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'DeclineTradeBtn
        dX = DeclineTradeBtnBounds.Left
        dY = DeclineTradeBtnBounds.Top
        dw = DeclineTradeBtnBounds.Right
        dH = DeclineTradeBtnBounds.Bottom
        sx = DeclineTradeBtnSrcBounds.Left
        sy = DeclineTradeBtnSrcBounds.Top
        sW = DeclineTradeBtnSrcBounds.Right
        sH = DeclineTradeBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If DeclineTradeBtnState <> 2 Then
                        If DeclineTradeBtnHoverImage.Texture > 0 Then
                            RenderTexture DeclineTradeBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DeclineTradeBtnClickImage.Texture > 0 Then
                            RenderTexture DeclineTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If DeclineTradeBtnState = 2 Then
                        If DeclineTradeBtnClickImage.Texture > 0 Then
                            RenderTexture DeclineTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DeclineTradeBtnNormImage.Texture > 0 Then
                            RenderTexture DeclineTradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If DeclineTradeBtnState = 2 Then
                    If DeclineTradeBtnClickImage.Texture > 0 Then
                        RenderTexture DeclineTradeBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If DeclineTradeBtnNormImage.Texture > 0 Then
                        RenderTexture DeclineTradeBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawTrade", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawMailbox()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT, lineCount As Long
Dim startX As Long, maxScroll As Long, temptext As String
Dim Amount As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long


   On Error GoTo errorhandler

    Select Case MailBoxMenu
        Case 0
            'MailboxPnl
            dX = MailboxPnlBounds.Left
            dY = MailboxPnlBounds.Top
            dw = MailboxPnlBounds.Right
            dH = MailboxPnlBounds.Bottom
            sx = MailboxPnlSrcBounds.Left
            sy = MailboxPnlSrcBounds.Top
            sW = MailboxPnlSrcBounds.Right
            sH = MailboxPnlSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If MailboxPnlImage.Texture > 0 Then
                    RenderTexture MailboxPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
                End If
                            'CheckMailBtn
                dX = CheckMailBtnBounds.Left
                dY = CheckMailBtnBounds.Top
                dw = CheckMailBtnBounds.Right
                dH = CheckMailBtnBounds.Bottom
                sx = CheckMailBtnSrcBounds.Left
                sy = CheckMailBtnSrcBounds.Top
                sW = CheckMailBtnSrcBounds.Right
                sH = CheckMailBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If CheckMailBtnState <> 2 Then
                                If CheckMailBtnHoverImage.Texture > 0 Then
                                    RenderTexture CheckMailBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CheckMailBtnClickImage.Texture > 0 Then
                                    RenderTexture CheckMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If CheckMailBtnState = 2 Then
                                If CheckMailBtnClickImage.Texture > 0 Then
                                    RenderTexture CheckMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CheckMailBtnNormImage.Texture > 0 Then
                                    RenderTexture CheckMailBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If CheckMailBtnState = 2 Then
                            If CheckMailBtnClickImage.Texture > 0 Then
                                RenderTexture CheckMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If CheckMailBtnNormImage.Texture > 0 Then
                                RenderTexture CheckMailBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'SendMailBtn
                dX = SendMailBtnBounds.Left
                dY = SendMailBtnBounds.Top
                dw = SendMailBtnBounds.Right
                dH = SendMailBtnBounds.Bottom
                sx = SendMailBtnSrcBounds.Left
                sy = SendMailBtnSrcBounds.Top
                sW = SendMailBtnSrcBounds.Right
                sH = SendMailBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If SendMailBtnState <> 2 Then
                                If SendMailBtnHoverImage.Texture > 0 Then
                                    RenderTexture SendMailBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If SendMailBtnClickImage.Texture > 0 Then
                                    RenderTexture SendMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If SendMailBtnState = 2 Then
                                If SendMailBtnClickImage.Texture > 0 Then
                                    RenderTexture SendMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If SendMailBtnNormImage.Texture > 0 Then
                                    RenderTexture SendMailBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If SendMailBtnState = 2 Then
                            If SendMailBtnClickImage.Texture > 0 Then
                                RenderTexture SendMailBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If SendMailBtnNormImage.Texture > 0 Then
                                RenderTexture SendMailBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'CloseMailboxBtn
                dX = CloseMailboxBtnBounds.Left
                dY = CloseMailboxBtnBounds.Top
                dw = CloseMailboxBtnBounds.Right
                dH = CloseMailboxBtnBounds.Bottom
                sx = CloseMailboxBtnSrcBounds.Left
                sy = CloseMailboxBtnSrcBounds.Top
                sW = CloseMailboxBtnSrcBounds.Right
                sH = CloseMailboxBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If CloseMailboxBtnState <> 2 Then
                                If CloseMailboxBtnHoverImage.Texture > 0 Then
                                    RenderTexture CloseMailboxBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseMailboxBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseMailboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If CloseMailboxBtnState = 2 Then
                                If CloseMailboxBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseMailboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseMailboxBtnNormImage.Texture > 0 Then
                                    RenderTexture CloseMailboxBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If CloseMailboxBtnState = 2 Then
                            If CloseMailboxBtnClickImage.Texture > 0 Then
                                RenderTexture CloseMailboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If CloseMailboxBtnNormImage.Texture > 0 Then
                                RenderTexture CloseMailboxBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                                        Exit Sub
            End If
        Case 1
            'InboxPnl
            dX = InboxPnlBounds.Left
            dY = InboxPnlBounds.Top
            dw = InboxPnlBounds.Right
            dH = InboxPnlBounds.Bottom
            sx = InboxPnlSrcBounds.Left
            sy = InboxPnlSrcBounds.Top
            sW = InboxPnlSrcBounds.Right
            sH = InboxPnlSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If InboxPnlImage.Texture > 0 Then
                    RenderTexture InboxPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
                End If
                            'InboxList
                dX = InboxListBounds.Left
                dY = InboxListBounds.Top
                dw = InboxListBounds.Right
                dH = InboxListBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    'Do the list stuff (uggh!)
                    If dH / 14 >= 1 Then
                        lineCount = Fix(dH / 14)
                        maxScroll = Int((MailCount / lineCount))
                        If InboxListScroll > maxScroll Then InboxListScroll = 1
                        For i = (lineCount * InboxListScroll) + 1 To (lineCount * InboxListScroll) + lineCount
                            X = i - (lineCount * InboxListScroll) - 1
                            If i > MailCount Then
                                Exit For
                            End If
                            If Mail(i - 1).Unread = 1 Then
                                temptext = TrimText(Font_Georgia, "[UNREAD] " & "Letter from " & Mail(i - 1).From & " on " & Mail(i - 1).Date, dw - 8)
                                If temptext <> "[UNREAD] " & "Letter from " & Mail(i - 1).From & " on " & Mail(i - 1).Date Then
                                    temptext = Left(temptext, Len(temptext) - 1)
                                    temptext = temptext & "..."
                                End If
                            Else
                                temptext = TrimText(Font_Georgia, "Letter from " & Mail(i - 1).From & " on " & Mail(i - 1).Date, dw - 8)
                                If temptext <> "Letter from " & Mail(i - 1).From & " on " & Mail(i - 1).Date Then
                                    temptext = Left(temptext, Len(temptext) - 1)
                                    temptext = temptext & "..."
                                End If
                            End If
                            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY + 2 + (X * 14) And GlobalY <= dY + 2 + ((X + 1) * 14) Then
                                RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), FontColor
                            Else
                                RenderText Font_Georgia, temptext, dX + 4, dY + 2 + (X * 14), BrightGreen
                            End If
                        Next
                    End If
                End If
                            'ScrlInboxUpBtn
                dX = ScrlInboxUpBtnBounds.Left
                dY = ScrlInboxUpBtnBounds.Top
                dw = ScrlInboxUpBtnBounds.Right
                dH = ScrlInboxUpBtnBounds.Bottom
                sx = ScrlInboxUpBtnSrcBounds.Left
                sy = ScrlInboxUpBtnSrcBounds.Top
                sW = ScrlInboxUpBtnSrcBounds.Right
                sH = ScrlInboxUpBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If ScrlInboxUpBtnState <> 2 Then
                                If ScrlInboxUpBtnHoverImage.Texture > 0 Then
                                    RenderTexture ScrlInboxUpBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ScrlInboxUpBtnClickImage.Texture > 0 Then
                                    RenderTexture ScrlInboxUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If ScrlInboxUpBtnState = 2 Then
                                If ScrlInboxUpBtnClickImage.Texture > 0 Then
                                    RenderTexture ScrlInboxUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ScrlInboxUpBtnNormImage.Texture > 0 Then
                                    RenderTexture ScrlInboxUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If ScrlInboxUpBtnState = 2 Then
                            If ScrlInboxUpBtnClickImage.Texture > 0 Then
                                RenderTexture ScrlInboxUpBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If ScrlInboxUpBtnNormImage.Texture > 0 Then
                                RenderTexture ScrlInboxUpBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'ScrlInboxDownBtn
                dX = ScrlInboxDownBtnBounds.Left
                dY = ScrlInboxDownBtnBounds.Top
                dw = ScrlInboxDownBtnBounds.Right
                dH = ScrlInboxDownBtnBounds.Bottom
                sx = ScrlInboxDownBtnSrcBounds.Left
                sy = ScrlInboxDownBtnSrcBounds.Top
                sW = ScrlInboxDownBtnSrcBounds.Right
                sH = ScrlInboxDownBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If ScrlInboxDownBtnState <> 2 Then
                                If ScrlInboxDownBtnHoverImage.Texture > 0 Then
                                    RenderTexture ScrlInboxDownBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ScrlInboxDownBtnClickImage.Texture > 0 Then
                                    RenderTexture ScrlInboxDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If ScrlInboxDownBtnState = 2 Then
                                If ScrlInboxDownBtnClickImage.Texture > 0 Then
                                    RenderTexture ScrlInboxDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ScrlInboxDownBtnNormImage.Texture > 0 Then
                                    RenderTexture ScrlInboxDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If ScrlInboxDownBtnState = 2 Then
                            If ScrlInboxDownBtnClickImage.Texture > 0 Then
                                RenderTexture ScrlInboxDownBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If ScrlInboxDownBtnNormImage.Texture > 0 Then
                                RenderTexture ScrlInboxDownBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'CloseInboxBtn
                dX = CloseInboxBtnBounds.Left
                dY = CloseInboxBtnBounds.Top
                dw = CloseInboxBtnBounds.Right
                dH = CloseInboxBtnBounds.Bottom
                sx = CloseInboxBtnSrcBounds.Left
                sy = CloseInboxBtnSrcBounds.Top
                sW = CloseInboxBtnSrcBounds.Right
                sH = CloseInboxBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If CloseInboxBtnState <> 2 Then
                                If CloseInboxBtnHoverImage.Texture > 0 Then
                                    RenderTexture CloseInboxBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseInboxBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseInboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If CloseInboxBtnState = 2 Then
                                If CloseInboxBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseInboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseInboxBtnNormImage.Texture > 0 Then
                                    RenderTexture CloseInboxBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If CloseInboxBtnState = 2 Then
                            If CloseInboxBtnClickImage.Texture > 0 Then
                                RenderTexture CloseInboxBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If CloseInboxBtnNormImage.Texture > 0 Then
                                RenderTexture CloseInboxBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                                        Exit Sub
            End If
        Case 2
            'ReadLetterPnl
            dX = ReadLetterPnlBounds.Left
            dY = ReadLetterPnlBounds.Top
            dw = ReadLetterPnlBounds.Right
            dH = ReadLetterPnlBounds.Bottom
            sx = ReadLetterPnlSrcBounds.Left
            sy = ReadLetterPnlSrcBounds.Top
            sW = ReadLetterPnlSrcBounds.Right
            sH = ReadLetterPnlSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If ReadLetterPnlImage.Texture > 0 Then
                    RenderTexture ReadLetterPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
                End If
                            'MessageFrom
                dX = MessageFromBounds.Left
                dY = MessageFromBounds.Top
                dw = MessageFromBounds.Right
                dH = MessageFromBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("From: " & Mail(SelectedMail).From), dw), dX, dY, FontColor
                End If
                            'MessageFromContent
                dX = MessageFromContentBounds.Left
                dY = MessageFromContentBounds.Top
                dw = MessageFromContentBounds.Right
                dH = MessageFromContentBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        RenderText Font_Georgia, LimitTextLines(WordWrap(Trim$(Mail(SelectedMail).Body), dw - 4), Fix(dH / 14), 0), dX + 2, dY, FontColor
                    End If
                End If
                            'ItemReceived
                dX = ItemReceivedBounds.Left
                dY = ItemReceivedBounds.Top
                dw = ItemReceivedBounds.Right
                dH = ItemReceivedBounds.Bottom
                If DragMailboxItem = 0 Then
                    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                        If Mail(SelectedMail).ItemNum > 0 Then
                            If Mail(SelectedMail).ItemNum < numitems Then
                                RenderTexture Tex_Item(Item(Mail(SelectedMail).ItemNum).pic), dX, dY, 0, 0, dw, dH, 32, 32
                                If Mail(SelectedMail).ItemVal > 0 Then
                                    If dH > 12 And dw > 16 Then
                                        RenderText Font_Georgia, Mail(SelectedMail).ItemVal, dX, dY + dH - 12, FontColor
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
                            'ReplyLetterBtn
                dX = ReplyLetterBtnBounds.Left
                dY = ReplyLetterBtnBounds.Top
                dw = ReplyLetterBtnBounds.Right
                dH = ReplyLetterBtnBounds.Bottom
                sx = ReplyLetterBtnSrcBounds.Left
                sy = ReplyLetterBtnSrcBounds.Top
                sW = ReplyLetterBtnSrcBounds.Right
                sH = ReplyLetterBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If ReplyLetterBtnState <> 2 Then
                                If ReplyLetterBtnHoverImage.Texture > 0 Then
                                    RenderTexture ReplyLetterBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ReplyLetterBtnClickImage.Texture > 0 Then
                                    RenderTexture ReplyLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If ReplyLetterBtnState = 2 Then
                                If ReplyLetterBtnClickImage.Texture > 0 Then
                                    RenderTexture ReplyLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If ReplyLetterBtnNormImage.Texture > 0 Then
                                    RenderTexture ReplyLetterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If ReplyLetterBtnState = 2 Then
                            If ReplyLetterBtnClickImage.Texture > 0 Then
                                RenderTexture ReplyLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If ReplyLetterBtnNormImage.Texture > 0 Then
                                RenderTexture ReplyLetterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'TrashLetterBtn
                dX = TrashLetterBtnBounds.Left
                dY = TrashLetterBtnBounds.Top
                dw = TrashLetterBtnBounds.Right
                dH = TrashLetterBtnBounds.Bottom
                sx = TrashLetterBtnSrcBounds.Left
                sy = TrashLetterBtnSrcBounds.Top
                sW = TrashLetterBtnSrcBounds.Right
                sH = TrashLetterBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If TrashLetterBtnState <> 2 Then
                                If TrashLetterBtnHoverImage.Texture > 0 Then
                                    RenderTexture TrashLetterBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If TrashLetterBtnClickImage.Texture > 0 Then
                                    RenderTexture TrashLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If TrashLetterBtnState = 2 Then
                                If TrashLetterBtnClickImage.Texture > 0 Then
                                    RenderTexture TrashLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If TrashLetterBtnNormImage.Texture > 0 Then
                                    RenderTexture TrashLetterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If TrashLetterBtnState = 2 Then
                            If TrashLetterBtnClickImage.Texture > 0 Then
                                RenderTexture TrashLetterBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If TrashLetterBtnNormImage.Texture > 0 Then
                                RenderTexture TrashLetterBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'StopReadingBtn
                dX = StopReadingBtnBounds.Left
                dY = StopReadingBtnBounds.Top
                dw = StopReadingBtnBounds.Right
                dH = StopReadingBtnBounds.Bottom
                sx = StopReadingBtnSrcBounds.Left
                sy = StopReadingBtnSrcBounds.Top
                sW = StopReadingBtnSrcBounds.Right
                sH = StopReadingBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If StopReadingBtnState <> 2 Then
                                If StopReadingBtnHoverImage.Texture > 0 Then
                                    RenderTexture StopReadingBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If StopReadingBtnClickImage.Texture > 0 Then
                                    RenderTexture StopReadingBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If StopReadingBtnState = 2 Then
                                If StopReadingBtnClickImage.Texture > 0 Then
                                    RenderTexture StopReadingBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If StopReadingBtnNormImage.Texture > 0 Then
                                    RenderTexture StopReadingBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If StopReadingBtnState = 2 Then
                            If StopReadingBtnClickImage.Texture > 0 Then
                                RenderTexture StopReadingBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If StopReadingBtnNormImage.Texture > 0 Then
                                RenderTexture StopReadingBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                                        Exit Sub
            End If
        Case 3
            'SendMailPnl
            dX = SendMailPnlBounds.Left
            dY = SendMailPnlBounds.Top
            dw = SendMailPnlBounds.Right
            dH = SendMailPnlBounds.Bottom
            sx = SendMailPnlSrcBounds.Left
            sy = SendMailPnlSrcBounds.Top
            sW = SendMailPnlSrcBounds.Right
            sH = SendMailPnlSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If SendMailPnlImage.Texture > 0 Then
                    RenderTexture SendMailPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
                End If
                            'SendMessageTo
                dX = SendMessageToBounds.Left
                dY = SendMessageToBounds.Top
                dw = SendMessageToBounds.Right
                dH = SendMessageToBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    'Do Text Stuff Here
                    If SelTextbox = 1 Then
                        RenderText Font_Georgia, LimitText(Font_Georgia, MailToFrom & chatShowLine, dw - 8), dX + 4, dY + 2, White
                    Else
                        RenderText Font_Georgia, LimitText(Font_Georgia, MailToFrom, dw - 8), dX + 4, dY + 2, FontColor
                    End If
                End If
                            'SendMessageText
                dX = SendMessageTextBounds.Left
                dY = SendMessageTextBounds.Top
                dw = SendMessageTextBounds.Right
                dH = SendMessageTextBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        'Do Text Stuff Here
                        If SelTextbox = 2 Then
                            RenderText Font_Georgia, LimitTextLines(WordWrap(MailContent & chatShowLine, dw - 4), Fix(dH / 14), 1), dX + 2, dY, FontColor
                        Else
                            RenderText Font_Georgia, LimitTextLines(WordWrap(MailContent, dw - 4), Fix(dH / 14), 1), dX + 2, dY, FontColor
                        End If
                    End If
                End If
                            'SendMessageItem
                dX = SendMessageItemBounds.Left
                dY = SendMessageItemBounds.Top
                dw = SendMessageItemBounds.Right
                dH = SendMessageItemBounds.Bottom
                If DragMailboxItem = 0 Then
                    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                        If MailItem > 0 Then
                            If GetPlayerInvItemNum(MyIndex, MailItem) > 0 Then
                                RenderTexture Tex_Item(Item(GetPlayerInvItemNum(MyIndex, MailItem)).pic), dX, dY, 0, 0, dw, dH, 32, 32
                                If MailItemValue > 0 Then
                                    If dH > 12 And dw > 16 Then
                                        RenderText Font_Georgia, MailItemValue, dX, dY + dH - 12, FontColor
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
                            'SendMessageBtn
                dX = SendMessageBtnBounds.Left
                dY = SendMessageBtnBounds.Top
                dw = SendMessageBtnBounds.Right
                dH = SendMessageBtnBounds.Bottom
                sx = SendMessageBtnSrcBounds.Left
                sy = SendMessageBtnSrcBounds.Top
                sW = SendMessageBtnSrcBounds.Right
                sH = SendMessageBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If SendMessageBtnState <> 2 Then
                                If SendMessageBtnHoverImage.Texture > 0 Then
                                    RenderTexture SendMessageBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If SendMessageBtnClickImage.Texture > 0 Then
                                    RenderTexture SendMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If SendMessageBtnState = 2 Then
                                If SendMessageBtnClickImage.Texture > 0 Then
                                    RenderTexture SendMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If SendMessageBtnNormImage.Texture > 0 Then
                                    RenderTexture SendMessageBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If SendMessageBtnState = 2 Then
                            If SendMessageBtnClickImage.Texture > 0 Then
                                RenderTexture SendMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If SendMessageBtnNormImage.Texture > 0 Then
                                RenderTexture SendMessageBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                            'DiscardMessageBtn
                dX = DiscardMessageBtnBounds.Left
                dY = DiscardMessageBtnBounds.Top
                dw = DiscardMessageBtnBounds.Right
                dH = DiscardMessageBtnBounds.Bottom
                sx = DiscardMessageBtnSrcBounds.Left
                sy = DiscardMessageBtnSrcBounds.Top
                sW = DiscardMessageBtnSrcBounds.Right
                sH = DiscardMessageBtnSrcBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw Then
                        If GlobalY >= dY And GlobalY <= dY + dH Then
                            'Draw hoverImage
                            If DiscardMessageBtnState <> 2 Then
                                If DiscardMessageBtnHoverImage.Texture > 0 Then
                                    RenderTexture DiscardMessageBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If DiscardMessageBtnClickImage.Texture > 0 Then
                                    RenderTexture DiscardMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        Else
                            If DiscardMessageBtnState = 2 Then
                                If DiscardMessageBtnClickImage.Texture > 0 Then
                                    RenderTexture DiscardMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If DiscardMessageBtnNormImage.Texture > 0 Then
                                    RenderTexture DiscardMessageBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    Else
                        If DiscardMessageBtnState = 2 Then
                            If DiscardMessageBtnClickImage.Texture > 0 Then
                                RenderTexture DiscardMessageBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DiscardMessageBtnNormImage.Texture > 0 Then
                                RenderTexture DiscardMessageBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                End If
                           Exit Sub
            End If
    End Select




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawMailbox", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Function LimitTextLines(lmtText As String, lineCount As Long, direction As Byte) As String
'DIRECTION NOTES
'0 will trim from bottom, 1 will trim from top.
Dim a() As String, i As Long

   On Error GoTo errorhandler

a = Split(lmtText, vbNewLine)
lmtText = ""
If lineCount > 0 Then
    If direction = 0 Then
        If UBound(a) > lineCount Then
            For i = 0 To lineCount - 1
                lmtText = lmtText & a(i) & vbNewLine
            Next
        Else
            For i = 0 To UBound(a)
                lmtText = lmtText & a(i) & vbNewLine
            Next
        End If
    ElseIf direction = 1 Then
        If UBound(a) > lineCount Then
            For i = UBound(a) - lineCount To UBound(a)
                lmtText = lmtText & a(i) & vbNewLine
            Next
        Else
            For i = 0 To UBound(a)
                lmtText = lmtText & a(i) & vbNewLine
            Next
        End If
    End If
End If
LimitTextLines = lmtText


   On Error GoTo 0
   Exit Function
errorhandler:
    HandleError "LimitTextLines", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Function

Sub DrawQuestLog()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT
Dim Amount As Long, z As Long, s As String, p As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long, QuestText As String


    'QuestLogPanel

   On Error GoTo errorhandler

    dX = QuestLogPanelBounds.Left
    dY = QuestLogPanelBounds.Top
    dw = QuestLogPanelBounds.Right
    dH = QuestLogPanelBounds.Bottom
    sx = QuestLogPanelSrcBounds.Left
    sy = QuestLogPanelSrcBounds.Top
    sW = QuestLogPanelSrcBounds.Right
    sH = QuestLogPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If QuestLogPanelImage.Texture > 0 Then
            RenderTexture QuestLogPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
        If QuestLogFunction = 1 Then
            If QuestLogQuest > 0 Then
                'QuestTitle
                dX = QuestTitleLblBounds.Left
                dY = QuestTitleLblBounds.Top
                dw = QuestTitleLblBounds.Right
                dH = QuestTitleLblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If QuestInProgress(QuestLogQuest) Then
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(quest(QuestLogQuest).Name) & " - In Progress", dw), dX, dY, FontColor
                    ElseIf QuestCompleted(QuestLogQuest) Then
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(quest(QuestLogQuest).Name) & " - Completed", dw), dX, dY, FontColor
                    Else
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(quest(QuestLogQuest).Name) & " - Not Started", dw), dX, dY, FontColor
                    End If
                End If
                
                'QuestTitle
                dX = QuestPageContentBounds.Left
                dY = QuestPageContentBounds.Top
                dw = QuestPageContentBounds.Right
                dH = QuestPageContentBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If QuestInProgress(QuestLogQuest) Then
                        Select Case QuestLogPage
                            Case 0
                                QuestText = "Description: " & vbNewLine & "     "
                                QuestText = QuestText & nTrim(quest(QuestLogQuest).QuestDesc)
                            Case 1 'Task
                                QuestText = "Current Step: " & str(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask) & vbNewLine & "     "
                                QuestText = "Task Description: " & vbNewLine & vbNewLine & nTrim(quest(QuestLogQuest).Task(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask).TaskDesc) & vbNewLine & vbNewLine
                                i = Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask
                                    Select Case quest(QuestLogQuest).Task(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask).type
                                        Case 0
                                            'Nothing???
                                        Case TASK_KILLNPCS
                                            For z = 1 To 4
                                                If quest(QuestLogQuest).Task(i).data(z) > 0 Then
                                                    QuestText = QuestText & "-- Kill " & Trim$(Npc(quest(QuestLogQuest).Task(i).data(z)).Name) & "(s)  (" & CStr(Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(z) & " / " & CStr(quest(QuestLogQuest).Task(i).data(4 + z))) & ")" & vbNewLine
                                                End If
                                            Next
                                        Case TASK_TALKEVENT
                                            QuestText = QuestText & "-- " & nTrim(quest(QuestLogQuest).Task(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask).Text(1))
                                        Case TASK_AQUIREITEMS
                                            For z = 1 To 4
                                                If quest(QuestLogQuest).Task(i).data(z) > 0 Then
                                                    QuestText = QuestText & "-- Aquire " & Trim$(Item(quest(QuestLogQuest).Task(i).data(z)).Name) & "(s)  (" & CStr(Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(z)) & " / " & CStr(quest(QuestLogQuest).Task(i).data(4 + z)) & ")" & vbNewLine
                                                End If
                                            Next
                                        Case TASK_FETCHRETURN
                                            X = 0
                                            s = ""
                                            For z = 1 To 4
                                                If quest(QuestLogQuest).Task(i).data(z) > 0 Then
                                                    s = s & "-- Aquire " & Trim$(Item(quest(QuestLogQuest).Task(i).data(z)).Name) & "(s)  (" & str(Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(z)) & " / " & str(quest(QuestLogQuest).Task(i).data(4 + z)) & ")" & vbNewLine
                                                    If Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(z) < quest(QuestLogQuest).Task(i).data(4 + z) Then
                                                        X = 1
                                                    End If
                                                End If
                                            Next
                                            If X = 0 Then
                                                QuestText = QuestText & "-- " & nTrim(quest(QuestLogQuest).Task(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask).Text(1))
                                            Else
                                                QuestText = QuestText & s
                                            End If
                                        Case TASK_KILLPLAYERS
                                            QuestText = QuestText & "-- Kill Player(s) " & "(" & str(Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(1) & " / " & str(quest(QuestLogQuest).Task(i).data(1))) & ")" & vbNewLine
                                        Case TASK_GOTOMAP
                                            QuestText = QuestText & "-- " & nTrim(quest(QuestLogQuest).Task(Player(MyIndex).PlayerQuest(QuestLogQuest).CurrentTask).Text(1))
                                        Case TASK_GETRESOURCES
                                            For z = 1 To 4
                                                If quest(QuestLogQuest).Task(i).data(z) > 0 Then
                                                    QuestText = QuestText & "-- Deplete " & Trim$(Resource(quest(QuestLogQuest).Task(i).data(z)).Name) & "(s)  (" & str(Player(MyIndex).PlayerQuest(QuestLogQuest).TaskCount(z) & " / " & str(quest(QuestLogQuest).Task(i).data(4 + z))) & ")" & vbNewLine
                                                End If
                                            Next
                                    End Select
                            Case 2
                                QuestText = "Rewards: " & vbNewLine & vbNewLine
                                p = 0
                                For i = 1 To 3
                                    If quest(QuestLogQuest).RewardItem(i).Item > 0 Then
                                        If p = 0 Then
                                            QuestText = QuestText & "Item(s): " & vbNewLine
                                            QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                                            p = 1
                                        Else
                                            QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                                        End If
                                    End If
                                Next
                                If p = 1 Then QuestText = QuestText & vbNewLine
                                p = 0
                                For i = 1 To 2
                                    If quest(QuestLogQuest).RewardSpell(i) > 0 Then
                                        If p = 0 Then
                                            QuestText = QuestText & "Will Learn: " & vbNewLine
                                            QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                                            p = 1
                                        Else
                                            QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                                        End If
                                    End If
                                Next
                                If p = 1 Then QuestText = QuestText & vbNewLine
                                If quest(QuestLogQuest).GiveExp > 0 Then
                                    QuestText = QuestText & "Extra: " & vbNewLine & "-- " & quest(QuestLogQuest).GiveExp & " Exp" & vbNewLine
                                End If
                        End Select
                    ElseIf QuestCompleted(QuestLogQuest) Then
                        QuestLogPage = 0
                        QuestText = Trim$(quest(QuestLogQuest).QuestLogAfterDesc) & vbNewLine & vbNewLine
                        QuestText = QuestText & "Rewards: " & vbNewLine & vbNewLine
                        p = 0
                        For i = 1 To 3
                            If quest(QuestLogQuest).RewardItem(i).Item > 0 Then
                                If p = 0 Then
                                    QuestText = QuestText & "Item(s): " & vbNewLine
                                    QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                                    p = 1
                                Else
                                    QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                                End If
                            End If
                        Next
                        If p = 1 Then QuestText = QuestText & vbNewLine
                        p = 0
                        For i = 1 To 2
                            If quest(QuestLogQuest).RewardSpell(i) > 0 Then
                                If p = 0 Then
                                    QuestText = QuestText & "You Learned: " & vbNewLine
                                    QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                                    p = 1
                                Else
                                    QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                                End If
                            End If
                        Next
                        If p = 1 Then QuestText = QuestText & vbNewLine
                        If quest(QuestLogQuest).GiveExp > 0 Then
                            QuestText = QuestText & "Extra: " & vbNewLine & "-- " & quest(QuestLogQuest).GiveExp & " Exp" & vbNewLine
                        End If
                    Else
                        QuestLogPage = 0
                        QuestText = Trim$(quest(QuestLogQuest).QuestLogBeforeDesc)
                    End If
                    QuestText = WordWrap(QuestText, dw - 4)
                    QuestText = LimitTextLines(QuestText, Fix(dH / 14), 0)
                    RenderText Font_Georgia, QuestText, dX, dY, FontColor
                    
                    If QuestInProgress(QuestLogQuest) Then
                        'Next Page/Prev Page/Quit Quest
                        'QuestDecline
                        dX = QuestDeclineLblBounds.Left
                        dY = QuestDeclineLblBounds.Top
                        dw = QuestDeclineLblBounds.Right
                        dH = QuestDeclineLblBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Prev Page"), dw))) / 2)
                            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Prev Page"), dw), dX, dY, Yellow
                            Else
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Prev Page"), dw), dX, dY, FontColor
                            End If
                        End If
                        
                        'QuestAccept
                        dX = QuestAcceptLblBounds.Left
                        dY = QuestAcceptLblBounds.Top
                        dw = QuestAcceptLblBounds.Right
                        dH = QuestAcceptLblBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Next Page"), dw))) / 2)
                            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Next Page"), dw), dX, dY, Yellow
                            Else
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Next Page"), dw), dX, dY, FontColor
                            End If
                        End If
                    End If
                    
                    If Player(MyIndex).PlayerQuest(QuestLogQuest).state = QUEST_STARTED And quest(QuestLogQuest).Abandonable = 1 Then
                        'QuitQuest
                        dX = QuitQuestLblBounds.Left
                        dY = QuitQuestLblBounds.Top
                        dw = QuitQuestLblBounds.Right
                        dH = QuitQuestLblBounds.Bottom
                        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                            dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Quit Quest"), dw))) / 2)
                            If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Quit Quest"), dw), dX, dY, Yellow
                            Else
                                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Quit Quest"), dw), dX, dY, FontColor
                            End If
                        End If
                    End If
                    
                    'CloseQuestLogBtn
                    dX = CloseQuestLogBtnBounds.Left
                    dY = CloseQuestLogBtnBounds.Top
                    dw = CloseQuestLogBtnBounds.Right
                    dH = CloseQuestLogBtnBounds.Bottom
                    sx = CloseQuestLogBtnSrcBounds.Left
                    sy = CloseQuestLogBtnSrcBounds.Top
                    sW = CloseQuestLogBtnSrcBounds.Right
                    sH = CloseQuestLogBtnSrcBounds.Bottom
                    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw Then
                            If GlobalY >= dY And GlobalY <= dY + dH Then
                                'Draw hoverImage
                                If CloseQuestLogBtnState <> 2 Then
                                    If CloseQuestLogBtnHoverImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                Else
                                    If CloseQuestLogBtnClickImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                End If
                            Else
                                If CloseQuestLogBtnState = 2 Then
                                    If CloseQuestLogBtnClickImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                Else
                                    If CloseQuestLogBtnNormImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                End If
                            End If
                        Else
                            If CloseQuestLogBtnState = 2 Then
                                If CloseQuestLogBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseQuestLogBtnNormImage.Texture > 0 Then
                                    RenderTexture CloseQuestLogBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        ElseIf QuestLogFunction = 0 Then
            If QuestLogQuest > 0 Then
                'QuestTitle
                dX = QuestTitleLblBounds.Left
                dY = QuestTitleLblBounds.Top
                dw = QuestTitleLblBounds.Right
                dH = QuestTitleLblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(quest(QuestLogQuest).Name), dw), dX, dY, FontColor
                End If
                                        'QuestTitle
                dX = QuestPageContentBounds.Left
                dY = QuestPageContentBounds.Top
                dw = QuestPageContentBounds.Right
                dH = QuestPageContentBounds.Bottom
                QuestText = "Quest Offer: " & vbNewLine
                QuestText = QuestText & QuestLogMessage
                QuestText = WordWrap(QuestText, dw - 4)
                QuestText = LimitTextLines(QuestText, Fix(dH / 14), 0)
                RenderText Font_Georgia, QuestText, dX, dY, FontColor
                                        'Next Page/Prev Page/Quit Quest
                'QuestDecline
                dX = QuestDeclineLblBounds.Left
                dY = QuestDeclineLblBounds.Top
                dw = QuestDeclineLblBounds.Right
                dH = QuestDeclineLblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Decline Quest"), dw))) / 2)
                    If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Decline Quest"), dw), dX, dY, Yellow
                    Else
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Decline Quest"), dw), dX, dY, FontColor
                    End If
                End If
            'QuestAccept
                dX = QuestAcceptLblBounds.Left
                dY = QuestAcceptLblBounds.Top
                dw = QuestAcceptLblBounds.Right
                dH = QuestAcceptLblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$("Accept Quest"), dw))) / 2)
                    If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Accept Quest"), dw), dX, dY, Yellow
                    Else
                        RenderText Font_Georgia, TrimText(Font_Georgia, Trim$("Accept Quest"), dw), dX, dY, FontColor
                    End If
                End If
            End If
        ElseIf QuestLogFunction = 2 Then
            If QuestLogQuest > 0 Then
                'QuestTitle
                dX = QuestTitleLblBounds.Left
                dY = QuestTitleLblBounds.Top
                dw = QuestTitleLblBounds.Right
                dH = QuestTitleLblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    RenderText Font_Georgia, TrimText(Font_Georgia, "Quest Complete!", dw), dX, dY, FontColor
                End If
                'QuestTitle
                dX = QuestPageContentBounds.Left
                dY = QuestPageContentBounds.Top
                dw = QuestPageContentBounds.Right
                dH = QuestPageContentBounds.Bottom
                
                QuestText = QuestText & "Quest: " & Trim$(quest(QuestLogQuest).Name) & " Complete!" & vbNewLine & vbNewLine
                QuestText = QuestText & "Rewards: " & vbNewLine & vbNewLine
                p = 0
                For i = 1 To 3
                    If quest(QuestLogQuest).RewardItem(i).Item > 0 Then
                        If p = 0 Then
                            QuestText = QuestText & "Item(s): " & vbNewLine
                            QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                            p = 1
                        Else
                            QuestText = QuestText & "-- " & Trim$(Item(quest(QuestLogQuest).RewardItem(i).Item).Name) & "(" & Trim$(quest(QuestLogQuest).RewardItem(i).Value) & ")" & vbNewLine
                        End If
                    End If
                Next
                If p = 1 Then QuestText = QuestText & vbNewLine
                p = 0
                For i = 1 To 2
                    If quest(QuestLogQuest).RewardSpell(i) > 0 Then
                        If p = 0 Then
                            QuestText = QuestText & "You Learned: " & vbNewLine
                            QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                            p = 1
                        Else
                            QuestText = QuestText & "-- " & Trim$(spell(quest(QuestLogQuest).RewardSpell(i)).Name) & vbNewLine
                        End If
                    End If
                Next
                If p = 1 Then QuestText = QuestText & vbNewLine
                If quest(QuestLogQuest).GiveExp > 0 Then
                    QuestText = QuestText & "Extra: " & vbNewLine & "-- " & quest(QuestLogQuest).GiveExp & " Exp" & vbNewLine
                End If
                QuestText = WordWrap(QuestText, dw - 4)
                QuestText = LimitTextLines(QuestText, Fix(dH / 14), 0)
                RenderText Font_Georgia, QuestText, dX, dY, FontColor
                
                'CloseQuestLogBtn
                    dX = CloseQuestLogBtnBounds.Left
                    dY = CloseQuestLogBtnBounds.Top
                    dw = CloseQuestLogBtnBounds.Right
                    dH = CloseQuestLogBtnBounds.Bottom
                    sx = CloseQuestLogBtnSrcBounds.Left
                    sy = CloseQuestLogBtnSrcBounds.Top
                    sW = CloseQuestLogBtnSrcBounds.Right
                    sH = CloseQuestLogBtnSrcBounds.Bottom
                    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw Then
                            If GlobalY >= dY And GlobalY <= dY + dH Then
                                'Draw hoverImage
                                If CloseQuestLogBtnState <> 2 Then
                                    If CloseQuestLogBtnHoverImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                Else
                                    If CloseQuestLogBtnClickImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                End If
                            Else
                                If CloseQuestLogBtnState = 2 Then
                                    If CloseQuestLogBtnClickImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                Else
                                    If CloseQuestLogBtnNormImage.Texture > 0 Then
                                        RenderTexture CloseQuestLogBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                    End If
                                End If
                            End If
                        Else
                            If CloseQuestLogBtnState = 2 Then
                                If CloseQuestLogBtnClickImage.Texture > 0 Then
                                    RenderTexture CloseQuestLogBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            Else
                                If CloseQuestLogBtnNormImage.Texture > 0 Then
                                    RenderTexture CloseQuestLogBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                                End If
                            End If
                        End If
                    End If
            End If
        End If
    End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawQuestLog", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawCurrencyMenu()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT, lineCount As Long
Dim startX As Long, maxScroll As Long, temptext As String
Dim Amount As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long

    'CurrencyPanel

   On Error GoTo errorhandler

    dX = CurrencyPanelBounds.Left
    dY = CurrencyPanelBounds.Top
    dw = CurrencyPanelBounds.Right
    dH = CurrencyPanelBounds.Bottom
    sx = CurrencyPanelSrcBounds.Left
    sy = CurrencyPanelSrcBounds.Top
    sW = CurrencyPanelSrcBounds.Right
    sH = CurrencyPanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If CurrencyPanelImage.Texture > 0 Then
            RenderTexture CurrencyPanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'CurrencyPrompt
        dX = CurrencyPromptBounds.Left
        dY = CurrencyPromptBounds.Top
        dw = CurrencyPromptBounds.Right
        dH = CurrencyPromptBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(CurrencyCaption), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(CurrencyCaption), dw), dX + 2, dY + 2, FontColor
            End If
        End If
            'CurrencyInput
        dX = CurrencyInputBounds.Left
        dY = CurrencyInputBounds.Top
        dw = CurrencyInputBounds.Right
        dH = CurrencyInputBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 > 0 Then
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(CurrencyText & chatShowLine), dw), dX + 2, dY + 2, FontColor
            End If
        End If
            'CurrencyOkBtn
        dX = CurrencyOkBtnBounds.Left
        dY = CurrencyOkBtnBounds.Top
        dw = CurrencyOkBtnBounds.Right
        dH = CurrencyOkBtnBounds.Bottom
        sx = CurrencyOkBtnSrcBounds.Left
        sy = CurrencyOkBtnSrcBounds.Top
        sW = CurrencyOkBtnSrcBounds.Right
        sH = CurrencyOkBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CurrencyOkBtnState <> 2 Then
                        If CurrencyOkBtnHoverImage.Texture > 0 Then
                            RenderTexture CurrencyOkBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CurrencyOkBtnClickImage.Texture > 0 Then
                            RenderTexture CurrencyOkBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CurrencyOkBtnState = 2 Then
                        If CurrencyOkBtnClickImage.Texture > 0 Then
                            RenderTexture CurrencyOkBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CurrencyOkBtnNormImage.Texture > 0 Then
                            RenderTexture CurrencyOkBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CurrencyOkBtnState = 2 Then
                    If CurrencyOkBtnClickImage.Texture > 0 Then
                        RenderTexture CurrencyOkBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CurrencyOkBtnNormImage.Texture > 0 Then
                        RenderTexture CurrencyOkBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
            'CurrencyCancelBtn
        dX = CurrencyCancelBtnBounds.Left
        dY = CurrencyCancelBtnBounds.Top
        dw = CurrencyCancelBtnBounds.Right
        dH = CurrencyCancelBtnBounds.Bottom
        sx = CurrencyCancelBtnSrcBounds.Left
        sy = CurrencyCancelBtnSrcBounds.Top
        sW = CurrencyCancelBtnSrcBounds.Right
        sH = CurrencyCancelBtnSrcBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If GlobalX >= dX And GlobalX <= dX + dw Then
                If GlobalY >= dY And GlobalY <= dY + dH Then
                    'Draw hoverImage
                    If CurrencyCancelBtnState <> 2 Then
                        If CurrencyCancelBtnHoverImage.Texture > 0 Then
                            RenderTexture CurrencyCancelBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CurrencyCancelBtnClickImage.Texture > 0 Then
                            RenderTexture CurrencyCancelBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                Else
                    If CurrencyCancelBtnState = 2 Then
                        If CurrencyCancelBtnClickImage.Texture > 0 Then
                            RenderTexture CurrencyCancelBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If CurrencyCancelBtnNormImage.Texture > 0 Then
                            RenderTexture CurrencyCancelBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            Else
                If CurrencyCancelBtnState = 2 Then
                    If CurrencyCancelBtnClickImage.Texture > 0 Then
                        RenderTexture CurrencyCancelBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                Else
                    If CurrencyCancelBtnNormImage.Texture > 0 Then
                        RenderTexture CurrencyCancelBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                    End If
                End If
            End If
        End If
        End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawCurrencyMenu", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawDialogueMenu()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT, lineCount As Long
Dim startX As Long, maxScroll As Long, temptext As String
Dim Amount As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long

    'DialoguePanel

   On Error GoTo errorhandler

    dX = DialoguePanelBounds.Left
    dY = DialoguePanelBounds.Top
    dw = DialoguePanelBounds.Right
    dH = DialoguePanelBounds.Bottom
    sx = DialoguePanelSrcBounds.Left
    sy = DialoguePanelSrcBounds.Top
    sW = DialoguePanelSrcBounds.Right
    sH = DialoguePanelSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If DialoguePanelImage.Texture > 0 Then
            RenderTexture DialoguePanelImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'DialogueTitle
        dX = DialogueTitleBounds.Left
        dY = DialogueTitleBounds.Top
        dw = DialogueTitleBounds.Right
        dH = DialogueTitleBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 > 0 Then
                dX = dX + ((dw / 2) - (EngineGetTextWidth(Font_Georgia, TrimText(Font_Georgia, Trim$(dialogueTitle), dw))) / 2)
                RenderText Font_Georgia, TrimText(Font_Georgia, Trim$(dialogueTitle), dw), dX + 2, dY + 2, FontColor
            End If
        End If
            'DialogueContent
        dX = DialogueContentBounds.Left
        dY = DialogueContentBounds.Top
        dw = DialogueContentBounds.Right
        dH = DialogueContentBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH / 14 > 0 Then
                temptext = WordWrap(dialogueText, dw - 4)
                temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
            End If
        End If
            If dialogueFunction = 1 Then
            'DialogueYesBtn
            dX = DialogueYesBtnBounds.Left
            dY = DialogueYesBtnBounds.Top
            dw = DialogueYesBtnBounds.Right
            dH = DialogueYesBtnBounds.Bottom
            sx = DialogueYesBtnSrcBounds.Left
            sy = DialogueYesBtnSrcBounds.Top
            sW = DialogueYesBtnSrcBounds.Right
            sH = DialogueYesBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If DialogueYesBtnState <> 2 Then
                            If DialogueYesBtnHoverImage.Texture > 0 Then
                                RenderTexture DialogueYesBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueYesBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueYesBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If DialogueYesBtnState = 2 Then
                            If DialogueYesBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueYesBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueYesBtnNormImage.Texture > 0 Then
                                RenderTexture DialogueYesBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If DialogueYesBtnState = 2 Then
                        If DialogueYesBtnClickImage.Texture > 0 Then
                            RenderTexture DialogueYesBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DialogueYesBtnNormImage.Texture > 0 Then
                            RenderTexture DialogueYesBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
                    'DialogueNoBtn
            dX = DialogueNoBtnBounds.Left
            dY = DialogueNoBtnBounds.Top
            dw = DialogueNoBtnBounds.Right
            dH = DialogueNoBtnBounds.Bottom
            sx = DialogueNoBtnSrcBounds.Left
            sy = DialogueNoBtnSrcBounds.Top
            sW = DialogueNoBtnSrcBounds.Right
            sH = DialogueNoBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If DialogueNoBtnState <> 2 Then
                            If DialogueNoBtnHoverImage.Texture > 0 Then
                                RenderTexture DialogueNoBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueNoBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueNoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If DialogueNoBtnState = 2 Then
                            If DialogueNoBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueNoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueNoBtnNormImage.Texture > 0 Then
                                RenderTexture DialogueNoBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If DialogueNoBtnState = 2 Then
                        If DialogueNoBtnClickImage.Texture > 0 Then
                            RenderTexture DialogueNoBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DialogueNoBtnNormImage.Texture > 0 Then
                            RenderTexture DialogueNoBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        Else
            'DialogueOkayBtn
            dX = DialogueOkayBtnBounds.Left
            dY = DialogueOkayBtnBounds.Top
            dw = DialogueOkayBtnBounds.Right
            dH = DialogueOkayBtnBounds.Bottom
            sx = DialogueOkayBtnSrcBounds.Left
            sy = DialogueOkayBtnSrcBounds.Top
            sW = DialogueOkayBtnSrcBounds.Right
            sH = DialogueOkayBtnSrcBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If GlobalX >= dX And GlobalX <= dX + dw Then
                    If GlobalY >= dY And GlobalY <= dY + dH Then
                        'Draw hoverImage
                        If DialogueOkayBtnState <> 2 Then
                            If DialogueOkayBtnHoverImage.Texture > 0 Then
                                RenderTexture DialogueOkayBtnHoverImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueOkayBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueOkayBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    Else
                        If DialogueOkayBtnState = 2 Then
                            If DialogueOkayBtnClickImage.Texture > 0 Then
                                RenderTexture DialogueOkayBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        Else
                            If DialogueOkayBtnNormImage.Texture > 0 Then
                                RenderTexture DialogueOkayBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                            End If
                        End If
                    End If
                Else
                    If DialogueOkayBtnState = 2 Then
                        If DialogueOkayBtnClickImage.Texture > 0 Then
                            RenderTexture DialogueOkayBtnClickImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    Else
                        If DialogueOkayBtnNormImage.Texture > 0 Then
                            RenderTexture DialogueOkayBtnNormImage, dX, dY, sx, sy, dw, dH, dw, dH
                        End If
                    End If
                End If
            End If
        End If
        End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawDialogueMenu", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Public Sub DrawEventChat()
Dim dX As Long, dY As Long, dw As Long, dH As Long, sx As Long, sy As Long, sW As Long, sH As Long
Dim tOffsetX As Long, tOffsetY As Long
Dim i As Long, X As Long, Y As Long, ItemNum As Long, itemPic As Long, srcRect As D3DRECT, destRect As D3DRECT, lineCount As Long
Dim startX As Long, maxScroll As Long, temptext As String
Dim Amount As Long
Dim rec As rect, rec_pos As rect
Dim colour As Long

    'EventPnl

   On Error GoTo errorhandler

    dX = EventPnlBounds.Left
    dY = EventPnlBounds.Top
    dw = EventPnlBounds.Right
    dH = EventPnlBounds.Bottom
    sx = EventPnlSrcBounds.Left
    sy = EventPnlSrcBounds.Top
    sW = EventPnlSrcBounds.Right
    sH = EventPnlSrcBounds.Bottom
    If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
        If EventPnlImage.Texture > 0 Then
            RenderTexture EventPnlImage, dX, dY, sx, sy, dw, sH, sW, sH
        End If
            'EventPrompt
        dX = EventPromptBounds.Left
        dY = EventPromptBounds.Top
        dw = EventPromptBounds.Right
        dH = EventPromptBounds.Bottom
        If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
            If dH > 80 And dw > 80 Then
                If EventChatFace > 0 Then
                    If EventChatFace < NumFaces Then
                        If Tex_Face(EventChatFace).filepath <> "" Then
                            If gTexture(Tex_Face(EventChatFace).Texture).IsLoaded = False Then LoadTexture1 Tex_Face(EventChatFace)
                            RenderTexture Tex_Face(EventChatFace), dX, dY, 0, 0, 80, 80, Tex_Face(EventChatFace).Width, Tex_Face(EventChatFace).Height
                            dX = dX + 80
                            dw = dw - 80
                        End If
                    End If
                End If
            End If
            If dH / 14 > 0 Then
                temptext = EventText
                temptext = WordWrap(temptext, dw - 4)
                temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
            End If
        End If
            If EventChatType = 1 Then
            If EventChoiceVisible(1) Then
                'Response1Lbl
                dX = Response1LblBounds.Left
                dY = Response1LblBounds.Top
                dw = Response1LblBounds.Right
                dH = Response1LblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                            temptext = EventChoices(1)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, Yellow
                        Else
                            temptext = EventChoices(1)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
                        End If
                    End If
                End If
            End If
                    If EventChoiceVisible(2) Then
                'Response2Lbl
                dX = Response2LblBounds.Left
                dY = Response2LblBounds.Top
                dw = Response2LblBounds.Right
                dH = Response2LblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                            temptext = EventChoices(2)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, Yellow
                        Else
                            temptext = EventChoices(2)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
                        End If
                    End If
                End If
            End If
                    If EventChoiceVisible(3) Then
                'Response3Lbl
                dX = Response3LblBounds.Left
                dY = Response3LblBounds.Top
                dw = Response3LblBounds.Right
                dH = Response3LblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                            temptext = EventChoices(3)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, Yellow
                        Else
                            temptext = EventChoices(3)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
                        End If
                    End If
                End If
            End If
                    If EventChoiceVisible(4) Then
                'Response4Lbl
                dX = Response4LblBounds.Left
                dY = Response4LblBounds.Top
                dw = Response4LblBounds.Right
                dH = Response4LblBounds.Bottom
                If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                    If dH / 14 > 0 Then
                        If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                            temptext = EventChoices(4)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, Yellow
                        Else
                            temptext = EventChoices(4)
                            temptext = WordWrap(temptext, dw - 4)
                            temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                            RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
                        End If
                    End If
                End If
            End If
        Else
            'EventContinueLbl
            dX = EventContinueLblBounds.Left
            dY = EventContinueLblBounds.Top
            dw = EventContinueLblBounds.Right
            dH = EventContinueLblBounds.Bottom
            If dw > 0 And dH > 0 And (dw + dX) > 0 And (dY + dH) > 0 Then
                If dH / 14 > 0 Then
                    If GlobalX >= dX And GlobalX <= dX + dw And GlobalY >= dY And GlobalY <= dY + dH Then
                        temptext = "Continue."
                        temptext = WordWrap(temptext, dw - 4)
                        temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                        RenderText Font_Georgia, temptext, dX + 2, dY + 2, Yellow
                    Else
                        temptext = "Continue."
                        temptext = WordWrap(temptext, dw - 4)
                        temptext = LimitTextLines(temptext, Fix(dH / 14), 0)
                        RenderText Font_Georgia, temptext, dX + 2, dY + 2, FontColor
                    End If
                End If
            End If
        End If
    End If




   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "DrawEventChat", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear

End Sub

Sub ResetNewChar()

   On Error GoTo errorhandler

    If NewCharSex = SEX_MALE Then
        NewCharHead = Class(newCharClass).MaleFaceParts.FHeads(0)
        NewCharEye = Class(newCharClass).MaleFaceParts.FEyes(0)
        NewCharHair = Class(newCharClass).MaleFaceParts.FHair(0)
        NewCharEyebrow = Class(newCharClass).MaleFaceParts.FEyebrows(0)
        NewCharMouth = Class(newCharClass).MaleFaceParts.FMouth(0)
        NewCharNose = Class(newCharClass).MaleFaceParts.FNose(0)
        NewCharShirt = Class(newCharClass).MaleFaceParts.FCloth(0)
        NewCharEtc = Class(newCharClass).MaleFaceParts.FEtc(0)
        NewCharEar = Class(newCharClass).MaleFaceParts.FEars(0)
        If CharMode = 2 Then
            NewCharHead = Class(newCharClass).MaleFaceParts.FFace(0)
        End If
    Else
        NewCharHead = Class(newCharClass).FemaleFaceParts.FHeads(0)
        NewCharEye = Class(newCharClass).FemaleFaceParts.FEyes(0)
        NewCharHair = Class(newCharClass).FemaleFaceParts.FHair(0)
        NewCharEyebrow = Class(newCharClass).FemaleFaceParts.FEyebrows(0)
        NewCharMouth = Class(newCharClass).FemaleFaceParts.FMouth(0)
        NewCharNose = Class(newCharClass).FemaleFaceParts.FNose(0)
        NewCharShirt = Class(newCharClass).FemaleFaceParts.FCloth(0)
        NewCharEtc = Class(newCharClass).FemaleFaceParts.FEtc(0)
        NewCharEar = Class(newCharClass).FemaleFaceParts.FEars(0)
        If CharMode = 2 Then
            NewCharHead = Class(newCharClass).FemaleFaceParts.FFace(0)
        End If
    End If


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "ResetNewChar", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub NewCharChange(Part As Long, dir As Long)
    Dim i As Long, X As Long, clsNum As Long, cnt As Long, curlist() As Integer, curItem As Long
    'Part List (Refer to form)
    '1 = Up, 2 = down

   On Error GoTo errorhandler

    clsNum = newCharClass
    Select Case Part
        Case 0 'Hair
            If NewCharSex = SEX_MALE Then
                If NewCharMaleHairCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FHair)
                            If Class(clsNum).MaleFaceParts.FHair(i) = NewCharHair Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FHair) Then
                                    NewCharHair = Class(clsNum).MaleFaceParts.FHair(0)
                                    Exit For
                                Else
                                    NewCharHair = Class(clsNum).MaleFaceParts.FHair(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FHair)
                            If Class(clsNum).MaleFaceParts.FHair(i) = NewCharHair Then
                                If i > 0 Then
                                    NewCharHair = Class(clsNum).MaleFaceParts.FHair(i - 1)
                                    Exit For
                                Else
                                    NewCharHair = Class(clsNum).MaleFaceParts.FHair(UBound(Class(clsNum).MaleFaceParts.FHair))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHair = 0
                End If
            Else
                If NewCharFemaleHairCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FHair)
                            If Class(clsNum).FemaleFaceParts.FHair(i) = NewCharHair Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FHair) Then
                                    NewCharHair = Class(clsNum).FemaleFaceParts.FHair(0)
                                    Exit For
                                Else
                                    NewCharHair = Class(clsNum).FemaleFaceParts.FHair(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FHair)
                            If Class(clsNum).FemaleFaceParts.FHair(i) = NewCharHair Then
                                If i > 0 Then
                                    NewCharHair = Class(clsNum).FemaleFaceParts.FHair(i - 1)
                                    Exit For
                                Else
                                    NewCharHair = Class(clsNum).FemaleFaceParts.FHair(UBound(Class(clsNum).FemaleFaceParts.FHair))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHair = 0
                End If
            End If
            Case 1
            If NewCharSex = SEX_MALE Then
                If NewCharMaleHeadCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FHeads)
                            If Class(clsNum).MaleFaceParts.FHeads(i) = NewCharHead Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FHeads) Then
                                    NewCharHead = Class(clsNum).MaleFaceParts.FHeads(0)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).MaleFaceParts.FHeads(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FHeads)
                            If Class(clsNum).MaleFaceParts.FHeads(i) = NewCharHead Then
                                If i > 0 Then
                                    NewCharHead = Class(clsNum).MaleFaceParts.FHeads(i - 1)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).MaleFaceParts.FHeads(UBound(Class(clsNum).MaleFaceParts.FHeads))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHead = 0
                End If
            Else
                If NewCharFemaleHeadCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FHeads)
                            If Class(clsNum).FemaleFaceParts.FHeads(i) = NewCharHead Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FHeads) Then
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FHeads(0)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FHeads(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FHeads)
                            If Class(clsNum).FemaleFaceParts.FHeads(i) = NewCharHead Then
                                If i > 0 Then
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FHeads(i - 1)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FHeads(UBound(Class(clsNum).FemaleFaceParts.FHeads))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHead = 0
                End If
            End If
        Case 2
            If NewCharSex = SEX_MALE Then
                If NewCharMaleEyebrowCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEyebrows)
                            If Class(clsNum).MaleFaceParts.FEyebrows(i) = NewCharEyebrow Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FEyebrows) Then
                                    NewCharEyebrow = Class(clsNum).MaleFaceParts.FEyebrows(0)
                                    Exit For
                                Else
                                    NewCharEyebrow = Class(clsNum).MaleFaceParts.FEyebrows(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEyebrows)
                            If Class(clsNum).MaleFaceParts.FEyebrows(i) = NewCharEyebrow Then
                                If i > 0 Then
                                    NewCharEyebrow = Class(clsNum).MaleFaceParts.FEyebrows(i - 1)
                                    Exit For
                                Else
                                    NewCharEyebrow = Class(clsNum).MaleFaceParts.FEyebrows(UBound(Class(clsNum).MaleFaceParts.FEyebrows))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEyebrow = 0
                End If
            Else
                If NewCharFemaleEyebrowCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEyebrows)
                            If Class(clsNum).FemaleFaceParts.FEyebrows(i) = NewCharEyebrow Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FEyebrows) Then
                                    NewCharEyebrow = Class(clsNum).FemaleFaceParts.FEyebrows(0)
                                    Exit For
                                Else
                                    NewCharEyebrow = Class(clsNum).FemaleFaceParts.FEyebrows(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEyebrows)
                            If Class(clsNum).FemaleFaceParts.FEyebrows(i) = NewCharEyebrow Then
                                If i > 0 Then
                                    NewCharEyebrow = Class(clsNum).FemaleFaceParts.FEyebrows(i - 1)
                                    Exit For
                                Else
                                    NewCharEyebrow = Class(clsNum).FemaleFaceParts.FEyebrows(UBound(Class(clsNum).FemaleFaceParts.FEyebrows))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEyebrow = 0
                End If
            End If
        Case 3
            If NewCharSex = SEX_MALE Then
                If NewCharMaleEyeCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEyes)
                            If Class(clsNum).MaleFaceParts.FEyes(i) = NewCharEye Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FEyes) Then
                                    NewCharEye = Class(clsNum).MaleFaceParts.FEyes(0)
                                    Exit For
                                Else
                                    NewCharEye = Class(clsNum).MaleFaceParts.FEyes(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEyes)
                            If Class(clsNum).MaleFaceParts.FEyes(i) = NewCharEye Then
                                If i > 0 Then
                                    NewCharEye = Class(clsNum).MaleFaceParts.FEyes(i - 1)
                                    Exit For
                                Else
                                    NewCharEye = Class(clsNum).MaleFaceParts.FEyes(UBound(Class(clsNum).MaleFaceParts.FEyes))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEye = 0
                End If
            Else
                If NewCharFemaleEyeCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEyes)
                            If Class(clsNum).FemaleFaceParts.FEyes(i) = NewCharEye Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FEyes) Then
                                    NewCharEye = Class(clsNum).FemaleFaceParts.FEyes(0)
                                    Exit For
                                Else
                                    NewCharEye = Class(clsNum).FemaleFaceParts.FEyes(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEyes)
                            If Class(clsNum).FemaleFaceParts.FEyes(i) = NewCharEye Then
                                If i > 0 Then
                                    NewCharEye = Class(clsNum).FemaleFaceParts.FEyes(i - 1)
                                    Exit For
                                Else
                                    NewCharEye = Class(clsNum).FemaleFaceParts.FEyes(UBound(Class(clsNum).FemaleFaceParts.FEyes))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEye = 0
                End If
            End If
        Case 4
            If NewCharSex = SEX_MALE Then
                If NewCharMaleEarCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEars)
                            If Class(clsNum).MaleFaceParts.FEars(i) = NewCharEar Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FEars) Then
                                    NewCharEar = Class(clsNum).MaleFaceParts.FEars(0)
                                    Exit For
                                Else
                                    NewCharEar = Class(clsNum).MaleFaceParts.FEars(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEars)
                            If Class(clsNum).MaleFaceParts.FEars(i) = NewCharEar Then
                                If i > 0 Then
                                    NewCharEar = Class(clsNum).MaleFaceParts.FEars(i - 1)
                                    Exit For
                                Else
                                    NewCharEar = Class(clsNum).MaleFaceParts.FEars(UBound(Class(clsNum).MaleFaceParts.FEars))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEar = 0
                End If
            Else
                If NewCharFemaleEarCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEars)
                            If Class(clsNum).FemaleFaceParts.FEars(i) = NewCharEar Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FEars) Then
                                    NewCharEar = Class(clsNum).FemaleFaceParts.FEars(0)
                                    Exit For
                                Else
                                    NewCharEar = Class(clsNum).FemaleFaceParts.FEars(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEars)
                            If Class(clsNum).FemaleFaceParts.FEars(i) = NewCharEar Then
                                If i > 0 Then
                                    NewCharEar = Class(clsNum).FemaleFaceParts.FEars(i - 1)
                                    Exit For
                                Else
                                    NewCharEar = Class(clsNum).FemaleFaceParts.FEars(UBound(Class(clsNum).FemaleFaceParts.FEars))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEar = 0
                End If
            End If
        Case 5
            If NewCharSex = SEX_MALE Then
                If NewCharMaleMouthCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FMouth)
                            If Class(clsNum).MaleFaceParts.FMouth(i) = NewCharMouth Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FMouth) Then
                                    NewCharMouth = Class(clsNum).MaleFaceParts.FMouth(0)
                                    Exit For
                                Else
                                    NewCharMouth = Class(clsNum).MaleFaceParts.FMouth(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FMouth)
                            If Class(clsNum).MaleFaceParts.FMouth(i) = NewCharMouth Then
                                If i > 0 Then
                                    NewCharMouth = Class(clsNum).MaleFaceParts.FMouth(i - 1)
                                    Exit For
                                Else
                                    NewCharMouth = Class(clsNum).MaleFaceParts.FMouth(UBound(Class(clsNum).MaleFaceParts.FMouth))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharMouth = 0
                End If
            Else
                If NewCharFemaleMouthCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FMouth)
                            If Class(clsNum).FemaleFaceParts.FMouth(i) = NewCharMouth Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FMouth) Then
                                    NewCharMouth = Class(clsNum).FemaleFaceParts.FMouth(0)
                                    Exit For
                                Else
                                    NewCharMouth = Class(clsNum).FemaleFaceParts.FMouth(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FMouth)
                            If Class(clsNum).FemaleFaceParts.FMouth(i) = NewCharMouth Then
                                If i > 0 Then
                                    NewCharMouth = Class(clsNum).FemaleFaceParts.FMouth(i - 1)
                                    Exit For
                                Else
                                    NewCharMouth = Class(clsNum).FemaleFaceParts.FMouth(UBound(Class(clsNum).FemaleFaceParts.FMouth))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharMouth = 0
                End If
            End If
        Case 6
            If NewCharSex = SEX_MALE Then
                If NewCharMaleNoseCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FNose)
                            If Class(clsNum).MaleFaceParts.FNose(i) = NewCharNose Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FNose) Then
                                    NewCharNose = Class(clsNum).MaleFaceParts.FNose(0)
                                    Exit For
                                Else
                                    NewCharNose = Class(clsNum).MaleFaceParts.FNose(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FNose)
                            If Class(clsNum).MaleFaceParts.FNose(i) = NewCharNose Then
                                If i > 0 Then
                                    NewCharNose = Class(clsNum).MaleFaceParts.FNose(i - 1)
                                    Exit For
                                Else
                                    NewCharNose = Class(clsNum).MaleFaceParts.FNose(UBound(Class(clsNum).MaleFaceParts.FNose))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharNose = 0
                End If
            Else
                If NewCharFemaleNoseCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FNose)
                            If Class(clsNum).FemaleFaceParts.FNose(i) = NewCharNose Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FNose) Then
                                    NewCharNose = Class(clsNum).FemaleFaceParts.FNose(0)
                                    Exit For
                                Else
                                    NewCharNose = Class(clsNum).FemaleFaceParts.FNose(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FNose)
                            If Class(clsNum).FemaleFaceParts.FNose(i) = NewCharNose Then
                                If i > 0 Then
                                    NewCharNose = Class(clsNum).FemaleFaceParts.FNose(i - 1)
                                    Exit For
                                Else
                                    NewCharNose = Class(clsNum).FemaleFaceParts.FNose(UBound(Class(clsNum).FemaleFaceParts.FNose))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharNose = 0
                End If
            End If
        Case 7
            If NewCharSex = SEX_MALE Then
                If NewCharMaleShirtCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FCloth)
                            If Class(clsNum).MaleFaceParts.FCloth(i) = NewCharShirt Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FCloth) Then
                                    NewCharShirt = Class(clsNum).MaleFaceParts.FCloth(0)
                                    Exit For
                                Else
                                    NewCharShirt = Class(clsNum).MaleFaceParts.FCloth(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FCloth)
                            If Class(clsNum).MaleFaceParts.FCloth(i) = NewCharShirt Then
                                If i > 0 Then
                                    NewCharShirt = Class(clsNum).MaleFaceParts.FCloth(i - 1)
                                    Exit For
                                Else
                                    NewCharShirt = Class(clsNum).MaleFaceParts.FCloth(UBound(Class(clsNum).MaleFaceParts.FCloth))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharShirt = 0
                End If
            Else
                If NewCharFemaleShirtCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FCloth)
                            If Class(clsNum).FemaleFaceParts.FCloth(i) = NewCharShirt Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FCloth) Then
                                    NewCharShirt = Class(clsNum).FemaleFaceParts.FCloth(0)
                                    Exit For
                                Else
                                    NewCharShirt = Class(clsNum).FemaleFaceParts.FCloth(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FCloth)
                            If Class(clsNum).FemaleFaceParts.FCloth(i) = NewCharShirt Then
                                If i > 0 Then
                                    NewCharShirt = Class(clsNum).FemaleFaceParts.FCloth(i - 1)
                                    Exit For
                                Else
                                    NewCharShirt = Class(clsNum).FemaleFaceParts.FCloth(UBound(Class(clsNum).FemaleFaceParts.FCloth))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharShirt = 0
                End If
            End If
        Case 8
            If NewCharSex = SEX_MALE Then
                If NewCharMaleEtcCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEtc)
                            If Class(clsNum).MaleFaceParts.FEtc(i) = NewCharEtc Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FEtc) Then
                                    NewCharEtc = Class(clsNum).MaleFaceParts.FEtc(0)
                                    Exit For
                                Else
                                    NewCharEtc = Class(clsNum).MaleFaceParts.FEtc(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FEtc)
                            If Class(clsNum).MaleFaceParts.FEtc(i) = NewCharEtc Then
                                If i > 0 Then
                                    NewCharEtc = Class(clsNum).MaleFaceParts.FEtc(i - 1)
                                    Exit For
                                Else
                                    NewCharEtc = Class(clsNum).MaleFaceParts.FEtc(UBound(Class(clsNum).MaleFaceParts.FEtc))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEtc = 0
                End If
            Else
                If NewCharFemaleEtcCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEtc)
                            If Class(clsNum).FemaleFaceParts.FEtc(i) = NewCharEtc Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FEtc) Then
                                    NewCharEtc = Class(clsNum).FemaleFaceParts.FEtc(0)
                                    Exit For
                                Else
                                    NewCharEtc = Class(clsNum).FemaleFaceParts.FEtc(i + 1)
                                    Exit For
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FEtc)
                            If Class(clsNum).FemaleFaceParts.FEtc(i) = NewCharEtc Then
                                If i > 0 Then
                                    NewCharEtc = Class(clsNum).FemaleFaceParts.FEtc(i - 1)
                                    Exit For
                                Else
                                    NewCharEtc = Class(clsNum).FemaleFaceParts.FEtc(UBound(Class(clsNum).FemaleFaceParts.FEtc))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharEtc = 0
                End If
            End If
        Case 9
            If NewCharSex = SEX_MALE Then
                If NewCharMaleFaceCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FFace)
                            If Class(clsNum).MaleFaceParts.FFace(i) = NewCharHead Then
                                If i = UBound(Class(clsNum).MaleFaceParts.FFace) Then
                                    NewCharHead = Class(clsNum).MaleFaceParts.FFace(0)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).MaleFaceParts.FFace(i + 1)
                                    Exit For
                                End If
                            Else
                                If i = UBound(Class(clsNum).MaleFaceParts.FFace) Then
                                    NewCharHead = Class(clsNum).MaleFaceParts.FFace(0)
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).MaleFaceParts.FFace)
                            If Class(clsNum).MaleFaceParts.FFace(i) = NewCharHead Then
                                If i > 0 Then
                                    NewCharHead = Class(clsNum).MaleFaceParts.FFace(i - 1)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).MaleFaceParts.FFace(UBound(Class(clsNum).MaleFaceParts.FFace))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHead = 0
                End If
            Else
                If NewCharFemaleFaceCount(clsNum) > 0 Then
                    If dir = 1 Then
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FFace)
                            If Class(clsNum).FemaleFaceParts.FFace(i) = NewCharHead Then
                                If i = UBound(Class(clsNum).FemaleFaceParts.FFace) Then
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FFace(0)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FFace(i + 1)
                                    Exit For
                                End If
                            Else
                                If i = UBound(Class(clsNum).FemaleFaceParts.FFace) Then
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FFace(0)
                                End If
                            End If
                        Next
                    Else
                        For i = 0 To UBound(Class(clsNum).FemaleFaceParts.FFace)
                            If Class(clsNum).FemaleFaceParts.FFace(i) = NewCharHead Then
                                If i > 0 Then
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FFace(i - 1)
                                    Exit For
                                Else
                                    NewCharHead = Class(clsNum).FemaleFaceParts.FFace(UBound(Class(clsNum).FemaleFaceParts.FFace))
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Else
                    NewCharHead = 0
                End If
            End If
        End Select


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "NewCharChange", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Sub SetupSilver(Optional loadingscreen As Boolean = False)
Dim i As Long

    On Error GoTo errorhandler
    ' loading screen (we need to initiate quickly so don't do a ton of extra work)
    If loadingscreen Then
      '  BBWidth = 800
       ' BBHeight = 640
        FontColor = 0
        If FontColor <> 15 Then frmLoad.lblStatus.ForeColor = &H0&
        
        If FileExist(App.path & GFX_PATH & "gui\" & "Loading.jpg", True) Then
            frmLoad.picLoad.Picture = LoadPicture(App.path & GFX_PATH & "gui\" & "Loading.jpg")
        End If
        
        frmLoad.Width = PixelsToTwips(498 + GetTitleWidth)
        frmLoad.Height = PixelsToTwips(169 + GetTitleHeight)
        frmLoad.picLoad.Width = 498
        frmLoad.picLoad.Height = 169
        frmLoad.lblStatus.Left = 0
        frmLoad.lblStatus.Top = 151
        frmLoad.lblStatus.Width = 498
        frmLoad.lblStatus.Height = 18
        
        MenuWidth = 800
        MenuHeight = 600
        
        'GameWindow
        'GameWindowWidth = 800
       ' GameWindowHeight = 640
       ' If MenuWidth > GameWindowWidth Then
       '     BBWidth = MenuWidth
       ' Else
       '     If GameWindowWidth > 0 Then BBWidth = GameWindowWidth
       ' End If
        'If MenuHeight > GameWindowHeight Then
        '    BBHeight = MenuHeight
        'Else
        '    If GameWindowHeight > 0 Then BBHeight = GameWindowHeight
        'End If
        DoEvents
        Exit Sub
    End If
    
    IntroType = 1
    If 1 > 0 Then
        ReDim IntroImages(1)
        For i = 1 To 1
            NumTextures = NumTextures + 1
            ReDim Preserve gTexture(NumTextures)
            IntroImages(i).filepath = App.path & GFX_PATH & "gui\" & "1" & ".png"
            IntroImages(i).Texture = NumTextures
        Next
    End If
        
    IntroFade = 1
    IntroSkip = 1
    IntroTimer = 2000
        
'Go ahead and load everything that is needed for the menu :/
MenuWidth = 800
MenuHeight = 600
If 2 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MenuImage.filepath = App.path & GFX_PATH & "gui\" & 2 & ".png"
    MenuImage.Texture = NumTextures
End If
        
GUIContainerX = 153
GUIContainerY = 205
GUIContainerWidth = 495
GUIContainerHeight = 332
If 3 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    GUIContainerImage.filepath = App.path & GFX_PATH & "gui\" & 3 & ".png"
    GUIContainerImage.Texture = NumTextures
End If


'OpenLogin
OpenLoginX = 54
OpenLoginY = 277
OpenLoginWidth = 90
OpenLoginHeight = 30
If 4 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenLoginNormImage.filepath = App.path & GFX_PATH & "gui\" & 4 & ".png"
    OpenLoginNormImage.Texture = NumTextures
End If
If 5 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenLoginClickImage.filepath = App.path & GFX_PATH & "gui\" & 5 & ".png"
    OpenLoginClickImage.Texture = NumTextures
End If
If 6 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenLoginHoverImage.filepath = App.path & GFX_PATH & "gui\" & 6 & ".png"
    OpenLoginHoverImage.Texture = NumTextures
End If


'OpenRegister
OpenRegisterX = 154
OpenRegisterY = 277
OpenRegisterWidth = 90
OpenRegisterHeight = 30
If 7 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenRegisterNormImage.filepath = App.path & GFX_PATH & "gui\" & 7 & ".png"
    OpenRegisterNormImage.Texture = NumTextures
End If
If 8 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenRegisterClickImage.filepath = App.path & GFX_PATH & "gui\" & 8 & ".png"
    OpenRegisterClickImage.Texture = NumTextures
End If
If 9 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenRegisterHoverImage.filepath = App.path & GFX_PATH & "gui\" & 9 & ".png"
    OpenRegisterHoverImage.Texture = NumTextures
End If


'OpenCredits
OpenCreditsX = 254
OpenCreditsY = 277
OpenCreditsWidth = 90
OpenCreditsHeight = 30
If 10 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenCreditsNormImage.filepath = App.path & GFX_PATH & "gui\" & 10 & ".png"
    OpenCreditsNormImage.Texture = NumTextures
End If
If 11 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenCreditsClickImage.filepath = App.path & GFX_PATH & "gui\" & 11 & ".png"
    OpenCreditsClickImage.Texture = NumTextures
End If
If 12 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OpenCreditsHoverImage.filepath = App.path & GFX_PATH & "gui\" & 12 & ".png"
    OpenCreditsHoverImage.Texture = NumTextures
End If


'ExitGame
ExitGameX = 354
ExitGameY = 277
ExitGameWidth = 90
ExitGameHeight = 30
If 13 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ExitGameNormImage.filepath = App.path & GFX_PATH & "gui\" & 13 & ".png"
    ExitGameNormImage.Texture = NumTextures
End If
If 14 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ExitGameClickImage.filepath = App.path & GFX_PATH & "gui\" & 14 & ".png"
    ExitGameClickImage.Texture = NumTextures
End If
If 15 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ExitGameHoverImage.filepath = App.path & GFX_PATH & "gui\" & 15 & ".png"
    ExitGameHoverImage.Texture = NumTextures
End If


'LoginPanel
LoginPanelX = 30
LoginPanelY = 34
LoginPanelWidth = 438
LoginPanelHeight = 213
If 16 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LoginPanelImage.filepath = App.path & GFX_PATH & "gui\" & 16 & ".png"
    LoginPanelImage.Texture = NumTextures
End If


'LUsername
LUsernameX = 160
LUsernameY = 66
LUsernameWidth = 246
LUsernameHeight = 18
If 17 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LUsernameImage.filepath = App.path & GFX_PATH & "gui\" & 17 & ".png"
    LUsernameImage.Texture = NumTextures
End If


'LPassword
LPasswordX = 160
LPasswordY = 89
LPasswordWidth = 246
LPasswordHeight = 18
If 18 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LPasswordImage.filepath = App.path & GFX_PATH & "gui\" & 18 & ".png"
    LPasswordImage.Texture = NumTextures
End If

'SaveInfoCheck
SaveInfoCheckX = 80
SaveInfoCheckY = 116
SaveInfoCheckWidth = 40
SaveInfoCheckHeight = 40
If 22 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SaveInfoCheckNormImage.filepath = App.path & GFX_PATH & "gui\" & 22 & ".png"
    SaveInfoCheckNormImage.Texture = NumTextures
End If
If 23 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SaveInfoCheckClickImage.filepath = App.path & GFX_PATH & "gui\" & 23 & ".png"
    SaveInfoCheckClickImage.Texture = NumTextures
End If


'LoginButton
LoginButtonX = 174
LoginButtonY = 163
LoginButtonWidth = 90
LoginButtonHeight = 30
If 19 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LoginButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 19 & ".png"
    LoginButtonNormImage.Texture = NumTextures
End If
If 20 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LoginButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 20 & ".png"
    LoginButtonClickImage.Texture = NumTextures
End If
If 21 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    LoginButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 21 & ".png"
    LoginButtonHoverImage.Texture = NumTextures
End If


'RegisterPanel
RegisterPanelX = 30
RegisterPanelY = 34
RegisterPanelWidth = 438
RegisterPanelHeight = 213
If 25 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RegisterPanelImage.filepath = App.path & GFX_PATH & "gui\" & 25 & ".png"
    RegisterPanelImage.Texture = NumTextures
End If


'RUsername
RUsernameX = 134
RUsernameY = 66
RUsernameWidth = 246
RUsernameHeight = 18
If 26 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RUsernameImage.filepath = App.path & GFX_PATH & "gui\" & 26 & ".png"
    RUsernameImage.Texture = NumTextures
End If


'RPassword
RPasswordX = 134
RPasswordY = 89
RPasswordWidth = 246
RPasswordHeight = 18
If 27 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RPasswordImage.filepath = App.path & GFX_PATH & "gui\" & 27 & ".png"
    RPasswordImage.Texture = NumTextures
End If


'RPassword2
RPassword2X = 134
RPassword2Y = 112
RPassword2Width = 246
RPassword2Height = 18
If 28 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RPassword2Image.filepath = App.path & GFX_PATH & "gui\" & 28 & ".png"
    RPassword2Image.Texture = NumTextures
End If


'RegisterButton
RegisterButtonX = 174
RegisterButtonY = 163
RegisterButtonWidth = 90
RegisterButtonHeight = 30
If 29 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RegisterButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 29 & ".png"
    RegisterButtonNormImage.Texture = NumTextures
End If
If 30 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RegisterButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 30 & ".png"
    RegisterButtonClickImage.Texture = NumTextures
End If
If 31 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    RegisterButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 31 & ".png"
    RegisterButtonHoverImage.Texture = NumTextures
End If


'NewsPanel
NewsPanelX = 30
NewsPanelY = 34
NewsPanelWidth = 438
NewsPanelHeight = 213
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NewsPanelImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    NewsPanelImage.Texture = NumTextures
End If


'CreditsPanel
CreditsPanelX = 30
CreditsPanelY = 34
CreditsPanelWidth = 438
CreditsPanelHeight = 213
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CreditsPanelImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CreditsPanelImage.Texture = NumTextures
End If


'NewCharPanel
NewCharPanelX = 30
NewCharPanelY = 34
NewCharPanelWidth = 438
NewCharPanelHeight = 213
If 32 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NewCharPanelImage.filepath = App.path & GFX_PATH & "gui\" & 32 & ".png"
    NewCharPanelImage.Texture = NumTextures
End If


'NCTextbox
NCTextboxX = 81
NCTextboxY = 10
NCTextboxWidth = 276
NCTextboxHeight = 18
If 33 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NCTextboxImage.filepath = App.path & GFX_PATH & "gui\" & 33 & ".png"
    NCTextboxImage.Texture = NumTextures
End If


'NCPreview
NCPreviewX = 81
NCPreviewY = 51
NCPreviewWidth = 128
NCPreviewHeight = 128


'PrevClass
PrevClassX = 81
PrevClassY = 34
PrevClassWidth = 9
PrevClassHeight = 9
If 34 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevClassNormImage.filepath = App.path & GFX_PATH & "gui\" & 34 & ".png"
    PrevClassNormImage.Texture = NumTextures
End If
If 35 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevClassClickImage.filepath = App.path & GFX_PATH & "gui\" & 35 & ".png"
    PrevClassClickImage.Texture = NumTextures
End If
If 36 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevClassHoverImage.filepath = App.path & GFX_PATH & "gui\" & 36 & ".png"
    PrevClassHoverImage.Texture = NumTextures
End If


'NextClass
NextClassX = 348
NextClassY = 34
NextClassWidth = 9
NextClassHeight = 9
If 37 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextClassNormImage.filepath = App.path & GFX_PATH & "gui\" & 37 & ".png"
    NextClassNormImage.Texture = NumTextures
End If
If 38 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextClassClickImage.filepath = App.path & GFX_PATH & "gui\" & 38 & ".png"
    NextClassClickImage.Texture = NumTextures
End If
If 39 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextClassHoverImage.filepath = App.path & GFX_PATH & "gui\" & 39 & ".png"
    NextClassHoverImage.Texture = NumTextures
End If


'NCClassName
NCClassNameX = 96
NCClassNameY = 31
NCClassNameWidth = 246
NCClassNameHeight = 17
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NCClassNameImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    NCClassNameImage.Texture = NumTextures
End If


'MaleButton
MaleButtonX = 215
MaleButtonY = 51
MaleButtonWidth = 68
MaleButtonHeight = 12
If 40 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MaleButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 40 & ".png"
    MaleButtonNormImage.Texture = NumTextures
End If
If 41 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MaleButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 41 & ".png"
    MaleButtonClickImage.Texture = NumTextures
End If
If 42 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MaleButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 42 & ".png"
    MaleButtonHoverImage.Texture = NumTextures
End If


'FemaleButton
FemaleButtonX = 289
FemaleButtonY = 51
FemaleButtonWidth = 68
FemaleButtonHeight = 12
If 43 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FemaleButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 43 & ".png"
    FemaleButtonNormImage.Texture = NumTextures
End If
If 44 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FemaleButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 44 & ".png"
    FemaleButtonClickImage.Texture = NumTextures
End If
If 45 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FemaleButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 45 & ".png"
    FemaleButtonHoverImage.Texture = NumTextures
End If


'NCAccept
NCAcceptX = 174
NCAcceptY = 180
NCAcceptWidth = 90
NCAcceptHeight = 30
If 46 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NCAcceptNormImage.filepath = App.path & GFX_PATH & "gui\" & 46 & ".png"
    NCAcceptNormImage.Texture = NumTextures
End If
If 47 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NCAcceptClickImage.filepath = App.path & GFX_PATH & "gui\" & 47 & ".png"
    NCAcceptClickImage.Texture = NumTextures
End If
If 48 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NCAcceptHoverImage.filepath = App.path & GFX_PATH & "gui\" & 48 & ".png"
    NCAcceptHoverImage.Texture = NumTextures
End If


'NextHair
NextHairX = 348
NextHairY = 66
NextHairWidth = 9
NextHairHeight = 9
If 49 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHairNormImage.filepath = App.path & GFX_PATH & "gui\" & 49 & ".png"
    NextHairNormImage.Texture = NumTextures
End If
If 50 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHairClickImage.filepath = App.path & GFX_PATH & "gui\" & 50 & ".png"
    NextHairClickImage.Texture = NumTextures
End If
If 51 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHairHoverImage.filepath = App.path & GFX_PATH & "gui\" & 51 & ".png"
    NextHairHoverImage.Texture = NumTextures
End If


'NextHead
NextHeadX = 348
NextHeadY = 79
NextHeadWidth = 9
NextHeadHeight = 9
If 52 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHeadNormImage.filepath = App.path & GFX_PATH & "gui\" & 52 & ".png"
    NextHeadNormImage.Texture = NumTextures
End If
If 53 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHeadClickImage.filepath = App.path & GFX_PATH & "gui\" & 53 & ".png"
    NextHeadClickImage.Texture = NumTextures
End If
If 54 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextHeadHoverImage.filepath = App.path & GFX_PATH & "gui\" & 54 & ".png"
    NextHeadHoverImage.Texture = NumTextures
End If


'NextEye
NextEyeX = 348
NextEyeY = 91
NextEyeWidth = 9
NextEyeHeight = 9
If 55 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyeNormImage.filepath = App.path & GFX_PATH & "gui\" & 55 & ".png"
    NextEyeNormImage.Texture = NumTextures
End If
If 56 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyeClickImage.filepath = App.path & GFX_PATH & "gui\" & 56 & ".png"
    NextEyeClickImage.Texture = NumTextures
End If
If 57 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyeHoverImage.filepath = App.path & GFX_PATH & "gui\" & 57 & ".png"
    NextEyeHoverImage.Texture = NumTextures
End If


'NextEyebrow
NextEyebrowX = 348
NextEyebrowY = 103
NextEyebrowWidth = 9
NextEyebrowHeight = 9
If 58 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyebrowNormImage.filepath = App.path & GFX_PATH & "gui\" & 58 & ".png"
    NextEyebrowNormImage.Texture = NumTextures
End If
If 59 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyebrowClickImage.filepath = App.path & GFX_PATH & "gui\" & 59 & ".png"
    NextEyebrowClickImage.Texture = NumTextures
End If
If 60 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEyebrowHoverImage.filepath = App.path & GFX_PATH & "gui\" & 60 & ".png"
    NextEyebrowHoverImage.Texture = NumTextures
End If


'NextEar
NextEarX = 348
NextEarY = 115
NextEarWidth = 9
NextEarHeight = 9
If 61 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEarNormImage.filepath = App.path & GFX_PATH & "gui\" & 61 & ".png"
    NextEarNormImage.Texture = NumTextures
End If
If 62 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEarClickImage.filepath = App.path & GFX_PATH & "gui\" & 62 & ".png"
    NextEarClickImage.Texture = NumTextures
End If
If 63 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextEarHoverImage.filepath = App.path & GFX_PATH & "gui\" & 63 & ".png"
    NextEarHoverImage.Texture = NumTextures
End If


'NextNose
NextNoseX = 348
NextNoseY = 127
NextNoseWidth = 9
NextNoseHeight = 9
If 64 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextNoseNormImage.filepath = App.path & GFX_PATH & "gui\" & 64 & ".png"
    NextNoseNormImage.Texture = NumTextures
End If
If 65 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextNoseClickImage.filepath = App.path & GFX_PATH & "gui\" & 65 & ".png"
    NextNoseClickImage.Texture = NumTextures
End If
If 66 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextNoseHoverImage.filepath = App.path & GFX_PATH & "gui\" & 66 & ".png"
    NextNoseHoverImage.Texture = NumTextures
End If


'NextMouth
NextMouthX = 348
NextMouthY = 139
NextMouthWidth = 9
NextMouthHeight = 9
If 67 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextMouthNormImage.filepath = App.path & GFX_PATH & "gui\" & 67 & ".png"
    NextMouthNormImage.Texture = NumTextures
End If
If 68 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextMouthClickImage.filepath = App.path & GFX_PATH & "gui\" & 68 & ".png"
    NextMouthClickImage.Texture = NumTextures
End If
If 69 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextMouthHoverImage.filepath = App.path & GFX_PATH & "gui\" & 69 & ".png"
    NextMouthHoverImage.Texture = NumTextures
End If


'NextShirt
NextShirtX = 348
NextShirtY = 151
NextShirtWidth = 9
NextShirtHeight = 9
If 70 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextShirtNormImage.filepath = App.path & GFX_PATH & "gui\" & 70 & ".png"
    NextShirtNormImage.Texture = NumTextures
End If
If 71 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextShirtClickImage.filepath = App.path & GFX_PATH & "gui\" & 71 & ".png"
    NextShirtClickImage.Texture = NumTextures
End If
If 72 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextShirtHoverImage.filepath = App.path & GFX_PATH & "gui\" & 72 & ".png"
    NextShirtHoverImage.Texture = NumTextures
End If


'NextExtra
NextExtraX = 348
NextExtraY = 163
NextExtraWidth = 9
NextExtraHeight = 9
If 73 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextExtraNormImage.filepath = App.path & GFX_PATH & "gui\" & 73 & ".png"
    NextExtraNormImage.Texture = NumTextures
End If
If 74 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextExtraClickImage.filepath = App.path & GFX_PATH & "gui\" & 74 & ".png"
    NextExtraClickImage.Texture = NumTextures
End If
If 75 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextExtraHoverImage.filepath = App.path & GFX_PATH & "gui\" & 75 & ".png"
    NextExtraHoverImage.Texture = NumTextures
End If


'PrevHair
PrevHairX = 215
PrevHairY = 66
PrevHairWidth = 9
PrevHairHeight = 9
If 76 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHairNormImage.filepath = App.path & GFX_PATH & "gui\" & 76 & ".png"
    PrevHairNormImage.Texture = NumTextures
End If
If 77 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHairClickImage.filepath = App.path & GFX_PATH & "gui\" & 77 & ".png"
    PrevHairClickImage.Texture = NumTextures
End If
If 78 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHairHoverImage.filepath = App.path & GFX_PATH & "gui\" & 78 & ".png"
    PrevHairHoverImage.Texture = NumTextures
End If


'PrevHead
PrevHeadX = 215
PrevHeadY = 79
PrevHeadWidth = 9
PrevHeadHeight = 9
If 79 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHeadNormImage.filepath = App.path & GFX_PATH & "gui\" & 79 & ".png"
    PrevHeadNormImage.Texture = NumTextures
End If
If 80 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHeadClickImage.filepath = App.path & GFX_PATH & "gui\" & 80 & ".png"
    PrevHeadClickImage.Texture = NumTextures
End If
If 81 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevHeadHoverImage.filepath = App.path & GFX_PATH & "gui\" & 81 & ".png"
    PrevHeadHoverImage.Texture = NumTextures
End If


'PrevEye
PrevEyeX = 215
PrevEyeY = 91
PrevEyeWidth = 9
PrevEyeHeight = 9
If 82 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyeNormImage.filepath = App.path & GFX_PATH & "gui\" & 82 & ".png"
    PrevEyeNormImage.Texture = NumTextures
End If
If 83 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyeClickImage.filepath = App.path & GFX_PATH & "gui\" & 83 & ".png"
    PrevEyeClickImage.Texture = NumTextures
End If
If 84 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyeHoverImage.filepath = App.path & GFX_PATH & "gui\" & 84 & ".png"
    PrevEyeHoverImage.Texture = NumTextures
End If


'PrevEyebrow
PrevEyebrowX = 215
PrevEyebrowY = 103
PrevEyebrowWidth = 9
PrevEyebrowHeight = 9
If 85 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyebrowNormImage.filepath = App.path & GFX_PATH & "gui\" & 85 & ".png"
    PrevEyebrowNormImage.Texture = NumTextures
End If
If 86 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyebrowClickImage.filepath = App.path & GFX_PATH & "gui\" & 86 & ".png"
    PrevEyebrowClickImage.Texture = NumTextures
End If
If 87 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEyebrowHoverImage.filepath = App.path & GFX_PATH & "gui\" & 87 & ".png"
    PrevEyebrowHoverImage.Texture = NumTextures
End If


'PrevEar
PrevEarX = 215
PrevEarY = 115
PrevEarWidth = 9
PrevEarHeight = 9
If 88 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEarNormImage.filepath = App.path & GFX_PATH & "gui\" & 88 & ".png"
    PrevEarNormImage.Texture = NumTextures
End If
If 89 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEarClickImage.filepath = App.path & GFX_PATH & "gui\" & 89 & ".png"
    PrevEarClickImage.Texture = NumTextures
End If
If 90 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevEarHoverImage.filepath = App.path & GFX_PATH & "gui\" & 90 & ".png"
    PrevEarHoverImage.Texture = NumTextures
End If


'PrevNose
PrevNoseX = 215
PrevNoseY = 127
PrevNoseWidth = 9
PrevNoseHeight = 9
If 91 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevNoseNormImage.filepath = App.path & GFX_PATH & "gui\" & 91 & ".png"
    PrevNoseNormImage.Texture = NumTextures
End If
If 92 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevNoseClickImage.filepath = App.path & GFX_PATH & "gui\" & 92 & ".png"
    PrevNoseClickImage.Texture = NumTextures
End If
If 93 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevNoseHoverImage.filepath = App.path & GFX_PATH & "gui\" & 93 & ".png"
    PrevNoseHoverImage.Texture = NumTextures
End If


'PrevMouth
PrevMouthX = 215
PrevMouthY = 139
PrevMouthWidth = 9
PrevMouthHeight = 9
If 94 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevMouthNormImage.filepath = App.path & GFX_PATH & "gui\" & 94 & ".png"
    PrevMouthNormImage.Texture = NumTextures
End If
If 95 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevMouthClickImage.filepath = App.path & GFX_PATH & "gui\" & 95 & ".png"
    PrevMouthClickImage.Texture = NumTextures
End If
If 96 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevMouthHoverImage.filepath = App.path & GFX_PATH & "gui\" & 96 & ".png"
    PrevMouthHoverImage.Texture = NumTextures
End If


'PrevShirt
PrevShirtX = 215
PrevShirtY = 151
PrevShirtWidth = 9
PrevShirtHeight = 9
If 97 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevShirtNormImage.filepath = App.path & GFX_PATH & "gui\" & 97 & ".png"
    PrevShirtNormImage.Texture = NumTextures
End If
If 98 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevShirtClickImage.filepath = App.path & GFX_PATH & "gui\" & 98 & ".png"
    PrevShirtClickImage.Texture = NumTextures
End If
If 99 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevShirtHoverImage.filepath = App.path & GFX_PATH & "gui\" & 99 & ".png"
    PrevShirtHoverImage.Texture = NumTextures
End If


'PrevExtra
PrevExtraX = 215
PrevExtraY = 163
PrevExtraWidth = 9
PrevExtraHeight = 9
If 100 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevExtraNormImage.filepath = App.path & GFX_PATH & "gui\" & 100 & ".png"
    PrevExtraNormImage.Texture = NumTextures
End If
If 101 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevExtraClickImage.filepath = App.path & GFX_PATH & "gui\" & 101 & ".png"
    PrevExtraClickImage.Texture = NumTextures
End If
If 102 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PrevExtraHoverImage.filepath = App.path & GFX_PATH & "gui\" & 102 & ".png"
    PrevExtraHoverImage.Texture = NumTextures
End If


'CharPanel
CharPanelX = 30
CharPanelY = 34
CharPanelWidth = 438
CharPanelHeight = 213
If 103 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CharPanelImage.filepath = App.path & GFX_PATH & "gui\" & 103 & ".png"
    CharPanelImage.Texture = NumTextures
End If


'NewCharButton
NewCharButtonX = 55
NewCharButtonY = 176
NewCharButtonWidth = 90
NewCharButtonHeight = 30
If 104 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NewCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 104 & ".png"
    NewCharButtonNormImage.Texture = NumTextures
End If
If 105 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NewCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 105 & ".png"
    NewCharButtonClickImage.Texture = NumTextures
End If
If 106 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NewCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 106 & ".png"
    NewCharButtonHoverImage.Texture = NumTextures
End If


'UseCharButton
UseCharButtonX = 174
UseCharButtonY = 176
UseCharButtonWidth = 90
UseCharButtonHeight = 30
If 107 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    UseCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 107 & ".png"
    UseCharButtonNormImage.Texture = NumTextures
End If
If 108 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    UseCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 108 & ".png"
    UseCharButtonClickImage.Texture = NumTextures
End If
If 109 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    UseCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 109 & ".png"
    UseCharButtonHoverImage.Texture = NumTextures
End If


'DelCharButton
DelCharButtonX = 293
DelCharButtonY = 176
DelCharButtonWidth = 90
DelCharButtonHeight = 30
If 110 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelCharButtonNormImage.filepath = App.path & GFX_PATH & "gui\" & 110 & ".png"
    DelCharButtonNormImage.Texture = NumTextures
End If
If 111 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelCharButtonClickImage.filepath = App.path & GFX_PATH & "gui\" & 111 & ".png"
    DelCharButtonClickImage.Texture = NumTextures
End If
If 112 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelCharButtonHoverImage.filepath = App.path & GFX_PATH & "gui\" & 112 & ".png"
    DelCharButtonHoverImage.Texture = NumTextures
End If


'CharPreview
CharPreviewX = 155
CharPreviewY = 44
CharPreviewWidth = 128
CharPreviewHeight = 128


'CharName
CharNameX = 114
CharNameY = 6
CharNameWidth = 210
CharNameHeight = 23


'CharClass
CharClassX = 114
CharClassY = 23
CharClassWidth = 210
CharClassHeight = 23


'NextChar
NextCharX = 289
NextCharY = 95
NextCharWidth = 9
NextCharHeight = 9
If 113 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextCharNormImage.filepath = App.path & GFX_PATH & "gui\" & 113 & ".png"
    NextCharNormImage.Texture = NumTextures
End If
If 114 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextCharClickImage.filepath = App.path & GFX_PATH & "gui\" & 114 & ".png"
    NextCharClickImage.Texture = NumTextures
End If
If 115 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    NextCharHoverImage.filepath = App.path & GFX_PATH & "gui\" & 115 & ".png"
    NextCharHoverImage.Texture = NumTextures
End If


'PrevChar
prevCharX = 140
prevCharY = 95
prevCharWidth = 9
prevCharHeight = 9
If 116 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    prevCharNormImage.filepath = App.path & GFX_PATH & "gui\" & 116 & ".png"
    prevCharNormImage.Texture = NumTextures
End If
If 117 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    prevCharClickImage.filepath = App.path & GFX_PATH & "gui\" & 117 & ".png"
    prevCharClickImage.Texture = NumTextures
End If
If 118 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    prevCharHoverImage.filepath = App.path & GFX_PATH & "gui\" & 118 & ".png"
    prevCharHoverImage.Texture = NumTextures
End If


'GameScreen
GameScreenX = 0
GameScreenY = 0
'GameScreenWidth = 800
'GameScreenHeight = 640


'ChatboxPnl
ChatboxPnlX = 10
ChatboxPnlY = 474
ChatboxPnlWidth = 432
ChatboxPnlHeight = 162
If 119 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & 119 & ".png"
    ChatboxPnlImage.Texture = NumTextures
End If


'Chatbox
ChatboxX = 14
ChatboxY = 12
ChatboxWidth = 381
ChatboxHeight = 117


'MyText
MyTextX = 48
MyTextY = 137
MyTextWidth = 371
MyTextHeight = 15


'ChatUpBtn
ChatUpBtnX = 401
ChatUpBtnY = 12
ChatUpBtnWidth = 19
ChatUpBtnHeight = 19
If 120 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 120 & ".png"
    ChatUpBtnNormImage.Texture = NumTextures
End If
If 121 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 121 & ".png"
    ChatUpBtnClickImage.Texture = NumTextures
End If
If 122 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 122 & ".png"
    ChatUpBtnHoverImage.Texture = NumTextures
End If


'ChatDownBtn
ChatDownBtnX = 401
ChatDownBtnY = 110
ChatDownBtnWidth = 19
ChatDownBtnHeight = 19
If 123 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 123 & ".png"
    ChatDownBtnNormImage.Texture = NumTextures
End If
If 124 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 124 & ".png"
    ChatDownBtnClickImage.Texture = NumTextures
End If
If 125 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ChatDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 125 & ".png"
    ChatDownBtnHoverImage.Texture = NumTextures
End If


'GameMenuPanel
GameMenuPanelX = 558
GameMenuPanelY = 526
GameMenuPanelWidth = 232
GameMenuPanelHeight = 110
If 126 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    GameMenuPanelImage.filepath = App.path & GFX_PATH & "gui\" & 126 & ".png"
    GameMenuPanelImage.Texture = NumTextures
End If


'InventoryBtn
InventoryBtnX = 6
InventoryBtnY = 6
InventoryBtnWidth = 69
InventoryBtnHeight = 29
If 127 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    InventoryBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 127 & ".png"
    InventoryBtnNormImage.Texture = NumTextures
End If
If 128 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    InventoryBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 128 & ".png"
    InventoryBtnClickImage.Texture = NumTextures
End If
If 129 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    InventoryBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 129 & ".png"
    InventoryBtnHoverImage.Texture = NumTextures
End If


'SkillsBtn
SkillsBtnX = 81
SkillsBtnY = 6
SkillsBtnWidth = 69
SkillsBtnHeight = 29
If 130 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SkillsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 130 & ".png"
    SkillsBtnNormImage.Texture = NumTextures
End If
If 131 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SkillsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 131 & ".png"
    SkillsBtnClickImage.Texture = NumTextures
End If
If 132 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SkillsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 132 & ".png"
    SkillsBtnHoverImage.Texture = NumTextures
End If


'CharacterBtn
CharacterBtnX = 156
CharacterBtnY = 6
CharacterBtnWidth = 69
CharacterBtnHeight = 29
If 133 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CharacterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 133 & ".png"
    CharacterBtnNormImage.Texture = NumTextures
End If
If 134 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CharacterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 134 & ".png"
    CharacterBtnClickImage.Texture = NumTextures
End If
If 135 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CharacterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 135 & ".png"
    CharacterBtnHoverImage.Texture = NumTextures
End If


'OptionsBtn
OptionsBtnX = 6
OptionsBtnY = 41
OptionsBtnWidth = 69
OptionsBtnHeight = 29
If 136 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OptionsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 136 & ".png"
    OptionsBtnNormImage.Texture = NumTextures
End If
If 137 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OptionsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 137 & ".png"
    OptionsBtnClickImage.Texture = NumTextures
End If
If 138 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OptionsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 138 & ".png"
    OptionsBtnHoverImage.Texture = NumTextures
End If


'TradeBtn
TradeBtnX = 81
TradeBtnY = 41
TradeBtnWidth = 69
TradeBtnHeight = 29
If 139 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 139 & ".png"
    TradeBtnNormImage.Texture = NumTextures
End If
If 140 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 140 & ".png"
    TradeBtnClickImage.Texture = NumTextures
End If
If 141 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 141 & ".png"
    TradeBtnHoverImage.Texture = NumTextures
End If


'PartyBtn
PartyBtnX = 156
PartyBtnY = 41
PartyBtnWidth = 69
PartyBtnHeight = 29
If 142 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 142 & ".png"
    PartyBtnNormImage.Texture = NumTextures
End If
If 143 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 143 & ".png"
    PartyBtnClickImage.Texture = NumTextures
End If
If 144 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 144 & ".png"
    PartyBtnHoverImage.Texture = NumTextures
End If


'FriendsBtn
FriendsBtnX = 6
FriendsBtnY = 76
FriendsBtnWidth = 69
FriendsBtnHeight = 29
If 145 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 145 & ".png"
    FriendsBtnNormImage.Texture = NumTextures
End If
If 146 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 146 & ".png"
    FriendsBtnClickImage.Texture = NumTextures
End If
If 147 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 147 & ".png"
    FriendsBtnHoverImage.Texture = NumTextures
End If


'QuestsBtn
QuestsBtnX = 81
QuestsBtnY = 76
QuestsBtnWidth = 69
QuestsBtnHeight = 29
If 148 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 148 & ".png"
    QuestsBtnNormImage.Texture = NumTextures
End If
If 149 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 149 & ".png"
    QuestsBtnClickImage.Texture = NumTextures
End If
If 150 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 150 & ".png"
    QuestsBtnHoverImage.Texture = NumTextures
End If


'GUIBarsPanel
GUIBarsPanelX = 10
GUIBarsPanelY = 10
GUIBarsPanelWidth = 254
GUIBarsPanelHeight = 75
If 151 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    GUIBarsPanelImage.filepath = App.path & GFX_PATH & "gui\" & 151 & ".png"
    GUIBarsPanelImage.Texture = NumTextures
End If


'HealthBar
HealthBarX = 7
HealthBarY = 9
HealthBarWidth = 241
HealthBarHeight = 16
If 152 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    HealthBarImage.filepath = App.path & GFX_PATH & "gui\" & 152 & ".png"
    HealthBarImage.Texture = NumTextures
End If


'ManaBar
ManaBarX = 7
ManaBarY = 31
ManaBarWidth = 241
ManaBarHeight = 16
If 153 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ManaBarImage.filepath = App.path & GFX_PATH & "gui\" & 153 & ".png"
    ManaBarImage.Texture = NumTextures
End If


'ExpBar
ExpBarX = 7
ExpBarY = 53
ExpBarWidth = 241
ExpBarHeight = 16
If 154 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ExpBarImage.filepath = App.path & GFX_PATH & "gui\" & 154 & ".png"
    ExpBarImage.Texture = NumTextures
End If


'HotbarPnl
HotbarPnlX = 303
HotbarPnlY = 10
HotbarPnlWidth = 487
HotbarPnlHeight = 36
If 155 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    HotbarPnlImage.filepath = App.path & GFX_PATH & "gui\" & 155 & ".png"
    HotbarPnlImage.Texture = NumTextures
End If


'HotbarIcon1
HotbarIcon1X = 2
HotbarIcon1Y = 2
HotbarIcon1Width = 32
HotbarIcon1Height = 32


'HotbarIcon2
HotbarIcon2X = 43
HotbarIcon2Y = 2
HotbarIcon2Width = 32
HotbarIcon2Height = 32


'HotbarIcon3
HotbarIcon3X = 84
HotbarIcon3Y = 2
HotbarIcon3Width = 32
HotbarIcon3Height = 32


'HotbarIcon4
HotbarIcon4X = 125
HotbarIcon4Y = 2
HotbarIcon4Width = 32
HotbarIcon4Height = 32


'HotbarIcon5
HotbarIcon5X = 166
HotbarIcon5Y = 2
HotbarIcon5Width = 32
HotbarIcon5Height = 32


'HotbarIcon6
HotbarIcon6X = 207
HotbarIcon6Y = 2
HotbarIcon6Width = 32
HotbarIcon6Height = 32


'HotbarIcon7
HotbarIcon7X = 248
HotbarIcon7Y = 2
HotbarIcon7Width = 32
HotbarIcon7Height = 32


'HotbarIcon8
HotbarIcon8X = 289
HotbarIcon8Y = 2
HotbarIcon8Width = 32
HotbarIcon8Height = 32


'HotbarIcon9
HotbarIcon9X = 330
HotbarIcon9Y = 2
HotbarIcon9Width = 32
HotbarIcon9Height = 32


'HotbarIcon10
HotbarIcon10X = 371
HotbarIcon10Y = 2
HotbarIcon10Width = 32
HotbarIcon10Height = 32


'HotbarIcon11
HotbarIcon11X = 412
HotbarIcon11Y = 2
HotbarIcon11Width = 32
HotbarIcon11Height = 32


'HotbarIcon12
HotbarIcon12X = 453
HotbarIcon12Y = 2
HotbarIcon12Width = 32
HotbarIcon12Height = 32


'InventoryPnl
InventoryPnlX = 578
InventoryPnlY = 266
InventoryPnlWidth = 195
InventoryPnlHeight = 250
If 156 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    InventoryPnlImage.filepath = App.path & GFX_PATH & "gui\" & 156 & ".png"
    InventoryPnlImage.Texture = NumTextures
End If


'InvItems
InvItemsX = 5
InvItemsY = 5
InvItemsWidth = 185
InvItemsHeight = 240


'CloseInvBtn
CloseInvBtnX = 196
CloseInvBtnY = 251
CloseInvBtnWidth = 19
CloseInvBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInvBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseInvBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInvBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseInvBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInvBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseInvBtnHoverImage.Texture = NumTextures
End If


'SpellsPnl
SpellsPnlX = 578
SpellsPnlY = 266
SpellsPnlWidth = 195
SpellsPnlHeight = 250
If 157 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SpellsPnlImage.filepath = App.path & GFX_PATH & "gui\" & 157 & ".png"
    SpellsPnlImage.Texture = NumTextures
End If


'SpellIcons
SpellIconsX = 5
SpellIconsY = 5
SpellIconsWidth = 185
SpellIconsHeight = 240


'CloseSpellsBtn
CloseSpellsBtnX = 196
CloseSpellsBtnY = 251
CloseSpellsBtnWidth = 19
CloseSpellsBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseSpellsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseSpellsBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseSpellsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseSpellsBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseSpellsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseSpellsBtnHoverImage.Texture = NumTextures
End If


'CharacterPnl
CharacterPnlX = 578
CharacterPnlY = 266
CharacterPnlWidth = 195
CharacterPnlHeight = 250
If 158 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CharacterPnlImage.filepath = App.path & GFX_PATH & "gui\" & 158 & ".png"
    CharacterPnlImage.Texture = NumTextures
End If


'PlayerNameLbl
PlayerNameLblX = 7
PlayerNameLblY = 8
PlayerNameLblWidth = 181
PlayerNameLblHeight = 17


'CharacterFace
CharacterFaceX = 49
CharacterFaceY = 38
CharacterFaceWidth = 96
CharacterFaceHeight = 96


'StrengthLbl
StrengthLblX = 20
StrengthLblY = 145
StrengthLblWidth = 64
StrengthLblHeight = 16


'EnduranceLbl
EnduranceLblX = 20
EnduranceLblY = 160
EnduranceLblWidth = 64
EnduranceLblHeight = 16


'IntelligenceLbl
IntelligenceLblX = 20
IntelligenceLblY = 175
IntelligenceLblWidth = 64
IntelligenceLblHeight = 16


'AgilityLbl
AgilityLblX = 100
AgilityLblY = 145
AgilityLblWidth = 64
AgilityLblHeight = 16


'WillpowerLbl
WillpowerLblX = 100
WillpowerLblY = 160
WillpowerLblWidth = 64
WillpowerLblHeight = 16


'PointsLbl
PointsLblX = 100
PointsLblY = 175
PointsLblWidth = 64
PointsLblHeight = 16


'AddStrengthBtn
AddStrengthBtnX = 85
AddStrengthBtnY = 149
AddStrengthBtnWidth = 12
AddStrengthBtnHeight = 11
If 159 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddStrengthBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 159 & ".png"
    AddStrengthBtnNormImage.Texture = NumTextures
End If
If 160 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddStrengthBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 160 & ".png"
    AddStrengthBtnClickImage.Texture = NumTextures
End If
If 161 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddStrengthBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 161 & ".png"
    AddStrengthBtnHoverImage.Texture = NumTextures
End If


'AddEnduranceBtn
AddEnduranceBtnX = 85
AddEnduranceBtnY = 162
AddEnduranceBtnWidth = 12
AddEnduranceBtnHeight = 11
If 162 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddEnduranceBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 162 & ".png"
    AddEnduranceBtnNormImage.Texture = NumTextures
End If
If 163 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddEnduranceBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 163 & ".png"
    AddEnduranceBtnClickImage.Texture = NumTextures
End If
If 164 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddEnduranceBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 164 & ".png"
    AddEnduranceBtnHoverImage.Texture = NumTextures
End If


'AddIntelligenceBtn
AddIntelligenceBtnX = 85
AddIntelligenceBtnY = 177
AddIntelligenceBtnWidth = 12
AddIntelligenceBtnHeight = 11
If 165 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddIntelligenceBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 165 & ".png"
    AddIntelligenceBtnNormImage.Texture = NumTextures
End If
If 166 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddIntelligenceBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 166 & ".png"
    AddIntelligenceBtnClickImage.Texture = NumTextures
End If
If 167 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddIntelligenceBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 167 & ".png"
    AddIntelligenceBtnHoverImage.Texture = NumTextures
End If


'AddAgilityBtn
AddAgilityBtnX = 166
AddAgilityBtnY = 149
AddAgilityBtnWidth = 12
AddAgilityBtnHeight = 11
If 168 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddAgilityBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 168 & ".png"
    AddAgilityBtnNormImage.Texture = NumTextures
End If
If 169 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddAgilityBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 169 & ".png"
    AddAgilityBtnClickImage.Texture = NumTextures
End If
If 170 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddAgilityBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 170 & ".png"
    AddAgilityBtnHoverImage.Texture = NumTextures
End If


'AddWillpowerBtn
AddWillpowerBtnX = 166
AddWillpowerBtnY = 162
AddWillpowerBtnWidth = 12
AddWillpowerBtnHeight = 11
If 171 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddWillpowerBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 171 & ".png"
    AddWillpowerBtnNormImage.Texture = NumTextures
End If
If 172 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddWillpowerBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 172 & ".png"
    AddWillpowerBtnClickImage.Texture = NumTextures
End If
If 173 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddWillpowerBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 173 & ".png"
    AddWillpowerBtnHoverImage.Texture = NumTextures
End If


'PlayerWeaponSlot
PlayerWeaponSlotX = 18
PlayerWeaponSlotY = 202
PlayerWeaponSlotWidth = 32
PlayerWeaponSlotHeight = 32
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PlayerWeaponSlotImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    PlayerWeaponSlotImage.Texture = NumTextures
End If


'PlayerArmorSlot
PlayerArmorSlotX = 60
PlayerArmorSlotY = 202
PlayerArmorSlotWidth = 32
PlayerArmorSlotHeight = 32
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PlayerArmorSlotImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    PlayerArmorSlotImage.Texture = NumTextures
End If


'PlayerHelmetSlot
PlayerHelmetSlotX = 102
PlayerHelmetSlotY = 202
PlayerHelmetSlotWidth = 32
PlayerHelmetSlotHeight = 32
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PlayerHelmetSlotImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    PlayerHelmetSlotImage.Texture = NumTextures
End If


'PlayerShieldSlot
PlayerShieldSlotX = 144
PlayerShieldSlotY = 202
PlayerShieldSlotWidth = 32
PlayerShieldSlotHeight = 32
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PlayerShieldSlotImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    PlayerShieldSlotImage.Texture = NumTextures
End If


'CloseCharacterBtn
CloseCharacterBtnX = 196
CloseCharacterBtnY = 251
CloseCharacterBtnWidth = 19
CloseCharacterBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseCharacterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseCharacterBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseCharacterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseCharacterBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseCharacterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseCharacterBtnHoverImage.Texture = NumTextures
End If


'OptionsPnl
OptionsPnlX = 578
OptionsPnlY = 266
OptionsPnlWidth = 195
OptionsPnlHeight = 250
If 174 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    OptionsPnlImage.filepath = App.path & GFX_PATH & "gui\" & 174 & ".png"
    OptionsPnlImage.Texture = NumTextures
End If


'MusicOnBtn
MusicOnBtnX = 77
MusicOnBtnY = 14
MusicOnBtnWidth = 49
MusicOnBtnHeight = 19
If 175 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 175 & ".png"
    MusicOnBtnNormImage.Texture = NumTextures
End If
If 176 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 176 & ".png"
    MusicOnBtnClickImage.Texture = NumTextures
End If
If 177 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 177 & ".png"
    MusicOnBtnHoverImage.Texture = NumTextures
End If


'MusicOffBtn
MusicOffBtnX = 132
MusicOffBtnY = 14
MusicOffBtnWidth = 49
MusicOffBtnHeight = 19
If 178 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 178 & ".png"
    MusicOffBtnNormImage.Texture = NumTextures
End If
If 179 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 179 & ".png"
    MusicOffBtnClickImage.Texture = NumTextures
End If
If 180 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MusicOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 180 & ".png"
    MusicOffBtnHoverImage.Texture = NumTextures
End If


'SoundOnBtn
SoundOnBtnX = 77
SoundOnBtnY = 39
SoundOnBtnWidth = 49
SoundOnBtnHeight = 19
If 181 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 181 & ".png"
    SoundOnBtnNormImage.Texture = NumTextures
End If
If 182 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 182 & ".png"
    SoundOnBtnClickImage.Texture = NumTextures
End If
If 183 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 183 & ".png"
    SoundOnBtnHoverImage.Texture = NumTextures
End If


'SoundOffBtn
SoundOffBtnX = 132
SoundOffBtnY = 39
SoundOffBtnWidth = 49
SoundOffBtnHeight = 19
If 184 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 184 & ".png"
    SoundOffBtnNormImage.Texture = NumTextures
End If
If 185 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 185 & ".png"
    SoundOffBtnClickImage.Texture = NumTextures
End If
If 186 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SoundOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 186 & ".png"
    SoundOffBtnHoverImage.Texture = NumTextures
End If


'FullScreenOnBtn
FullScreenOnBtnX = 77
FullScreenOnBtnY = 64
FullScreenOnBtnWidth = 49
FullScreenOnBtnHeight = 19
If 187 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOnBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 187 & ".png"
    FullScreenOnBtnNormImage.Texture = NumTextures
End If
If 188 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOnBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 188 & ".png"
    FullScreenOnBtnClickImage.Texture = NumTextures
End If
If 189 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOnBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 189 & ".png"
    FullScreenOnBtnHoverImage.Texture = NumTextures
End If


'FullScreenOffBtn
FullScreenOffBtnX = 132
FullScreenOffBtnY = 64
FullScreenOffBtnWidth = 49
FullScreenOffBtnHeight = 19
If 190 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOffBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 190 & ".png"
    FullScreenOffBtnNormImage.Texture = NumTextures
End If
If 191 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOffBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 191 & ".png"
    FullScreenOffBtnClickImage.Texture = NumTextures
End If
If 192 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FullScreenOffBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 192 & ".png"
    FullScreenOffBtnHoverImage.Texture = NumTextures
End If


'CloseOptionsBtn
CloseOptionsBtnX = 196
CloseOptionsBtnY = 251
CloseOptionsBtnWidth = 19
CloseOptionsBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseOptionsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseOptionsBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseOptionsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseOptionsBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseOptionsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseOptionsBtnHoverImage.Texture = NumTextures
End If


'PartyPnl
PartyPnlX = 578
PartyPnlY = 266
PartyPnlWidth = 195
PartyPnlHeight = 250
If 193 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyPnlImage.filepath = App.path & GFX_PATH & "gui\" & 193 & ".png"
    PartyPnlImage.Texture = NumTextures
End If


'PartyLeaderName
PartyLeaderNameX = 7
PartyLeaderNameY = 12
PartyLeaderNameWidth = 180
PartyLeaderNameHeight = 17


'PartyLeaderHPBar
PartyLeaderHPBarX = 6
PartyLeaderHPBarY = 29
PartyLeaderHPBarWidth = 182
PartyLeaderHPBarHeight = 9
If 194 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyLeaderHPBarImage.filepath = App.path & GFX_PATH & "gui\" & 194 & ".png"
    PartyLeaderHPBarImage.Texture = NumTextures
End If


'PartyLeaderMPBar
PartyLeaderMPBarX = 6
PartyLeaderMPBarY = 38
PartyLeaderMPBarWidth = 182
PartyLeaderMPBarHeight = 9
If 195 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyLeaderMPBarImage.filepath = App.path & GFX_PATH & "gui\" & 195 & ".png"
    PartyLeaderMPBarImage.Texture = NumTextures
End If


'PartyMember1Name
PartyMember1NameX = 7
PartyMember1NameY = 61
PartyMember1NameWidth = 180
PartyMember1NameHeight = 17


'PartyMember1HPBar
PartyMember1HPBarX = 6
PartyMember1HPBarY = 78
PartyMember1HPBarWidth = 182
PartyMember1HPBarHeight = 9
If 196 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember1HPBarImage.filepath = App.path & GFX_PATH & "gui\" & 196 & ".png"
    PartyMember1HPBarImage.Texture = NumTextures
End If


'PartyMember1MPBar
PartyMember1MPBarX = 6
PartyMember1MPBarY = 87
PartyMember1MPBarWidth = 182
PartyMember1MPBarHeight = 9
If 197 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember1MPBarImage.filepath = App.path & GFX_PATH & "gui\" & 197 & ".png"
    PartyMember1MPBarImage.Texture = NumTextures
End If


'PartyMember2Name
PartyMember2NameX = 7
PartyMember2NameY = 110
PartyMember2NameWidth = 180
PartyMember2NameHeight = 17


'PartyMember2HPBar
PartyMember2HPBarX = 6
PartyMember2HPBarY = 127
PartyMember2HPBarWidth = 182
PartyMember2HPBarHeight = 9
If 198 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember2HPBarImage.filepath = App.path & GFX_PATH & "gui\" & 198 & ".png"
    PartyMember2HPBarImage.Texture = NumTextures
End If


'PartyMember2MPBar
PartyMember2MPBarX = 6
PartyMember2MPBarY = 136
PartyMember2MPBarWidth = 182
PartyMember2MPBarHeight = 9
If 199 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember2MPBarImage.filepath = App.path & GFX_PATH & "gui\" & 199 & ".png"
    PartyMember2MPBarImage.Texture = NumTextures
End If


'PartyMember3Name
PartyMember3NameX = 7
PartyMember3NameY = 159
PartyMember3NameWidth = 180
PartyMember3NameHeight = 17


'PartyMember3HPBar
PartyMember3HPBarX = 6
PartyMember3HPBarY = 176
PartyMember3HPBarWidth = 182
PartyMember3HPBarHeight = 9
If 200 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember3HPBarImage.filepath = App.path & GFX_PATH & "gui\" & 200 & ".png"
    PartyMember3HPBarImage.Texture = NumTextures
End If


'PartyMember3MPBar
PartyMember3MPBarX = 6
PartyMember3MPBarY = 185
PartyMember3MPBarWidth = 182
PartyMember3MPBarHeight = 9
If 201 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyMember3MPBarImage.filepath = App.path & GFX_PATH & "gui\" & 201 & ".png"
    PartyMember3MPBarImage.Texture = NumTextures
End If

'PartyInviteBtn
PartyInviteBtnX = 6
PartyInviteBtnY = 209
PartyInviteBtnWidth = 89
PartyInviteBtnHeight = 29
If 202 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyInviteBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 202 & ".png"
    PartyInviteBtnNormImage.Texture = NumTextures
End If
If 203 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyInviteBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 203 & ".png"
    PartyInviteBtnClickImage.Texture = NumTextures
End If
If 204 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyInviteBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 204 & ".png"
    PartyInviteBtnHoverImage.Texture = NumTextures
End If

'PartyLeaveBtn
PartyLeaveBtnX = 100
PartyLeaveBtnY = 209
PartyLeaveBtnWidth = 89
PartyLeaveBtnHeight = 29
If 205 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyLeaveBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 205 & ".png"
    PartyLeaveBtnNormImage.Texture = NumTextures
End If
If 206 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyLeaveBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 206 & ".png"
    PartyLeaveBtnClickImage.Texture = NumTextures
End If
If 207 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PartyLeaveBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 207 & ".png"
    PartyLeaveBtnHoverImage.Texture = NumTextures
End If


'ClosePartyBtn
ClosePartyBtnX = 196
ClosePartyBtnY = 251
ClosePartyBtnWidth = 19
ClosePartyBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ClosePartyBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    ClosePartyBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ClosePartyBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    ClosePartyBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ClosePartyBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    ClosePartyBtnHoverImage.Texture = NumTextures
End If


'FriendsPnl
FriendsPnlX = 578
FriendsPnlY = 266
FriendsPnlWidth = 195
FriendsPnlHeight = 250
If 208 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsPnlImage.filepath = App.path & GFX_PATH & "gui\" & 208 & ".png"
    FriendsPnlImage.Texture = NumTextures
End If


'FriendsList
FriendsListX = 16
FriendsListY = 40
FriendsListWidth = 137
FriendsListHeight = 162


'FriendsUpBtn
FriendsUpBtnX = 160
FriendsUpBtnY = 40
FriendsUpBtnWidth = 19
FriendsUpBtnHeight = 19
If 209 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 209 & ".png"
    FriendsUpBtnNormImage.Texture = NumTextures
End If
If 210 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 210 & ".png"
    FriendsUpBtnClickImage.Texture = NumTextures
End If
If 211 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 211 & ".png"
    FriendsUpBtnHoverImage.Texture = NumTextures
End If


'FriendsDownBtn
FriendsDownBtnX = 160
FriendsDownBtnY = 183
FriendsDownBtnWidth = 19
FriendsDownBtnHeight = 19
If 212 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 212 & ".png"
    FriendsDownBtnNormImage.Texture = NumTextures
End If
If 213 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 213 & ".png"
    FriendsDownBtnClickImage.Texture = NumTextures
End If
If 214 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    FriendsDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 214 & ".png"
    FriendsDownBtnHoverImage.Texture = NumTextures
End If


'AddFriendBtn
AddFriendBtnX = 6
AddFriendBtnY = 209
AddFriendBtnWidth = 89
AddFriendBtnHeight = 29
If 215 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddFriendBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 215 & ".png"
    AddFriendBtnNormImage.Texture = NumTextures
End If
If 216 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddFriendBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 216 & ".png"
    AddFriendBtnClickImage.Texture = NumTextures
End If
If 217 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AddFriendBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 217 & ".png"
    AddFriendBtnHoverImage.Texture = NumTextures
End If


'DelFriendBtn
DelFriendBtnX = 100
DelFriendBtnY = 209
DelFriendBtnWidth = 89
DelFriendBtnHeight = 29
If 218 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelFriendBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 218 & ".png"
    DelFriendBtnNormImage.Texture = NumTextures
End If
If 219 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelFriendBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 219 & ".png"
    DelFriendBtnClickImage.Texture = NumTextures
End If
If 220 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DelFriendBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 220 & ".png"
    DelFriendBtnHoverImage.Texture = NumTextures
End If


'CloseFriendsBtn
CloseFriendsBtnX = 196
CloseFriendsBtnY = 251
CloseFriendsBtnWidth = 19
CloseFriendsBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseFriendsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseFriendsBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseFriendsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseFriendsBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseFriendsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseFriendsBtnHoverImage.Texture = NumTextures
End If


'QuestsPnl
QuestsPnlX = 578
QuestsPnlY = 266
QuestsPnlWidth = 195
QuestsPnlHeight = 250
If 221 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestsPnlImage.filepath = App.path & GFX_PATH & "gui\" & 221 & ".png"
    QuestsPnlImage.Texture = NumTextures
End If


'QuestList
QuestListX = 16
QuestListY = 40
QuestListWidth = 137
QuestListHeight = 162


'QuestUpBtn
QuestUpBtnX = 160
QuestUpBtnY = 40
QuestUpBtnWidth = 19
QuestUpBtnHeight = 19
If 222 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 222 & ".png"
    QuestUpBtnNormImage.Texture = NumTextures
End If
If 223 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 223 & ".png"
    QuestUpBtnClickImage.Texture = NumTextures
End If
If 224 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 224 & ".png"
    QuestUpBtnHoverImage.Texture = NumTextures
End If


'QuestDownBtn
QuestDownBtnX = 160
QuestDownBtnY = 183
QuestDownBtnWidth = 19
QuestDownBtnHeight = 19
If 225 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 225 & ".png"
    QuestDownBtnNormImage.Texture = NumTextures
End If
If 226 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 226 & ".png"
    QuestDownBtnClickImage.Texture = NumTextures
End If
If 227 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 227 & ".png"
    QuestDownBtnHoverImage.Texture = NumTextures
End If


'QuestInfoBtn
QuestInfoBtnX = 43
QuestInfoBtnY = 209
QuestInfoBtnWidth = 89
QuestInfoBtnHeight = 29
If 228 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestInfoBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 228 & ".png"
    QuestInfoBtnNormImage.Texture = NumTextures
End If
If 229 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestInfoBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 229 & ".png"
    QuestInfoBtnClickImage.Texture = NumTextures
End If
If 230 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestInfoBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 230 & ".png"
    QuestInfoBtnHoverImage.Texture = NumTextures
End If


'CloseQuestsBtn
CloseQuestsBtnX = 196
CloseQuestsBtnY = 251
CloseQuestsBtnWidth = 19
CloseQuestsBtnHeight = 19
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseQuestsBtnNormImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseQuestsBtnClickImage.Texture = NumTextures
End If
If 0 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 0 & ".png"
    CloseQuestsBtnHoverImage.Texture = NumTextures
End If


'BankPnl
BankPnlX = 10
BankPnlY = 88
BankPnlWidth = 480
BankPnlHeight = 384
If 231 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    BankPnlImage.filepath = App.path & GFX_PATH & "gui\" & 231 & ".png"
    BankPnlImage.Texture = NumTextures
End If


'BankItems
BankItemsX = 38
BankItemsY = 34
BankItemsWidth = 400
BankItemsHeight = 310


'CloseBankBtn
CloseBankBtnX = 196
CloseBankBtnY = 349
CloseBankBtnWidth = 89
CloseBankBtnHeight = 29
If 232 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseBankBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 232 & ".png"
    CloseBankBtnNormImage.Texture = NumTextures
End If
If 233 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseBankBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 233 & ".png"
    CloseBankBtnClickImage.Texture = NumTextures
End If
If 234 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseBankBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 234 & ".png"
    CloseBankBtnHoverImage.Texture = NumTextures
End If


'ShopPnl
ShopPnlX = 10
ShopPnlY = 125
ShopPnlWidth = 252
ShopPnlHeight = 317
If 235 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ShopPnlImage.filepath = App.path & GFX_PATH & "gui\" & 235 & ".png"
    ShopPnlImage.Texture = NumTextures
End If


'ShopItems
ShopItemsX = 30
ShopItemsY = 38
ShopItemsWidth = 193
ShopItemsHeight = 211


'CloseShopBtn
CloseShopBtnX = 82
CloseShopBtnY = 270
CloseShopBtnWidth = 89
CloseShopBtnHeight = 29
If 236 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseShopBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 236 & ".png"
    CloseShopBtnNormImage.Texture = NumTextures
End If
If 237 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseShopBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 237 & ".png"
    CloseShopBtnClickImage.Texture = NumTextures
End If
If 238 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseShopBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 238 & ".png"
    CloseShopBtnHoverImage.Texture = NumTextures
End If


'ItemDescPnl
ItemDescPnlX = 574
ItemDescPnlY = 124
ItemDescPnlWidth = 202
ItemDescPnlHeight = 134
If 239 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ItemDescPnlImage.filepath = App.path & GFX_PATH & "gui\" & 239 & ".png"
    ItemDescPnlImage.Texture = NumTextures
End If


'ItemDescNameLbl
ItemDescNameLblX = 5
ItemDescNameLblY = 6
ItemDescNameLblWidth = 190
ItemDescNameLblHeight = 17


'ItemDescIcon
ItemDescIconX = 23
ItemDescIconY = 33
ItemDescIconWidth = 64
ItemDescIconHeight = 64


'ItemClassReqLbl
ItemClassReqLblX = 10
ItemClassReqLblY = 98
ItemClassReqLblWidth = 90
ItemClassReqLblHeight = 17


'ItemLevelReqLbl
ItemLevelReqLblX = 10
ItemLevelReqLblY = 112
ItemLevelReqLblWidth = 90
ItemLevelReqLblHeight = 17


'ItemDesc1
ItemDesc1X = 100
ItemDesc1Y = 24
ItemDesc1Width = 96
ItemDesc1Height = 17


'ItemDesc2
ItemDesc2X = 100
ItemDesc2Y = 36
ItemDesc2Width = 96
ItemDesc2Height = 17


'ItemDesc3
ItemDesc3X = 100
ItemDesc3Y = 48
ItemDesc3Width = 96
ItemDesc3Height = 17


'ItemDesc4
ItemDesc4X = 100
ItemDesc4Y = 60
ItemDesc4Width = 96
ItemDesc4Height = 17


'ItemDesc5
ItemDesc5X = 100
ItemDesc5Y = 72
ItemDesc5Width = 96
ItemDesc5Height = 17


'ItemDesc6
ItemDesc6X = 100
ItemDesc6Y = 84
ItemDesc6Width = 96
ItemDesc6Height = 17


'ItemDesc7
ItemDesc7X = 100
ItemDesc7Y = 96
ItemDesc7Width = 96
ItemDesc7Height = 17


'ItemDesc8
ItemDesc8X = 100
ItemDesc8Y = 108
ItemDesc8Width = 96
ItemDesc8Height = 17


'SpellDescPnl
SpellDescPnlX = 366
SpellDescPnlY = 266
SpellDescPnlWidth = 202
SpellDescPnlHeight = 134
If 240 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SpellDescPnlImage.filepath = App.path & GFX_PATH & "gui\" & 240 & ".png"
    SpellDescPnlImage.Texture = NumTextures
End If


'SpellDescNameLbl
SpellDescNameLblX = 5
SpellDescNameLblY = 6
SpellDescNameLblWidth = 190
SpellDescNameLblHeight = 17


'SpellDescIcon
SpellDescIconX = 23
SpellDescIconY = 33
SpellDescIconWidth = 64
SpellDescIconHeight = 64


'SpellDesc1
SpellDesc1X = 100
SpellDesc1Y = 24
SpellDesc1Width = 96
SpellDesc1Height = 17


'SpellDesc2
SpellDesc2X = 100
SpellDesc2Y = 36
SpellDesc2Width = 96
SpellDesc2Height = 17


'SpellDesc3
SpellDesc3X = 100
SpellDesc3Y = 48
SpellDesc3Width = 96
SpellDesc3Height = 17


'SpellDesc4
SpellDesc4X = 100
SpellDesc4Y = 60
SpellDesc4Width = 96
SpellDesc4Height = 17


'SpellDesc5
SpellDesc5X = 100
SpellDesc5Y = 72
SpellDesc5Width = 96
SpellDesc5Height = 17


'SpellDesc6
SpellDesc6X = 100
SpellDesc6Y = 84
SpellDesc6Width = 96
SpellDesc6Height = 17


'SpellDesc7
SpellDesc7X = 100
SpellDesc7Y = 96
SpellDesc7Width = 96
SpellDesc7Height = 17


'SpellDesc8
SpellDesc8X = 100
SpellDesc8Y = 108
SpellDesc8Width = 96
SpellDesc8Height = 17


'TradePnl
TradePnlX = 10
TradePnlY = 108
TradePnlWidth = 480
TradePnlHeight = 348
If 241 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TradePnlImage.filepath = App.path & GFX_PATH & "gui\" & 241 & ".png"
    TradePnlImage.Texture = NumTextures
End If


'YourTradePnl
YourTradePnlX = 32
YourTradePnlY = 32
YourTradePnlWidth = 172
YourTradePnlHeight = 242


'TheirTradePnl
TheirTradePnlX = 276
TheirTradePnlY = 32
TheirTradePnlWidth = 172
TheirTradePnlHeight = 242


'TradeStatusLbl
TradeStatusLblX = 3
TradeStatusLblY = 292
TradeStatusLblWidth = 474
TradeStatusLblHeight = 18


'YourWorthLbl
YourWorthLblX = 29
YourWorthLblY = 275
YourWorthLblWidth = 175
YourWorthLblHeight = 18


'TheirWorthLbl
TheirWorthLblX = 275
TheirWorthLblY = 274
TheirWorthLblWidth = 175
TheirWorthLblHeight = 18


'AcceptTradeBtn
AcceptTradeBtnX = 146
AcceptTradeBtnY = 312
AcceptTradeBtnWidth = 89
AcceptTradeBtnHeight = 29
If 242 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AcceptTradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 242 & ".png"
    AcceptTradeBtnNormImage.Texture = NumTextures
End If
If 243 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AcceptTradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 243 & ".png"
    AcceptTradeBtnClickImage.Texture = NumTextures
End If
If 244 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    AcceptTradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 244 & ".png"
    AcceptTradeBtnHoverImage.Texture = NumTextures
End If


'DeclineTradeBtn
DeclineTradeBtnX = 241
DeclineTradeBtnY = 312
DeclineTradeBtnWidth = 89
DeclineTradeBtnHeight = 29
If 245 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DeclineTradeBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 245 & ".png"
    DeclineTradeBtnNormImage.Texture = NumTextures
End If
If 246 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DeclineTradeBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 246 & ".png"
    DeclineTradeBtnClickImage.Texture = NumTextures
End If
If 247 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DeclineTradeBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 247 & ".png"
    DeclineTradeBtnHoverImage.Texture = NumTextures
End If


'DialoguePanel
DialoguePanelX = 10
DialoguePanelY = 474
DialoguePanelWidth = 432
DialoguePanelHeight = 162
If 248 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialoguePanelImage.filepath = App.path & GFX_PATH & "gui\" & 248 & ".png"
    DialoguePanelImage.Texture = NumTextures
End If


'DialogueTitle
DialogueTitleX = 3
DialogueTitleY = 8
DialogueTitleWidth = 426
DialogueTitleHeight = 13


'DialogueContent
DialogueContentX = 3
DialogueContentY = 28
DialogueContentWidth = 426
DialogueContentHeight = 60


'DialogueYesBtn
DialogueYesBtnX = 171
DialogueYesBtnY = 86
DialogueYesBtnWidth = 90
DialogueYesBtnHeight = 30
If 249 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueYesBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 249 & ".png"
    DialogueYesBtnNormImage.Texture = NumTextures
End If
If 250 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueYesBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 250 & ".png"
    DialogueYesBtnClickImage.Texture = NumTextures
End If
If 251 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueYesBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 251 & ".png"
    DialogueYesBtnHoverImage.Texture = NumTextures
End If


'DialogueNoBtn
DialogueNoBtnX = 171
DialogueNoBtnY = 121
DialogueNoBtnWidth = 90
DialogueNoBtnHeight = 30
If 252 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueNoBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 252 & ".png"
    DialogueNoBtnNormImage.Texture = NumTextures
End If
If 253 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueNoBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 253 & ".png"
    DialogueNoBtnClickImage.Texture = NumTextures
End If
If 254 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueNoBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 254 & ".png"
    DialogueNoBtnHoverImage.Texture = NumTextures
End If


'DialogueOkayBtn
DialogueOkayBtnX = 171
DialogueOkayBtnY = 110
DialogueOkayBtnWidth = 90
DialogueOkayBtnHeight = 30
If 255 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueOkayBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 255 & ".png"
    DialogueOkayBtnNormImage.Texture = NumTextures
End If
If 256 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueOkayBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 256 & ".png"
    DialogueOkayBtnClickImage.Texture = NumTextures
End If
If 257 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DialogueOkayBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 257 & ".png"
    DialogueOkayBtnHoverImage.Texture = NumTextures
End If


'CurrencyPanel
CurrencyPanelX = 10
CurrencyPanelY = 474
CurrencyPanelWidth = 432
CurrencyPanelHeight = 162
If 258 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyPanelImage.filepath = App.path & GFX_PATH & "gui\" & 258 & ".png"
    CurrencyPanelImage.Texture = NumTextures
End If


'CurrencyPrompt
CurrencyPromptX = 3
CurrencyPromptY = 25
CurrencyPromptWidth = 423
CurrencyPromptHeight = 19


'CurrencyInput
CurrencyInputX = 128
CurrencyInputY = 57
CurrencyInputWidth = 182
CurrencyInputHeight = 19


'CurrencyOkBtn
CurrencyOkBtnX = 181
CurrencyOkBtnY = 96
CurrencyOkBtnWidth = 69
CurrencyOkBtnHeight = 19
If 259 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyOkBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 259 & ".png"
    CurrencyOkBtnNormImage.Texture = NumTextures
End If
If 260 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyOkBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 260 & ".png"
    CurrencyOkBtnClickImage.Texture = NumTextures
End If
If 261 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyOkBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 261 & ".png"
    CurrencyOkBtnHoverImage.Texture = NumTextures
End If


'CurrencyCancelBtn
CurrencyCancelBtnX = 181
CurrencyCancelBtnY = 116
CurrencyCancelBtnWidth = 69
CurrencyCancelBtnHeight = 19
If 262 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyCancelBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 262 & ".png"
    CurrencyCancelBtnNormImage.Texture = NumTextures
End If
If 263 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyCancelBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 263 & ".png"
    CurrencyCancelBtnClickImage.Texture = NumTextures
End If
If 264 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CurrencyCancelBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 264 & ".png"
    CurrencyCancelBtnHoverImage.Texture = NumTextures
End If


'EventPnl
EventPnlX = 10
EventPnlY = 474
EventPnlWidth = 432
EventPnlHeight = 162
If 265 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    EventPnlImage.filepath = App.path & GFX_PATH & "gui\" & 265 & ".png"
    EventPnlImage.Texture = NumTextures
End If


'EventPrompt
EventPromptX = 8
EventPromptY = 10
EventPromptWidth = 410
EventPromptHeight = 81


'Response1Lbl
Response1LblX = 10
Response1LblY = 98
Response1LblWidth = 102
Response1LblHeight = 39


'Response2Lbl
Response2LblX = 113
Response2LblY = 98
Response2LblWidth = 102
Response2LblHeight = 39


'Response3Lbl
Response3LblX = 217
Response3LblY = 98
Response3LblWidth = 102
Response3LblHeight = 39


'Response4Lbl
Response4LblX = 316
Response4LblY = 98
Response4LblWidth = 102
Response4LblHeight = 39


'EventContinueLbl
EventContinueLblX = 312
EventContinueLblY = 121
EventContinueLblWidth = 103
EventContinueLblHeight = 21


'QuestLogPanel
QuestLogPanelX = 10
QuestLogPanelY = 142
QuestLogPanelWidth = 418
QuestLogPanelHeight = 238
If 266 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    QuestLogPanelImage.filepath = App.path & GFX_PATH & "gui\" & 266 & ".png"
    QuestLogPanelImage.Texture = NumTextures
End If


'QuestTitleLbl
QuestTitleLblX = 10
QuestTitleLblY = 9
QuestTitleLblWidth = 352
QuestTitleLblHeight = 18


'QuestPageContent
QuestPageContentX = 24
QuestPageContentY = 27
QuestPageContentWidth = 363
QuestPageContentHeight = 171


'QuestDeclineLbl
QuestDeclineLblX = 3
QuestDeclineLblY = 213
QuestDeclineLblWidth = 154
QuestDeclineLblHeight = 18


'QuestAcceptLbl
QuestAcceptLblX = 264
QuestAcceptLblY = 213
QuestAcceptLblWidth = 151
QuestAcceptLblHeight = 18


'QuitQuestLbl
QuitQuestLblX = 163
QuitQuestLblY = 213
QuitQuestLblWidth = 95
QuitQuestLblHeight = 18


'CloseQuestLogBtn
CloseQuestLogBtnX = 391
CloseQuestLogBtnY = 8
CloseQuestLogBtnWidth = 19
CloseQuestLogBtnHeight = 19
If 267 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestLogBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 267 & ".png"
    CloseQuestLogBtnNormImage.Texture = NumTextures
End If
If 268 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestLogBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 268 & ".png"
    CloseQuestLogBtnClickImage.Texture = NumTextures
End If
If 269 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseQuestLogBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 269 & ".png"
    CloseQuestLogBtnHoverImage.Texture = NumTextures
End If


'MailboxPnl
MailboxPnlX = 10
MailboxPnlY = 140
MailboxPnlWidth = 418
MailboxPnlHeight = 238
If 270 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    MailboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & 270 & ".png"
    MailboxPnlImage.Texture = NumTextures
End If


'CheckMailBtn
CheckMailBtnX = 164
CheckMailBtnY = 69
CheckMailBtnWidth = 89
CheckMailBtnHeight = 29
If 271 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CheckMailBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 271 & ".png"
    CheckMailBtnNormImage.Texture = NumTextures
End If
If 272 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CheckMailBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 272 & ".png"
    CheckMailBtnClickImage.Texture = NumTextures
End If
If 273 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CheckMailBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 273 & ".png"
    CheckMailBtnHoverImage.Texture = NumTextures
End If


'SendMailBtn
SendMailBtnX = 164
SendMailBtnY = 105
SendMailBtnWidth = 89
SendMailBtnHeight = 29
If 274 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMailBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 274 & ".png"
    SendMailBtnNormImage.Texture = NumTextures
End If
If 275 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMailBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 275 & ".png"
    SendMailBtnClickImage.Texture = NumTextures
End If
If 276 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMailBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 276 & ".png"
    SendMailBtnHoverImage.Texture = NumTextures
End If


'CloseMailboxBtn
CloseMailboxBtnX = 391
CloseMailboxBtnY = 8
CloseMailboxBtnWidth = 19
CloseMailboxBtnHeight = 19
If 277 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseMailboxBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 277 & ".png"
    CloseMailboxBtnNormImage.Texture = NumTextures
End If
If 278 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseMailboxBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 278 & ".png"
    CloseMailboxBtnClickImage.Texture = NumTextures
End If
If 279 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseMailboxBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 279 & ".png"
    CloseMailboxBtnHoverImage.Texture = NumTextures
End If


'InboxPnl
InboxPnlX = 10
InboxPnlY = 140
InboxPnlWidth = 418
InboxPnlHeight = 238
If 280 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    InboxPnlImage.filepath = App.path & GFX_PATH & "gui\" & 280 & ".png"
    InboxPnlImage.Texture = NumTextures
End If


'InboxList
InboxListX = 19
InboxListY = 27
InboxListWidth = 342
InboxListHeight = 204


'CloseInboxBtn
CloseInboxBtnX = 396
CloseInboxBtnY = 3
CloseInboxBtnWidth = 19
CloseInboxBtnHeight = 19
If 281 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInboxBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 281 & ".png"
    CloseInboxBtnNormImage.Texture = NumTextures
End If
If 282 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInboxBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 282 & ".png"
    CloseInboxBtnClickImage.Texture = NumTextures
End If
If 283 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    CloseInboxBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 283 & ".png"
    CloseInboxBtnHoverImage.Texture = NumTextures
End If


'SendMailPnl
SendMailPnlX = 10
SendMailPnlY = 140
SendMailPnlWidth = 418
SendMailPnlHeight = 238
If 290 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMailPnlImage.filepath = App.path & GFX_PATH & "gui\" & 290 & ".png"
    SendMailPnlImage.Texture = NumTextures
End If


'SendMessageTo
SendMessageToX = 93
SendMessageToY = 41
SendMessageToWidth = 307
SendMessageToHeight = 17


'SendMessageText
SendMessageTextX = 93
SendMessageTextY = 68
SendMessageTextWidth = 307
SendMessageTextHeight = 97


'SendMessageItem
SendMessageItemX = 93
SendMessageItemY = 171
SendMessageItemWidth = 32
SendMessageItemHeight = 32


'SendMessageBtn
SendMessageBtnX = 256
SendMessageBtnY = 204
SendMessageBtnWidth = 69
SendMessageBtnHeight = 19
If 291 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMessageBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 291 & ".png"
    SendMessageBtnNormImage.Texture = NumTextures
End If
If 292 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMessageBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 292 & ".png"
    SendMessageBtnClickImage.Texture = NumTextures
End If
If 293 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    SendMessageBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 293 & ".png"
    SendMessageBtnHoverImage.Texture = NumTextures
End If


'DiscardMessageBtn
DiscardMessageBtnX = 331
DiscardMessageBtnY = 204
DiscardMessageBtnWidth = 69
DiscardMessageBtnHeight = 19
If 294 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DiscardMessageBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 294 & ".png"
    DiscardMessageBtnNormImage.Texture = NumTextures
End If
If 295 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DiscardMessageBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 295 & ".png"
    DiscardMessageBtnClickImage.Texture = NumTextures
End If
If 296 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    DiscardMessageBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 296 & ".png"
    DiscardMessageBtnHoverImage.Texture = NumTextures
End If


'ReadLetterPnl
ReadLetterPnlX = 10
ReadLetterPnlY = 140
ReadLetterPnlWidth = 418
ReadLetterPnlHeight = 238
If 297 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ReadLetterPnlImage.filepath = App.path & GFX_PATH & "gui\" & 297 & ".png"
    ReadLetterPnlImage.Texture = NumTextures
End If


'MessageFrom
MessageFromX = 93
MessageFromY = 41
MessageFromWidth = 307
MessageFromHeight = 17


'MessageFromContent
MessageFromContentX = 93
MessageFromContentY = 68
MessageFromContentWidth = 307
MessageFromContentHeight = 97


'ItemReceived
ItemReceivedX = 93
ItemReceivedY = 171
ItemReceivedWidth = 32
ItemReceivedHeight = 32


'ReplyLetterBtn
ReplyLetterBtnX = 185
ReplyLetterBtnY = 204
ReplyLetterBtnWidth = 69
ReplyLetterBtnHeight = 19
If 298 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ReplyLetterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 298 & ".png"
    ReplyLetterBtnNormImage.Texture = NumTextures
End If
If 299 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ReplyLetterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 299 & ".png"
    ReplyLetterBtnClickImage.Texture = NumTextures
End If
If 300 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ReplyLetterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 300 & ".png"
    ReplyLetterBtnHoverImage.Texture = NumTextures
End If


'TrashLetterBtn
TrashLetterBtnX = 258
TrashLetterBtnY = 204
TrashLetterBtnWidth = 69
TrashLetterBtnHeight = 19
If 301 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TrashLetterBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 301 & ".png"
    TrashLetterBtnNormImage.Texture = NumTextures
End If
If 302 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TrashLetterBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 302 & ".png"
    TrashLetterBtnClickImage.Texture = NumTextures
End If
If 303 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    TrashLetterBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 303 & ".png"
    TrashLetterBtnHoverImage.Texture = NumTextures
End If


'StopReadingBtn
StopReadingBtnX = 331
StopReadingBtnY = 204
StopReadingBtnWidth = 69
StopReadingBtnHeight = 19
If 304 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    StopReadingBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 304 & ".png"
    StopReadingBtnNormImage.Texture = NumTextures
End If
If 305 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    StopReadingBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 305 & ".png"
    StopReadingBtnClickImage.Texture = NumTextures
End If
If 306 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    StopReadingBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 306 & ".png"
    StopReadingBtnHoverImage.Texture = NumTextures
End If

SetupSilver2

CacheInterfaceBounds
   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "SetupSilver", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub

Public Sub SetupSilver2()


   On Error GoTo errorhandler
   
'ScrlInboxUpBtn
ScrlInboxUpBtnX = 367
ScrlInboxUpBtnY = 27
ScrlInboxUpBtnWidth = 19
ScrlInboxUpBtnHeight = 19
If 284 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxUpBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 284 & ".png"
    ScrlInboxUpBtnNormImage.Texture = NumTextures
End If
If 285 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxUpBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 285 & ".png"
    ScrlInboxUpBtnClickImage.Texture = NumTextures
End If
If 286 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxUpBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 286 & ".png"
    ScrlInboxUpBtnHoverImage.Texture = NumTextures
End If


'ScrlInboxDownBtn
ScrlInboxDownBtnX = 367
ScrlInboxDownBtnY = 212
ScrlInboxDownBtnWidth = 19
ScrlInboxDownBtnHeight = 19
If 287 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxDownBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 287 & ".png"
    ScrlInboxDownBtnNormImage.Texture = NumTextures
End If
If 288 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxDownBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 288 & ".png"
    ScrlInboxDownBtnClickImage.Texture = NumTextures
End If
If 289 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    ScrlInboxDownBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 289 & ".png"
    ScrlInboxDownBtnHoverImage.Texture = NumTextures
End If

'PetPanel
PetPanelX = 578
PetPanelY = 266
PetPanelWidth = 195
PetPanelHeight = 250
If 308 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetPanelImage.filepath = App.path & GFX_PATH & "gui\" & 308 & ".png"
    PetPanelImage.Texture = NumTextures
End If


'PetName
PetNameX = 2
PetNameY = 7
PetNameWidth = 190
PetNameHeight = 17


'PetHPPanel
PetHPPanelX = 52
PetHPPanelY = 37
PetHPPanelWidth = 130
PetHPPanelHeight = 9
If 309 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetHPPanelImage.filepath = App.path & GFX_PATH & "gui\" & 309 & ".png"
    PetHPPanelImage.Texture = NumTextures
End If


'PetMPPanel
PetMPPanelX = 52
PetMPPanelY = 56
PetMPPanelWidth = 130
PetMPPanelHeight = 9
If 310 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetMPPanelImage.filepath = App.path & GFX_PATH & "gui\" & 310 & ".png"
    PetMPPanelImage.Texture = NumTextures
End If


'PetHptext
PetHPTextX = 53
PetHPTextY = 26
PetHPTextWidth = 130
PetHPTextHeight = 9


'PetMPtext
PetMPTextX = 53
PetMPTextY = 46
PetMPTextWidth = 130
PetMPTextHeight = 9


'PetIconpanel
PetIconPanelX = 16
PetIconPanelY = 31
PetIconPanelWidth = 32
PetIconPanelHeight = 32


'PetStrLabel
PetStrLabelX = 18
PetStrLabelY = 74
PetStrLabelWidth = 64
PetStrLabelHeight = 16


'PetEndLabel
PetEndLabelX = 18
PetEndLabelY = 89
PetEndLabelWidth = 64
PetEndLabelHeight = 16


'PetIntLabel
PetIntLabelX = 18
PetIntLabelY = 104
PetIntLabelWidth = 64
PetIntLabelHeight = 16


'PetAgiLabel
PetAgiLabelX = 98
PetAgiLabelY = 74
PetAgiLabelWidth = 64
PetAgiLabelHeight = 16


'PetWillLabel
PetWillLabelX = 98
PetWillLabelY = 89
PetWillLabelWidth = 64
PetWillLabelHeight = 16


'PetPntsLabel
PetPntsLabelX = 98
PetPntsLabelY = 104
PetPntsLabelWidth = 64
PetPntsLabelHeight = 16


'PetAddStrBtn
PetAddStrBtnX = 83
PetAddStrBtnY = 78
PetAddStrBtnWidth = 12
PetAddStrBtnHeight = 11
If 311 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddStrBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 311 & ".png"
    PetAddStrBtnNormImage.Texture = NumTextures
End If
If 312 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddStrBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 312 & ".png"
    PetAddStrBtnClickImage.Texture = NumTextures
End If
If 313 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddStrBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 313 & ".png"
    PetAddStrBtnHoverImage.Texture = NumTextures
End If


'PetAddEndBtn
PetAddEndBtnX = 83
PetAddEndBtnY = 91
PetAddEndBtnWidth = 12
PetAddEndBtnHeight = 11
If 314 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddEndBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 314 & ".png"
    PetAddEndBtnNormImage.Texture = NumTextures
End If
If 315 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddEndBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 315 & ".png"
    PetAddEndBtnClickImage.Texture = NumTextures
End If
If 316 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddEndBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 316 & ".png"
    PetAddEndBtnHoverImage.Texture = NumTextures
End If


'PetAddIntBtn
PetAddIntBtnX = 83
PetAddIntBtnY = 106
PetAddIntBtnWidth = 12
PetAddIntBtnHeight = 11
If 317 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddIntBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 317 & ".png"
    PetAddIntBtnNormImage.Texture = NumTextures
End If
If 318 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddIntBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 318 & ".png"
    PetAddIntBtnClickImage.Texture = NumTextures
End If
If 319 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddIntBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 319 & ".png"
    PetAddIntBtnHoverImage.Texture = NumTextures
End If


'PetAddAgiBtn
PetAddAgiBtnX = 164
PetAddAgiBtnY = 78
PetAddAgiBtnWidth = 12
PetAddAgiBtnHeight = 11
If 320 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddAgiBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 320 & ".png"
    PetAddAgiBtnNormImage.Texture = NumTextures
End If
If 321 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddAgiBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 321 & ".png"
    PetAddAgiBtnClickImage.Texture = NumTextures
End If
If 322 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddAgiBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 322 & ".png"
    PetAddAgiBtnHoverImage.Texture = NumTextures
End If


'PetAddWillBtn
PetAddWillBtnX = 164
PetAddWillBtnY = 91
PetAddWillBtnWidth = 12
PetAddWillBtnHeight = 11
If 323 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddWillBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 323 & ".png"
    PetAddWillBtnNormImage.Texture = NumTextures
End If
If 324 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddWillBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 324 & ".png"
    PetAddWillBtnClickImage.Texture = NumTextures
End If
If 325 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetAddWillBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 325 & ".png"
    PetAddWillBtnHoverImage.Texture = NumTextures
End If


'PetSpell1Panel
PetSpell1PanelX = 16
PetSpell1PanelY = 134
PetSpell1PanelWidth = 32
PetSpell1PanelHeight = 32


'PetSpell2Panel
PetSpell2PanelX = 99
PetSpell2PanelY = 134
PetSpell2PanelWidth = 32
PetSpell2PanelHeight = 32


'PetSpell3Panel
PetSpell3PanelX = 16
PetSpell3PanelY = 172
PetSpell3PanelWidth = 32
PetSpell3PanelHeight = 32


'PetSpell4Panel
PetSpell4PanelX = 99
PetSpell4PanelY = 172
PetSpell4PanelWidth = 32
PetSpell4PanelHeight = 32


'PetSpell1Label
PetSpell1LabelX = 52
PetSpell1LabelY = 134
PetSpell1LabelWidth = 48
PetSpell1LabelHeight = 31


'PetSpell2Label
PetSpell2LabelX = 134
PetSpell2LabelY = 135
PetSpell2LabelWidth = 48
PetSpell2LabelHeight = 31


'PetSpell3Label
PetSpell3LabelX = 52
PetSpell3LabelY = 171
PetSpell3LabelWidth = 48
PetSpell3LabelHeight = 31


'PetSpell4Label
PetSpell4LabelX = 134
PetSpell4LabelY = 172
PetSpell4LabelWidth = 48
PetSpell4LabelHeight = 31


'PetReleaseLabel
PetReleaseLabelX = 13
PetReleaseLabelY = 229
PetReleaseLabelWidth = 74
PetReleaseLabelHeight = 13


'PetsBtn
PetsBtnX = 156
PetsBtnY = 76
PetsBtnWidth = 69
PetsBtnHeight = 29
If 326 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetsBtnNormImage.filepath = App.path & GFX_PATH & "gui\" & 326 & ".png"
    PetsBtnNormImage.Texture = NumTextures
End If
If 327 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetsBtnClickImage.filepath = App.path & GFX_PATH & "gui\" & 327 & ".png"
    PetsBtnClickImage.Texture = NumTextures
End If
If 328 > 0 Then
    NumTextures = NumTextures + 1
    ReDim Preserve gTexture(NumTextures)
    PetsBtnHoverImage.filepath = App.path & GFX_PATH & "gui\" & 328 & ".png"
    PetsBtnHoverImage.Texture = NumTextures
End If



    


   On Error GoTo 0
   Exit Sub
errorhandler:
    HandleError "SetupSilver2", "modUserInterface", Err.Number, Err.Description, Erl
    Err.Clear
End Sub




